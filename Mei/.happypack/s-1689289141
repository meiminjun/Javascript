import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _Object$assign from 'babel-runtime/core-js/object/assign';

var _mutations;

import * as types from '../types';
import { http } from '../../util/ald';

import * as fit from '../../filters/deposit';

import { MessageBox } from 'mint-ui';
import * as deposit_detail from '../../api/deposit_detail';

var state = {
  orderDetail: {
    lists: {}
  },
  records: {
    lists: []
  },
  recordsFlag: true,
  withdraw: {
    data: {}
  },
  currentInterest: 0,
  total: "",
  pageNumber: 0,

  loading: 0,
  loadState: false,
  checkState: "加载更多",
  radioCheck: {},
  chineseNumWithdraw: "",
  protoShow: false,
  toAccountAmt: {
    accountAmt: "0.00",
    drawInterest: "0.00"
  },
  querySysFlag: "",
  sysFlag: ""
};

var getters = {};

var actions = {
  getOrderDetail: function getOrderDetail(_ref, options) {
    var commit = _ref.commit,
        state = _ref.state;

    var optionsReq = {
      url: "orderDetail",
      qs: {
        bussType: "9110",
        depSerialNo: options.depositNo,
        amt: options.amt,
        bankCardSign: options.bankCardSign,
        businessType: options.businessType,
        orderType: options.orderType,
        pageIndex: options.pageIndex,
        pageSize: 5,
        appType: "003"
      }
    };

    http.fetch(optionsReq).then(function (result) {

      if (result.responseCode === '000000') {
        result.data.TDueRate = "";
        if (result.data.rateInfoList) {
          for (var i = 0; i < result.data.rateInfoList.length; i++) {
            if (result.data.rateInfoList[i].type === "0") {
              if (result.data.rateInfoList[i].rateInfo) {
                result.data.timeDueRate = result.data.rateInfoList[i].rateInfo.drawRate;
                result.data.timeDueInterest = fit.formatMoneyNumber(result.data.rateInfoList[i].rateInfo.interest, "blur");
              }
            } else if (result.data.rateInfoList[i].type === "1") {
              if (result.data.rateInfoList[i].rateInfo) {
                result.data.TDueRate = result.data.rateInfoList[i].rateInfo.drawRate;
                result.data.TDueInterest = fit.formatMoneyNumber(result.data.rateInfoList[i].rateInfo.interest, "blur");
              }
            } else if (result.data.rateInfoList[i].type === "2") {
              if (result.data.rateInfoList[i].rateInfo) {
                result.data.dueRate = result.data.rateInfoList[i].rateInfo.drawRate;
                result.data.dueInterest = fit.formatMoneyNumber(result.data.rateInfoList[i].rateInfo.interest, "blur");
              }
            }
          }
        }

        result.data.recordsFlag = true;

        var querySystem = false,
            querySystemFlag = false;
        if (result.data.drawDetail) {
          for (var i = 0; i < result.data.drawDetail.orders.length; i++) {
            var item = result.data.drawDetail.orders[i];

            if (result.data.drawDetail.orders.length === 1 && item.businessType === "01") {
              result.data.recordsFlag = false;
            }

            item.addMinus = item.businessType === "01" ? "+" : "-";
            item.orderStatusCH = fit.orderStatusFun(item.tranStatus, item.businessType);
            item.orderTypeCH = fit.orderTypeFun(item.businessType);
            item.transAmtFort = fit.formatMoneyNumber(item.transAmt, "blur");
            if (item.orderStatusCH === '处理中' && item.businessType === '03') {
              querySystem = true;
            }
          }
        }

        if (querySystem) {
          if (result.data.drawDetail && result.data.drawDetail.totalNum > 1) {
            deposit_detail.default.getSystemDateTime({
              url: "getSystemDateTime",
              qs: {}
            }, function (res) {
              querySystemFlag = res >= 9 && res < 16 ? true : false;
              commit(types["QUERYSYSFLAG"], querySystemFlag);
            });
          }
        }

        result.data.expiryDateFort = result.data.expiryDate ? result.data.expiryDate.substr(0, 4) + '-' + result.data.expiryDate.substr(4, 2) + '-' + result.data.expiryDate.substr(-2) : "";
        result.data.orderTimeFort = result.data.orderTime ? result.data.orderTime.substr(0, 10) : "";
        result.data.saveDeadLine = fit.year(result.data.saveDeadLine);
        result.data.currency = fit.monetaryUnit(result.data.currency);
        result.data.transAmtFort = fit.formatMoneyNumber(result.data.transAmt, "blur");
        result.data.transAmtCH = fit.chineseNum(result.data.transAmt);

        if (!result.data.drawDetail) {
          result.data.drawDetail = { orders: [] };
        }
        commit(types["RECORDS"], { recordList: result.data.drawDetail.orders, pageIndex: options.pageIndex, total: result.data.drawDetail.totalNum });
        commit(types["ORDER_DETAIL"], { payload: result.data });
        result.data.lastFourNum = result.data.payeeAcctNo ? result.data.payeeAcctNo.substr(-4) : "";
      } else {
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  },
  getRecords: function getRecords(_ref2, options) {
    var commit = _ref2.commit,
        state = _ref2.state;

    var optionsReq = {
      url: "records",
      env: "stg3",
      qs: {
        bankCardSign: options.bankCardSign,
        businessType: "00",
        depSerialNo: options.depositNo,
        orderType: "02",
        pageIndex: options.pageIndex,
        pageSize: 10
      }
    };
    http.fetch(optionsReq).then(function (result) {
      if (result.responseCode === '000000') {
        var sys = false,
            sysFlag = false;
        for (var i = 0; i < result.data.orders.length; i++) {
          var item = result.data.orders[i];

          item.addMinus = item.businessType === "01" ? "+" : "-";
          item.orderStatusCH = fit.orderStatusFun(item.tranStatus, item.businessType);
          item.orderTypeCH = fit.orderTypeFun(item.businessType);
          item.transAmtFort = fit.formatMoneyNumber(item.transAmt, "blur");
          if (item.orderStatusCH === '处理中' && item.businessType === '03') {
            sys = true;
          }
        }
        if (sys) {
          if (result.data.drawDetail && result.data.drawDetail.totalNum > 1) {
            deposit_detail.default.getSystemDateTime({
              url: "getSystemDateTime",
              qs: {}
            }, function (res) {
              sysFlag = res >= 9 && res < 16 ? true : false;
              commit(types["SYSFLAG"], sysFlag);
            });
          }
        }

        commit(types["RECORDS"], { recordList: result.data.orders, pageIndex: options.pageIndex, total: result.data.totalNum });
        options.cb && options.cb();
      } else {
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  },
  getWithdraw: function getWithdraw(_ref3, options) {
    var commit = _ref3.commit,
        state = _ref3.state;

    var optionsReq = {
      url: "withdrawDeposit",
      qs: {
        amt: options.inputVal,
        bankCardSign: options.bankCardSign,
        currentDay: options.currentDay,
        depSerialNo: options.depSerialNo,
        isDepositFlag: "0",
        queryType: options.queryType,
        appType: "003",
        bussType: "9110",
        ccy: "RMB",
        param: "sunqin"
      }
    };
    http.fetch(optionsReq).then(function (result) {
      if (result.responseCode === '000000') {
        var protoShow = {};
        var radioData = {};
        result.data.isDrawFlagFinal = false;
        result.data.currentRate = result.data.preDrawInfos[0].drawRate ? result.data.preDrawInfos[0].drawRate : "";
        commit(types["CURRENTINTEREST"], { payload: result.data.currentRate });
        var tempWork = result.data.preDrawInfos[1].nextWorkDay;
        result.data.nextWorkDayFort = tempWork ? tempWork.substr(0, 4) + '-' + tempWork.substr(4, 2) + '-' + tempWork.substr(-2) : "";

        if (result.data.preDrawInfos[1].isDrawFlag === "1") {
          result.data.isDrawFlagFinal = true;
        }
        if (result.data.isDrawFlagFinal) {
          radioData.iconCh = false;
          radioData.iconChed = true;
          radioData.tFlag = "t1";
          protoShow.protoSh = true;
          protoShow.placeCon = result.data.placeholderAmt = fit.formatMoneyNumber(result.data.preDrawInfos[1].depositAmtMin, "blur") + "元起";
        } else {
          radioData.iconCh = true;
          radioData.iconChed = false;
          radioData.tFlag = "t0";
          protoShow.protoSh = false;
          protoShow.placeCon = result.data.placeholderAmt = "0.01元起";

          if (result.data.preDrawInfos[1].isDrawFlag !== "1") {
            result.data.t1Content = fit.disableWithdraw(result.data.preDrawInfos[1].isDrawFlag);
          }
        }
        result.data.tRate = result.data.preDrawInfos[1].drawRate ? result.data.preDrawInfos[1].drawRate : "";
        if (options.flag !== "calc") {
          commit(types["RADIOCHECK"], { payload: radioData });
          commit(types["DHT_WITHDRAWNUM"], "");
          commit(types["DHT_PROTOSHOW"], protoShow);
          commit(types["WITHDRAW"], { payload: result.data });
        }
      } else {
        var _radioData = { iconCh: true, iconChed: false };
        var _protoShow = {};
        _protoShow.protoSh = false;
        _protoShow.placeCon = "0.01元起";
        commit(types["RADIOCHECK"], { payload: _radioData });
        commit(types["DHT_PROTOSHOW"], _protoShow);
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  },
  queryDraw: function queryDraw(_ref4, options) {
    var commit = _ref4.commit,
        state = _ref4.state;

    var optionsReq = {
      url: "queryDraw",
      qs: {
        amt: options.inputVal,
        bankCardSign: options.bankCardSign,
        depSerialNo: options.depSerialNo,
        isDepositFlag: "0",
        queryType: options.queryType,
        appType: "003",
        bussType: "9110",
        ccy: "RMB",
        transDate: options.transDate,
        param: "sunqin"
      }
    };
    http.fetch(optionsReq).then(function (result) {
      if (result.responseCode === '000000') {
        var interestRes = '';
        if (options.queryType === "0") {
          interestRes = result.data.interest;
        } else if (options.queryType === "1") {
          interestRes = result.data.interest;
        }
        commit(types["WITHDRAWINTEREST"], { inputVal: options.inputVal, interest: interestRes });
      } else {
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  },
  canDraw: function canDraw(_ref5, options) {
    var commit = _ref5.commit,
        state = _ref5.state;

    var optionsReq = {
      url: "canDraw",
      qs: {
        amt: options.inputVal,
        bankCardSign: options.bankCardSign,
        currentDay: options.currentDay,
        depSerialNo: options.depSerialNo,
        isDepositFlag: "0",
        queryType: options.queryType,
        appType: "003",
        bussType: "9110",
        ccy: "RMB",
        param: "sunqin"
      }
    };
    http.fetch(optionsReq).then(function (result) {
      if (result.responseCode === '000000') {
        options.cb && options.cb(result.data);
      } else {
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  },
  creatOrder: function creatOrder(_ref6, options) {
    var commit = _ref6.commit,
        state = _ref6.state;

    var optionsReq = {
      url: "createOrder",
      env: "stg3",
      qs: {
        prdType: "09",
        transAmt: options.transAmt,
        transType: options.transType,
        bankCardSign: options.bankCardSign,
        depositNo: options.depositSerialNo,
        terminalType: "003",
        appType: "003",
        valueDate: options.valueDate
      }
    };
    http.fetch(optionsReq).then(function (result) {
      if (result.responseCode === '000000') {
        options.cb && options.cb(result.data);
      } else {
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  },
  getPaySearialNo: function getPaySearialNo(_ref7, options) {
    var commit = _ref7.commit,
        state = _ref7.state;

    var optionsReq = {
      url: "getPaySearialNo",
      env: "stg3",
      qs: {
        fundType: "09",
        orderAmount: options.orderAmount,
        orderNo: options.orderNo,
        bankCardSign: options.bankCardSign
      }
    };
    http.fetch(optionsReq).then(function (result) {
      if (result.responseCode === '000000') {
        options.cb && options.cb(result.data);
      } else {
        MessageBox.alert({
          title: '温馨提示',
          message: result.responseMsg
        });
      }
    });
  }
};

var mutations = (_mutations = {}, _defineProperty(_mutations, types.RADIOCHECK, function (state, _ref8) {
  var payload = _ref8.payload;

  state.radioCheck = payload;
}), _defineProperty(_mutations, types.ORDER_DETAIL, function (state, _ref9) {
  var payload = _ref9.payload;

  state.orderDetail.lists = payload;
  state.recordsFlag = payload.recordsFlag;
}), _defineProperty(_mutations, types.QUERYSYSFLAG, function (state, payload) {
  state.querySysFlag = payload;
}), _defineProperty(_mutations, types.SYSFLAG, function (state, payload) {
  state.sysFlag = payload;
}), _defineProperty(_mutations, types.RECORDS, function (state, payload) {
  if (payload.pageIndex == 1) {
    state.records.lists = payload.recordList;
  } else {
    state.records.lists = state.records.lists.concat(payload.recordList);
  }
  state.total = payload.total;
  state.loading = 0;
  if (payload.total == 0) {
    state.loadState = true;
  } else {
    state.loadState = false;
  }
  if (payload.pageIndex * 10 > payload.total || payload.total <= 10) {
    state.loading = 2;
    state.checkState = "已无更多数据";
  } else {
    state.checkState = "加载更多";
  }
}), _defineProperty(_mutations, 'DHT_RADIO', function DHT_RADIO(state) {
  state.radioCheck.iconCh = !state.radioCheck.iconCh;
  state.radioCheck.iconChed = !state.radioCheck.iconChed;
  if (state.radioCheck.tFlag === "t0") {
    state.radioCheck.tFlag = "t1";
  } else {
    state.radioCheck.tFlag = "t0";
  }
}), _defineProperty(_mutations, types.DHT_WITHDRAWNUM, function (state, payload) {
  state.chineseNumWithdraw = payload;
}), _defineProperty(_mutations, types.DHT_PROTOSHOW, function (state, payload) {
  state.protoShow = payload;
}), _defineProperty(_mutations, 'DHT_PROTOSHOWAGAIN', function DHT_PROTOSHOWAGAIN(state, payload) {
  state.protoShow.protoSh = payload;
  if (payload) {
    state.protoShow.placeCon = fit.formatMoneyNumber(state.withdraw.data.preDrawInfos[1].depositAmtMin, "blur") + "元起";
  } else {
    state.protoShow.placeCon = "0.01元起";
  }
}), _defineProperty(_mutations, 'DHT_CHINESENUM', function DHT_CHINESENUM(state, payload) {
  state.chineseNumWithdraw = payload;
}), _defineProperty(_mutations, types.WITHDRAW, function (state, _ref10) {
  var payload = _ref10.payload;

  state.withdraw.data = _Object$assign(state.withdraw.data, payload);
}), _defineProperty(_mutations, types.CURRENTINTEREST, function (state, _ref11) {
  var payload = _ref11.payload;

  state.currentInterest = payload;
}), _defineProperty(_mutations, types.WITHDRAWINTEREST, function (state, payload) {
  state.toAccountAmt.accountAmt = fit.formatMoneyNumber(Number(payload.inputVal) + Number(payload.interest), "blur");
  state.toAccountAmt.drawInterest = fit.formatMoneyNumber(payload.interest, "blur");
}), _mutations);

export default {
  state: state,
  getters: getters,
  actions: actions,
  mutations: mutations
};