{"version":3,"sources":["src/util/acc.js"],"names":["aladdin","config","bow","ald","ua","navigator","userAgent","getForwardUrl","prefix","search","hash","param","ohash","returnUrl","url","location","href","urls","split","forwardUrl","encodeURIComponent","replaceList","checkReplace","p","pathname","a","length","substr","lastIndexOf","indexOf","checkLogin","cb","isLogin","cookies","http","getCookie","host","err","cookie","islogin","tryLogin","auth","synLogout","console","error","info","launchLogin","replace","log","checkCard","checkAuth"],"mappings":"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","file":"acc.js","sourceRoot":"/Users/apple/Documents/github/Javascript/Mei","sourcesContent":["import aladdin from 'aladdin'\nimport config from '../../config'\nimport bow from 'bow'\nimport * as ald from './ald'\n\nconst ua = navigator.userAgent + ''\n\n// 291001～291007\nexport function getForwardUrl () {\n  let prefix = '', search = '', hash = '', param = '', ohash = '', returnUrl = ''\n  let url = location.href\n  let urls = url.split('#')\n  url = urls[0]\n  hash = urls[1] ? urls[1] : ''\n  url = url.split('?')\n  search = url[1] ? url[1] : ''\n  prefix = url[0]\n  if (hash) {\n    hash = hash.split('?')\n    ohash = hash[0]\n    param = hash[1] ? hash[1] : ''\n  }\n    // returnUrl = prefix+(search?'&'+search:'')+(param?'&'+param:'')+ohash;\n  if (search) {\n    search = '?' + search\n    if (param) {\n      param = '&' + param\n    }\n  } else {\n    if (param) {\n      param = '?' + param\n    }\n  }\n  returnUrl = prefix + search + param + '#' + ohash\n// 之前的登录\n/*  let forwardUrl = 'https://bank-static-stg.pingan.com.cn/pobing/index.html#/onelogin';\n  forwardUrl = forwardUrl.split('#')\n  return forwardUrl[0] + '?returnURL=' + encodeURIComponent(returnUrl) + (forwardUrl[1] ? '#' + forwardUrl[1] : '') */\n\n// 只做登录\n// https://bank-static-stg.pingan.com.cn/omm/mobile/login.html?backUrl=你想要跳回的地址(需要encodeURIComponent)\n// 需要验证是否需要绑定一账通\n// https://bank-static-stg.pingan.com.cn/omm/mobile/login.html?optCode=0010&backUrl=你想要跳回的地址(需要encodeURIComponent)\n// 需要验证账户是否异常\n// https://bank-static-stg.pingan.com.cn/omm/mobile/login.html?optCode=0100&backUrl=你想要跳回的地址(需要encodeURIComponent)\n// 既需要验证是否绑定一账通，还验证账户是否异常\n// https://bank-static-stg.pingan.com.cn/omm/mobile/login.html?optCode=0110&backUrl=你想要跳回的地址(需要encodeURIComponent)\n  let forwardUrl = 'https://bank-static-stg.pingan.com.cn/omm/mobile/login.html'\n  forwardUrl = forwardUrl.split('#')\n  return forwardUrl[0] + '?optCode=0110&backUrl=' + encodeURIComponent(returnUrl) + (forwardUrl[1] ? '#' + forwardUrl[1] : '')\n}\n\n// 检测是否需要replace跳转\nconst replaceList = ['pay.html', 'index.html']\nexport function checkReplace () {\n  let p = location.pathname\n  let a\n  if (p.length > 1) {\n    a = p.substr(p.lastIndexOf('/') + 1, p.length - 1)\n    if (replaceList.indexOf(a) != -1) {\n      return true\n    }\n    return false\n  } else {\n    return false\n  }\n}\n\n// 检测是否登录，此方法不能\nexport function checkLogin (cb) {\n  let isLogin = false\n  let cookies = bow.http.getCookie(location.host, 'OMM', function (err, cookie) {\n    if (err) {\n      isLogin = false\n    } else {\n      islogin = true\n    }\n    if (typeof (cb) === 'function') {\n      cb(cookie)\n    } else {\n      cb(isLogin)\n    }\n  })\n}\n\n// 登录\n// App内？\n// 是否登录\n// 未登录弹出native登录\n\n// App外？\n// 是否有cookie or statusCode == 291001?\n// 跑#/onelogin\nexport function tryLogin () {\n  if (ua.indexOf('AladdinHybrid') != -1) {\n    bow.auth.synLogout(function (err) {\n      if (err) {\n        console.error('登出异常！')\n        return\n      }\n      console.info('登出成功！')\n      bow.auth.launchLogin()\n    })\n  } else {\n    if (checkReplace()) {\n      location.replace(getForwardUrl())\n    } else {\n      console.log(getForwardUrl())\n      location.href = getForwardUrl()\n      // ald.nav.forward({ url: 'login', env: 'login' })\n            // ald.navigator.forwardTo({title:'登录',url:getForwardUrl()});\n    }\n  }\n}\n\n// 检测处理邦卡\nexport function checkCard () {\n    //\n}\n\n// 检测身份验证\nexport function checkAuth () {\n    //\n}\n"]}