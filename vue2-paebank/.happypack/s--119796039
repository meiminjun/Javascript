import _Promise from 'babel-runtime/core-js/promise';
import _defineProperty from 'babel-runtime/helpers/defineProperty';

var _mutations;

import Axios from 'axios';
import md5 from 'md5';

import * as types from '../types.js';

var state = {
  name: '',
  password: ''
};

var mutations = (_mutations = {}, _defineProperty(_mutations, types.UPDATEUSERNAME, function (state, message) {
  state.username = message;
}), _defineProperty(_mutations, types.UPDATEPASSWORD, function (state, message) {
  state.password = message;
}), _defineProperty(_mutations, types.LOGIN_SUCESS, function (state, rootState) {
  rootState.isLogin = true;
}), _mutations);

var actions = {
  login: function login(_ref, loginData) {
    var _this = this;

    var commit = _ref.commit,
        state = _ref.state,
        rootState = _ref.rootState;

    return new _Promise(function (resolve, reject) {
      console.log('+++++++++++++');
      console.log(rootState);
      var obj = {
        name: loginData.name,
        password: md5(loginData.password) };
      console.log('-------\u767B\u5F55-------');
      console.log(_this);
      Axios.post('/api/user', obj).then(function (res) {
        if (res.data.success) {
          commit(types.LOGIN_SUCESS, rootState);
          resolve(res);
        } else {
          reject(res);
        }
      }, function (err) {
        console.log(err);
        reject(err);
      });
    });
  }
};

export default {
  state: state,
  mutations: mutations,
  actions: actions
};