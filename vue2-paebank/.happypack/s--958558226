import _Object$create from "babel-runtime/core-js/object/create";
import _JSON$stringify from "babel-runtime/core-js/json/stringify";
import _Object$defineProperty from "babel-runtime/core-js/object/define-property";
import _typeof from "babel-runtime/helpers/typeof";

!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.aladdin = e();
}(this, function () {
  "use strict";
  function readonlyProperty(t, e, i) {
    _Object$defineProperty(t, e, { value: i, writable: !1 });
  }function callbackWrapper(t) {
    var e = function (e) {
      e && this.emit("error", e), t && "function" == typeof t && t.apply(null, arguments);
    }.bind(this);return e.keep = t.keep, e;
  }function Aladdin() {
    this._ts = new Date().getTime(), this._counter = 0, this._handlers = {}, this._subscribers = {}, this._middlewares = [], this._datas = {};
  }function BigInteger(t, e, i) {
    null != t && ("number" == typeof t ? this.fromNumber(t, e, i) : null == e && "string" != typeof t ? this.fromString(t, 256) : this.fromString(t, e));
  }function nbi() {
    return new BigInteger(null);
  }function am1(t, e, i, r, n, o) {
    for (var s = this; --o >= 0;) {
      var a = e * s[t++] + i[r] + n;n = Math.floor(a / 67108864), i[r++] = 67108863 & a;
    }return n;
  }function am2(t, e, i, r, n, o) {
    for (var s = this, a = 32767 & e, c = e >> 15; --o >= 0;) {
      var h = 32767 & s[t],
          p = s[t++] >> 15,
          u = c * h + p * a;h = a * h + ((32767 & u) << 15) + i[r] + (1073741823 & n), n = (h >>> 30) + (u >>> 15) + c * p + (n >>> 30), i[r++] = 1073741823 & h;
    }return n;
  }function am3(t, e, i, r, n, o) {
    for (var s = this, a = 16383 & e, c = e >> 14; --o >= 0;) {
      var h = 16383 & s[t],
          p = s[t++] >> 14,
          u = c * h + p * a;h = a * h + ((16383 & u) << 14) + i[r] + n, n = (h >> 28) + (u >> 14) + c * p, i[r++] = 268435455 & h;
    }return n;
  }function int2char(t) {
    return BI_RM.charAt(t);
  }function intAt(t, e) {
    var i = BI_RC[t.charCodeAt(e)];return null == i ? -1 : i;
  }function bnpCopyTo(t) {
    for (var e = this, i = this.t - 1; i >= 0; --i) {
      t[i] = e[i];
    }t.t = this.t, t.s = this.s;
  }function bnpFromInt(t) {
    this.t = 1, this.s = t < 0 ? -1 : 0, t > 0 ? this[0] = t : t < -1 ? this[0] = t + DV : this.t = 0;
  }function nbv(t) {
    var e = nbi();return e.fromInt(t), e;
  }function bnpFromString(t, e) {
    var i,
        r = this;if (16 == e) i = 4;else if (8 == e) i = 3;else if (256 == e) i = 8;else if (2 == e) i = 1;else if (32 == e) i = 5;else {
      if (4 != e) return void this.fromRadix(t, e);i = 2;
    }this.t = 0, this.s = 0;for (var n = t.length, o = !1, s = 0; --n >= 0;) {
      var a = 8 == i ? 255 & t[n] : intAt(t, n);a < 0 ? "-" == t.charAt(n) && (o = !0) : (o = !1, 0 == s ? r[r.t++] = a : s + i > r.DB ? (r[r.t - 1] |= (a & (1 << r.DB - s) - 1) << s, r[r.t++] = a >> r.DB - s) : r[r.t - 1] |= a << s, s += i, s >= r.DB && (s -= r.DB));
    }8 == i && 0 != (128 & t[0]) && (this.s = -1, s > 0 && (this[this.t - 1] |= (1 << this.DB - s) - 1 << s)), this.clamp(), o && BigInteger.ZERO.subTo(this, this);
  }function bnpClamp() {
    for (var t = this, e = this.s & this.DM; this.t > 0 && this[this.t - 1] == e;) {
      --t.t;
    }
  }function bnToString(t) {
    var e = this;if (this.s < 0) return "-" + this.negate().toString(t);var i;if (16 == t) i = 4;else if (8 == t) i = 3;else if (2 == t) i = 1;else if (32 == t) i = 5;else {
      if (4 != t) return this.toRadix(t);i = 2;
    }var r,
        n = (1 << i) - 1,
        o = !1,
        s = "",
        a = this.t,
        c = this.DB - a * this.DB % i;if (a-- > 0) for (c < this.DB && (r = this[a] >> c) > 0 && (o = !0, s = int2char(r)); a >= 0;) {
      c < i ? (r = (e[a] & (1 << c) - 1) << i - c, r |= e[--a] >> (c += e.DB - i)) : (r = e[a] >> (c -= i) & n, c <= 0 && (c += e.DB, --a)), r > 0 && (o = !0), o && (s += int2char(r));
    }return o ? s : "0";
  }function bnNegate() {
    var t = nbi();return BigInteger.ZERO.subTo(this, t), t;
  }function bnAbs() {
    return this.s < 0 ? this.negate() : this;
  }function bnCompareTo(t) {
    var e = this,
        i = this.s - t.s;if (0 != i) return i;var r = this.t;if (i = r - t.t, 0 != i) return i;for (; --r >= 0;) {
      if (0 != (i = e[r] - t[r])) return i;
    }return 0;
  }function nbits(t) {
    var e,
        i = 1;return 0 != (e = t >>> 16) && (t = e, i += 16), 0 != (e = t >> 8) && (t = e, i += 8), 0 != (e = t >> 4) && (t = e, i += 4), 0 != (e = t >> 2) && (t = e, i += 2), 0 != (e = t >> 1) && (t = e, i += 1), i;
  }function bnBitLength() {
    return this.t <= 0 ? 0 : this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ this.s & this.DM);
  }function bnpDLShiftTo(t, e) {
    var i,
        r = this;for (i = this.t - 1; i >= 0; --i) {
      e[i + t] = r[i];
    }for (i = t - 1; i >= 0; --i) {
      e[i] = 0;
    }e.t = this.t + t, e.s = this.s;
  }function bnpDRShiftTo(t, e) {
    for (var i = this, r = t; r < this.t; ++r) {
      e[r - t] = i[r];
    }e.t = Math.max(this.t - t, 0), e.s = this.s;
  }function bnpLShiftTo(t, e) {
    var i,
        r = this,
        n = t % this.DB,
        o = this.DB - n,
        s = (1 << o) - 1,
        a = Math.floor(t / this.DB),
        c = this.s << n & this.DM;for (i = this.t - 1; i >= 0; --i) {
      e[i + a + 1] = r[i] >> o | c, c = (r[i] & s) << n;
    }for (i = a - 1; i >= 0; --i) {
      e[i] = 0;
    }e[a] = c, e.t = this.t + a + 1, e.s = this.s, e.clamp();
  }function bnpRShiftTo(t, e) {
    var i = this;e.s = this.s;var r = Math.floor(t / this.DB);if (r >= this.t) return void (e.t = 0);var n = t % this.DB,
        o = this.DB - n,
        s = (1 << n) - 1;e[0] = this[r] >> n;for (var a = r + 1; a < this.t; ++a) {
      e[a - r - 1] |= (i[a] & s) << o, e[a - r] = i[a] >> n;
    }n > 0 && (e[this.t - r - 1] |= (this.s & s) << o), e.t = this.t - r, e.clamp();
  }function bnpSubTo(t, e) {
    for (var i = this, r = 0, n = 0, o = Math.min(t.t, this.t); r < o;) {
      n += i[r] - t[r], e[r++] = n & i.DM, n >>= i.DB;
    }if (t.t < this.t) {
      for (n -= t.s; r < this.t;) {
        n += i[r], e[r++] = n & i.DM, n >>= i.DB;
      }n += this.s;
    } else {
      for (n += this.s; r < t.t;) {
        n -= t[r], e[r++] = n & i.DM, n >>= i.DB;
      }n -= t.s;
    }e.s = n < 0 ? -1 : 0, n < -1 ? e[r++] = this.DV + n : n > 0 && (e[r++] = n), e.t = r, e.clamp();
  }function bnpMultiplyTo(t, e) {
    var i = this.abs(),
        r = t.abs(),
        n = i.t;for (e.t = n + r.t; --n >= 0;) {
      e[n] = 0;
    }for (n = 0; n < r.t; ++n) {
      e[n + i.t] = i.am(0, r[n], e, n, 0, i.t);
    }e.s = 0, e.clamp(), this.s != t.s && BigInteger.ZERO.subTo(e, e);
  }function bnpSquareTo(t) {
    for (var e = this.abs(), i = t.t = 2 * e.t; --i >= 0;) {
      t[i] = 0;
    }for (i = 0; i < e.t - 1; ++i) {
      var r = e.am(i, e[i], t, 2 * i, 0, 1);(t[i + e.t] += e.am(i + 1, 2 * e[i], t, 2 * i + 1, r, e.t - i - 1)) >= e.DV && (t[i + e.t] -= e.DV, t[i + e.t + 1] = 1);
    }t.t > 0 && (t[t.t - 1] += e.am(i, e[i], t, 2 * i, 0, 1)), t.s = 0, t.clamp();
  }function bnpDivRemTo(t, e, i) {
    var r = this,
        n = t.abs();if (!(n.t <= 0)) {
      var o = this.abs();if (o.t < n.t) return null != e && e.fromInt(0), void (null != i && this.copyTo(i));null == i && (i = nbi());var s = nbi(),
          a = this.s,
          c = t.s,
          h = this.DB - nbits(n[n.t - 1]);h > 0 ? (n.lShiftTo(h, s), o.lShiftTo(h, i)) : (n.copyTo(s), o.copyTo(i));var p = s.t,
          u = s[p - 1];if (0 != u) {
        var l = u * (1 << this.F1) + (p > 1 ? s[p - 2] >> this.F2 : 0),
            f = this.FV / l,
            d = (1 << this.F1) / l,
            g = 1 << this.F2,
            F = i.t,
            y = F - p,
            v = null == e ? nbi() : e;for (s.dlShiftTo(y, v), i.compareTo(v) >= 0 && (i[i.t++] = 1, i.subTo(v, i)), BigInteger.ONE.dlShiftTo(p, v), v.subTo(s, s); s.t < p;) {
          s[s.t++] = 0;
        }for (; --y >= 0;) {
          var m = i[--F] == u ? r.DM : Math.floor(i[F] * f + (i[F - 1] + g) * d);if ((i[F] += s.am(0, m, i, y, 0, p)) < m) for (s.dlShiftTo(y, v), i.subTo(v, i); i[F] < --m;) {
            i.subTo(v, i);
          }
        }null != e && (i.drShiftTo(p, e), a != c && BigInteger.ZERO.subTo(e, e)), i.t = p, i.clamp(), h > 0 && i.rShiftTo(h, i), a < 0 && BigInteger.ZERO.subTo(i, i);
      }
    }
  }function bnMod(t) {
    var e = nbi();return this.abs().divRemTo(t, null, e), this.s < 0 && e.compareTo(BigInteger.ZERO) > 0 && t.subTo(e, e), e;
  }function Classic(t) {
    this.m = t;
  }function cConvert(t) {
    return t.s < 0 || t.compareTo(this.m) >= 0 ? t.mod(this.m) : t;
  }function cRevert(t) {
    return t;
  }function cReduce(t) {
    t.divRemTo(this.m, null, t);
  }function cMulTo(t, e, i) {
    t.multiplyTo(e, i), this.reduce(i);
  }function cSqrTo(t, e) {
    t.squareTo(e), this.reduce(e);
  }function bnpInvDigit() {
    if (this.t < 1) return 0;var t = this[0];if (0 == (1 & t)) return 0;var e = 3 & t;return e = e * (2 - (15 & t) * e) & 15, e = e * (2 - (255 & t) * e) & 255, e = e * (2 - ((65535 & t) * e & 65535)) & 65535, e = e * (2 - t * e % this.DV) % this.DV, e > 0 ? this.DV - e : -e;
  }function Montgomery(t) {
    this.m = t, this.mp = t.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << t.DB - 15) - 1, this.mt2 = 2 * t.t;
  }function montConvert(t) {
    var e = nbi();return t.abs().dlShiftTo(this.m.t, e), e.divRemTo(this.m, null, e), t.s < 0 && e.compareTo(BigInteger.ZERO) > 0 && this.m.subTo(e, e), e;
  }function montRevert(t) {
    var e = nbi();return t.copyTo(e), this.reduce(e), e;
  }function montReduce(t) {
    for (var e = this; t.t <= this.mt2;) {
      t[t.t++] = 0;
    }for (var i = 0; i < this.m.t; ++i) {
      var r = 32767 & t[i],
          n = r * e.mpl + ((r * e.mph + (t[i] >> 15) * e.mpl & e.um) << 15) & t.DM;for (r = i + e.m.t, t[r] += e.m.am(0, n, t, i, 0, e.m.t); t[r] >= t.DV;) {
        t[r] -= t.DV, t[++r]++;
      }
    }t.clamp(), t.drShiftTo(this.m.t, t), t.compareTo(this.m) >= 0 && t.subTo(this.m, t);
  }function montSqrTo(t, e) {
    t.squareTo(e), this.reduce(e);
  }function montMulTo(t, e, i) {
    t.multiplyTo(e, i), this.reduce(i);
  }function bnpIsEven() {
    return 0 == (this.t > 0 ? 1 & this[0] : this.s);
  }function bnpExp(t, e) {
    if (t > 4294967295 || t < 1) return BigInteger.ONE;var i = nbi(),
        r = nbi(),
        n = e.convert(this),
        o = nbits(t) - 1;for (n.copyTo(i); --o >= 0;) {
      if (e.sqrTo(i, r), (t & 1 << o) > 0) e.mulTo(r, n, i);else {
        var s = i;i = r, r = s;
      }
    }return e.revert(i);
  }function bnModPowInt(t, e) {
    var i;return i = t < 256 || e.isEven() ? new Classic(e) : new Montgomery(e), this.exp(t, i);
  }function Arcfour() {
    this.i = 0, this.j = 0, this.S = new Array();
  }function ARC4init(t) {
    var e,
        i,
        r,
        n = this;for (e = 0; e < 256; ++e) {
      n.S[e] = e;
    }for (i = 0, e = 0; e < 256; ++e) {
      i = i + n.S[e] + t[e % t.length] & 255, r = n.S[e], n.S[e] = n.S[i], n.S[i] = r;
    }this.i = 0, this.j = 0;
  }function ARC4next() {
    var t;return this.i = this.i + 1 & 255, this.j = this.j + this.S[this.i] & 255, t = this.S[this.i], this.S[this.i] = this.S[this.j], this.S[this.j] = t, this.S[t + this.S[this.i] & 255];
  }function prng_newstate() {
    return new Arcfour();
  }function rng_seed_int(t) {
    rng_pool[rng_pptr++] ^= 255 & t, rng_pool[rng_pptr++] ^= t >> 8 & 255, rng_pool[rng_pptr++] ^= t >> 16 & 255, rng_pool[rng_pptr++] ^= t >> 24 & 255, rng_pptr >= rng_psize && (rng_pptr -= rng_psize);
  }function rng_seed_time() {
    rng_seed_int(new Date().getTime());
  }function rng_get_byte() {
    if (null == rng_state) {
      for (rng_seed_time(), rng_state = prng_newstate(), rng_state.init(rng_pool), rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
        rng_pool[rng_pptr] = 0;
      }rng_pptr = 0;
    }return rng_state.next();
  }function rng_get_bytes(t) {
    var e;for (e = 0; e < t.length; ++e) {
      t[e] = rng_get_byte();
    }
  }function SecureRandom() {}function parseBigInt(t, e) {
    return new BigInteger(t, e);
  }function pkcs1pad2(t, e) {
    if (e < t.length + 2) return alert("\u5BC6\u7801\u592A\u957F!"), null;var i = new Array(),
        r = t.length - 1,
        n = t.length;if (!(n < 100)) return alert("\u5BC6\u7801\u592A\u957F!"), null;i[0] = 48 + n / 10, i[1] = 48 + n % 10;var o = 2;for (r = 0; r < n && e > 0;) {
      i[o++] = t.charCodeAt(r++);
    }for (var s = new SecureRandom(), a = new Array(); o < e;) {
      for (a[0] = 0; 0 == a[0];) {
        s.nextBytes(a);
      }i[o++] = a[0];
    }return new BigInteger(i);
  }function RSASetPublic(t, e) {
    null != t && null != e && t.length > 0 && e.length > 0 ? (this.n = parseBigInt(t, 16), this.e = parseInt(e, 16)) : alert("Invalid RSA public key");
  }function RSADoPublic(t) {
    return t.modPowInt(this.e, this.n);
  }function RSAEncrypt(t) {
    var e = pkcs1pad2(t, this.n.bitLength() + 7 >> 3);if (null == e) return null;var i = this.doPublic(e);if (null == i) return null;for (var r = i.toString(16).toUpperCase(), n = 256 - r.length, o = 0; o < n; o += 1) {
      r = "0" + r;
    }return r;
  }function b64tohex(t) {
    var e,
        i,
        r = "",
        n = 0;for (e = 0; e < t.length && t.charAt(e) != b64pad; ++e) {
      v = b64map.indexOf(t.charAt(e)), v < 0 || (0 == n ? (r += int2char(v >> 2), i = 3 & v, n = 1) : 1 == n ? (r += int2char(i << 2 | v >> 4), i = 15 & v, n = 2) : 2 == n ? (r += int2char(i), r += int2char(v >> 2), i = 3 & v, n = 3) : (r += int2char(i << 2 | v >> 4), r += int2char(15 & v), n = 0));
    }return 1 == n && (r += int2char(i << 2)), r;
  }function BigInteger$1(t, e, i) {
    null != t && ("number" == typeof t ? this.fromNumber(t, e, i) : null == e && "string" != typeof t ? this.fromString(t, 256) : this.fromString(t, e));
  }function nbi$1() {
    return new BigInteger$1(null);
  }function am1$1(t, e, i, r, n, o) {
    for (var s = this; 0 <= --o;) {
      var a = e * s[t++] + i[r] + n;n = Math.floor(a / 67108864), i[r++] = 67108863 & a;
    }return n;
  }function am2$1(t, e, i, r, n, o) {
    var s = this,
        a = 32767 & e;for (e >>= 15; 0 <= --o;) {
      var c = 32767 & s[t],
          h = s[t++] >> 15,
          p = e * c + h * a,
          c = a * c + ((32767 & p) << 15) + i[r] + (1073741823 & n);n = (c >>> 30) + (p >>> 15) + e * h + (n >>> 30), i[r++] = 1073741823 & c;
    }return n;
  }function am3$1(t, e, i, r, n, o) {
    var s = this,
        a = 16383 & e;for (e >>= 14; 0 <= --o;) {
      var c = 16383 & s[t],
          h = s[t++] >> 14,
          p = e * c + h * a,
          c = a * c + ((16383 & p) << 14) + i[r] + n;n = (c >> 28) + (p >> 14) + e * h, i[r++] = 268435455 & c;
    }return n;
  }function int2char$1(t) {
    return BI_RM$1.charAt(t);
  }function intAt$1(t, e) {
    var i = BI_RC$1[t.charCodeAt(e)];return null == i ? -1 : i;
  }function bnpCopyTo$1(t) {
    for (var e = this, i = this.t - 1; 0 <= i; --i) {
      t[i] = e[i];
    }t.t = this.t, t.s = this.s;
  }function bnpFromInt$1(t) {
    this.t = 1, this.s = 0 > t ? -1 : 0, 0 < t ? this[0] = t : -1 > t ? this[0] = t + this.DV : this.t = 0;
  }function nbv$1(t) {
    var e = nbi$1();return e.fromInt(t), e;
  }function bnpFromString$1(t, e) {
    var i,
        r = this;if (16 == e) i = 4;else if (8 == e) i = 3;else if (256 == e) i = 8;else if (2 == e) i = 1;else if (32 == e) i = 5;else {
      if (4 != e) return void this.fromRadix(t, e);i = 2;
    }this.s = this.t = 0;for (var n = t.length, o = !1, s = 0; 0 <= --n;) {
      var a = 8 == i ? 255 & t[n] : intAt$1(t, n);0 > a ? "-" == t.charAt(n) && (o = !0) : (o = !1, 0 == s ? r[r.t++] = a : s + i > r.DB ? (r[r.t - 1] |= (a & (1 << r.DB - s) - 1) << s, r[r.t++] = a >> r.DB - s) : r[r.t - 1] |= a << s, s += i, s >= r.DB && (s -= r.DB));
    }8 == i && 0 != (128 & t[0]) && (this.s = -1, 0 < s && (this[this.t - 1] |= (1 << this.DB - s) - 1 << s)), this.clamp(), o && BigInteger$1.ZERO.subTo(this, this);
  }function bnpClamp$1() {
    for (var t = this, e = this.s & this.DM; 0 < this.t && this[this.t - 1] == e;) {
      --t.t;
    }
  }function bnToString$1(t) {
    var e = this;if (0 > this.s) return "-" + this.negate().toString(t);if (16 == t) t = 4;else if (8 == t) t = 3;else if (2 == t) t = 1;else if (32 == t) t = 5;else {
      if (4 != t) return this.toRadix(t);t = 2;
    }var i,
        r = (1 << t) - 1,
        n = !1,
        o = "",
        s = this.t,
        a = this.DB - s * this.DB % t;if (0 < s--) for (a < this.DB && 0 < (i = this[s] >> a) && (n = !0, o = int2char$1(i)); 0 <= s;) {
      a < t ? (i = (e[s] & (1 << a) - 1) << t - a, i |= e[--s] >> (a += e.DB - t)) : (i = e[s] >> (a -= t) & r, 0 >= a && (a += e.DB, --s)), 0 < i && (n = !0), n && (o += int2char$1(i));
    }return n ? o : "0";
  }function bnNegate$1() {
    var t = nbi$1();return BigInteger$1.ZERO.subTo(this, t), t;
  }function bnAbs$1() {
    return 0 > this.s ? this.negate() : this;
  }function bnCompareTo$1(t) {
    var e = this,
        i = this.s - t.s;if (0 != i) return i;var r = this.t,
        i = r - t.t;if (0 != i) return 0 > this.s ? -i : i;for (; 0 <= --r;) {
      if (0 != (i = e[r] - t[r])) return i;
    }return 0;
  }function nbits$1(t) {
    var e,
        i = 1;return 0 != (e = t >>> 16) && (t = e, i += 16), 0 != (e = t >> 8) && (t = e, i += 8), 0 != (e = t >> 4) && (t = e, i += 4), 0 != (e = t >> 2) && (t = e, i += 2), 0 != t >> 1 && (i += 1), i;
  }function bnBitLength$1() {
    return 0 >= this.t ? 0 : this.DB * (this.t - 1) + nbits$1(this[this.t - 1] ^ this.s & this.DM);
  }function bnpDLShiftTo$1(t, e) {
    var i,
        r = this;for (i = this.t - 1; 0 <= i; --i) {
      e[i + t] = r[i];
    }for (i = t - 1; 0 <= i; --i) {
      e[i] = 0;
    }e.t = this.t + t, e.s = this.s;
  }function bnpDRShiftTo$1(t, e) {
    for (var i = this, r = t; r < this.t; ++r) {
      e[r - t] = i[r];
    }e.t = Math.max(this.t - t, 0), e.s = this.s;
  }function bnpLShiftTo$1(t, e) {
    var i,
        r = this,
        n = t % this.DB,
        o = this.DB - n,
        s = (1 << o) - 1,
        a = Math.floor(t / this.DB),
        c = this.s << n & this.DM;for (i = this.t - 1; 0 <= i; --i) {
      e[i + a + 1] = r[i] >> o | c, c = (r[i] & s) << n;
    }for (i = a - 1; 0 <= i; --i) {
      e[i] = 0;
    }e[a] = c, e.t = this.t + a + 1, e.s = this.s, e.clamp();
  }function bnpRShiftTo$1(t, e) {
    var i = this;e.s = this.s;var r = Math.floor(t / this.DB);if (r >= this.t) e.t = 0;else {
      var n = t % this.DB,
          o = this.DB - n,
          s = (1 << n) - 1;e[0] = this[r] >> n;for (var a = r + 1; a < this.t; ++a) {
        e[a - r - 1] |= (i[a] & s) << o, e[a - r] = i[a] >> n;
      }0 < n && (e[this.t - r - 1] |= (this.s & s) << o), e.t = this.t - r, e.clamp();
    }
  }function bnpSubTo$1(t, e) {
    for (var i = this, r = 0, n = 0, o = Math.min(t.t, this.t); r < o;) {
      n += i[r] - t[r], e[r++] = n & i.DM, n >>= i.DB;
    }if (t.t < this.t) {
      for (n -= t.s; r < this.t;) {
        n += i[r], e[r++] = n & i.DM, n >>= i.DB;
      }n += this.s;
    } else {
      for (n += this.s; r < t.t;) {
        n -= t[r], e[r++] = n & i.DM, n >>= i.DB;
      }n -= t.s;
    }e.s = 0 > n ? -1 : 0, -1 > n ? e[r++] = this.DV + n : 0 < n && (e[r++] = n), e.t = r, e.clamp();
  }function bnpMultiplyTo$1(t, e) {
    var i = this.abs(),
        r = t.abs(),
        n = i.t;for (e.t = n + r.t; 0 <= --n;) {
      e[n] = 0;
    }for (n = 0; n < r.t; ++n) {
      e[n + i.t] = i.am(0, r[n], e, n, 0, i.t);
    }e.s = 0, e.clamp(), this.s != t.s && BigInteger$1.ZERO.subTo(e, e);
  }function bnpSquareTo$1(t) {
    for (var e = this.abs(), i = t.t = 2 * e.t; 0 <= --i;) {
      t[i] = 0;
    }for (i = 0; i < e.t - 1; ++i) {
      var r = e.am(i, e[i], t, 2 * i, 0, 1);(t[i + e.t] += e.am(i + 1, 2 * e[i], t, 2 * i + 1, r, e.t - i - 1)) >= e.DV && (t[i + e.t] -= e.DV, t[i + e.t + 1] = 1);
    }0 < t.t && (t[t.t - 1] += e.am(i, e[i], t, 2 * i, 0, 1)), t.s = 0, t.clamp();
  }function bnpDivRemTo$1(t, e, i) {
    var r = this,
        n = t.abs();if (!(0 >= n.t)) {
      var o = this.abs();if (o.t < n.t) null != e && e.fromInt(0), null != i && this.copyTo(i);else {
        null == i && (i = nbi$1());var s = nbi$1(),
            a = this.s;t = t.s;var c = this.DB - nbits$1(n[n.t - 1]);if (0 < c ? (n.lShiftTo(c, s), o.lShiftTo(c, i)) : (n.copyTo(s), o.copyTo(i)), n = s.t, o = s[n - 1], 0 != o) {
          var h = o * (1 << this.F1) + (1 < n ? s[n - 2] >> this.F2 : 0),
              p = this.FV / h,
              h = (1 << this.F1) / h,
              u = 1 << this.F2,
              l = i.t,
              f = l - n,
              d = null == e ? nbi$1() : e;for (s.dlShiftTo(f, d), 0 <= i.compareTo(d) && (i[i.t++] = 1, i.subTo(d, i)), BigInteger$1.ONE.dlShiftTo(n, d), d.subTo(s, s); s.t < n;) {
            s[s.t++] = 0;
          }for (; 0 <= --f;) {
            var g = i[--l] == o ? r.DM : Math.floor(i[l] * p + (i[l - 1] + u) * h);if ((i[l] += s.am(0, g, i, f, 0, n)) < g) for (s.dlShiftTo(f, d), i.subTo(d, i); i[l] < --g;) {
              i.subTo(d, i);
            }
          }null != e && (i.drShiftTo(n, e), a != t && BigInteger$1.ZERO.subTo(e, e)), i.t = n, i.clamp(), 0 < c && i.rShiftTo(c, i), 0 > a && BigInteger$1.ZERO.subTo(i, i);
        }
      }
    }
  }function bnMod$1(t) {
    var e = nbi$1();return this.abs().divRemTo(t, null, e), 0 > this.s && 0 < e.compareTo(BigInteger$1.ZERO) && t.subTo(e, e), e;
  }function Classic$1(t) {
    this.m = t;
  }function cConvert$1(t) {
    return 0 > t.s || 0 <= t.compareTo(this.m) ? t.mod(this.m) : t;
  }function cRevert$1(t) {
    return t;
  }function cReduce$1(t) {
    t.divRemTo(this.m, null, t);
  }function cMulTo$1(t, e, i) {
    t.multiplyTo(e, i), this.reduce(i);
  }function cSqrTo$1(t, e) {
    t.squareTo(e), this.reduce(e);
  }function bnpInvDigit$1() {
    if (1 > this.t) return 0;var t = this[0];if (0 == (1 & t)) return 0;var e = 3 & t,
        e = e * (2 - (15 & t) * e) & 15,
        e = e * (2 - (255 & t) * e) & 255,
        e = e * (2 - ((65535 & t) * e & 65535)) & 65535,
        e = e * (2 - t * e % this.DV) % this.DV;return 0 < e ? this.DV - e : -e;
  }function Montgomery$1(t) {
    this.m = t, this.mp = t.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << t.DB - 15) - 1, this.mt2 = 2 * t.t;
  }function montConvert$1(t) {
    var e = nbi$1();return t.abs().dlShiftTo(this.m.t, e), e.divRemTo(this.m, null, e), 0 > t.s && 0 < e.compareTo(BigInteger$1.ZERO) && this.m.subTo(e, e), e;
  }function montRevert$1(t) {
    var e = nbi$1();return t.copyTo(e), this.reduce(e), e;
  }function montReduce$1(t) {
    for (var e = this; t.t <= this.mt2;) {
      t[t.t++] = 0;
    }for (var i = 0; i < this.m.t; ++i) {
      var r = 32767 & t[i],
          n = r * e.mpl + ((r * e.mph + (t[i] >> 15) * e.mpl & e.um) << 15) & t.DM,
          r = i + e.m.t;for (t[r] += this.m.am(0, n, t, i, 0, this.m.t); t[r] >= t.DV;) {
        t[r] -= t.DV, t[++r]++;
      }
    }t.clamp(), t.drShiftTo(this.m.t, t), 0 <= t.compareTo(this.m) && t.subTo(this.m, t);
  }function montSqrTo$1(t, e) {
    t.squareTo(e), this.reduce(e);
  }function montMulTo$1(t, e, i) {
    t.multiplyTo(e, i), this.reduce(i);
  }function bnpIsEven$1() {
    return 0 == (0 < this.t ? 1 & this[0] : this.s);
  }function bnpExp$1(t, e) {
    if (4294967295 < t || 1 > t) return BigInteger$1.ONE;var i = nbi$1(),
        r = nbi$1(),
        n = e.convert(this),
        o = nbits$1(t) - 1;for (n.copyTo(i); 0 <= --o;) {
      if (e.sqrTo(i, r), 0 < (t & 1 << o)) e.mulTo(r, n, i);else var s = i,
          i = r,
          r = s;
    }return e.revert(i);
  }function bnModPowInt$1(t, e) {
    var i;return i = 256 > t || e.isEven() ? new Classic$1(e) : new Montgomery$1(e), this.exp(t, i);
  }function bnClone() {
    var t = nbi$1();return this.copyTo(t), t;
  }function bnIntValue() {
    if (0 > this.s) {
      if (1 == this.t) return this[0] - this.DV;if (0 == this.t) return -1;
    } else {
      if (1 == this.t) return this[0];if (0 == this.t) return 0;
    }return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0];
  }function bnByteValue() {
    return 0 == this.t ? this.s : this[0] << 24 >> 24;
  }function bnShortValue() {
    return 0 == this.t ? this.s : this[0] << 16 >> 16;
  }function bnpChunkSize(t) {
    return Math.floor(Math.LN2 * this.DB / Math.log(t));
  }function bnSigNum() {
    return 0 > this.s ? -1 : 0 >= this.t || 1 == this.t && 0 >= this[0] ? 0 : 1;
  }function bnpToRadix(t) {
    if (null == t && (t = 10), 0 == this.signum() || 2 > t || 36 < t) return "0";var e = this.chunkSize(t),
        e = Math.pow(t, e),
        i = nbv$1(e),
        r = nbi$1(),
        n = nbi$1(),
        o = "";for (this.divRemTo(i, r, n); 0 < r.signum();) {
      o = (e + n.intValue()).toString(t).substr(1) + o, r.divRemTo(i, r, n);
    }return n.intValue().toString(t) + o;
  }function bnpFromRadix(t, e) {
    var i = this;this.fromInt(0), null == e && (e = 10);for (var r = this.chunkSize(e), n = Math.pow(e, r), o = !1, s = 0, a = 0, c = 0; c < t.length; ++c) {
      var h = intAt$1(t, c);0 > h ? "-" == t.charAt(c) && 0 == i.signum() && (o = !0) : (a = e * a + h, ++s >= r && (i.dMultiply(n), i.dAddOffset(a, 0), a = s = 0));
    }0 < s && (this.dMultiply(Math.pow(e, s)), this.dAddOffset(a, 0)), o && BigInteger$1.ZERO.subTo(this, this);
  }function bnpFromNumber(t, e, i) {
    var r = this;if ("number" == typeof e) {
      if (2 > t) this.fromInt(1);else for (this.fromNumber(t, i), this.testBit(t - 1) || this.bitwiseTo(BigInteger$1.ONE.shiftLeft(t - 1), op_or, this), this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(e);) {
        r.dAddOffset(2, 0), r.bitLength() > t && r.subTo(BigInteger$1.ONE.shiftLeft(t - 1), r);
      }
    } else {
      i = [];var n = 7 & t;i.length = (t >> 3) + 1, e.nextBytes(i), i[0] = 0 < n ? i[0] & (1 << n) - 1 : 0, this.fromString(i, 256);
    }
  }function bnToByteArray() {
    var t = this,
        e = this.t,
        i = [];i[0] = this.s;var r,
        n = this.DB - e * this.DB % 8,
        o = 0;if (0 < e--) for (n < this.DB && (r = this[e] >> n) != (this.s & this.DM) >> n && (i[o++] = r | this.s << this.DB - n); 0 <= e;) {
      8 > n ? (r = (t[e] & (1 << n) - 1) << 8 - n, r |= t[--e] >> (n += t.DB - 8)) : (r = t[e] >> (n -= 8) & 255, 0 >= n && (n += t.DB, --e)), 0 != (128 & r) && (r |= -256), 0 == o && (128 & t.s) != (128 & r) && ++o, (0 < o || r != t.s) && (i[o++] = r);
    }return i;
  }function bnEquals(t) {
    return 0 == this.compareTo(t);
  }function bnMin(t) {
    return 0 > this.compareTo(t) ? this : t;
  }function bnMax(t) {
    return 0 < this.compareTo(t) ? this : t;
  }function bnpBitwiseTo(t, e, i) {
    var r,
        n,
        o = this,
        s = Math.min(t.t, this.t);for (r = 0; r < s; ++r) {
      i[r] = e(o[r], t[r]);
    }if (t.t < this.t) {
      for (n = t.s & this.DM, r = s; r < this.t; ++r) {
        i[r] = e(o[r], n);
      }i.t = this.t;
    } else {
      for (n = this.s & this.DM, r = s; r < t.t; ++r) {
        i[r] = e(n, t[r]);
      }i.t = t.t;
    }i.s = e(this.s, t.s), i.clamp();
  }function op_and(t, e) {
    return t & e;
  }function bnAnd(t) {
    var e = nbi$1();return this.bitwiseTo(t, op_and, e), e;
  }function op_or(t, e) {
    return t | e;
  }function bnOr(t) {
    var e = nbi$1();return this.bitwiseTo(t, op_or, e), e;
  }function op_xor(t, e) {
    return t ^ e;
  }function bnXor(t) {
    var e = nbi$1();return this.bitwiseTo(t, op_xor, e), e;
  }function op_andnot(t, e) {
    return t & ~e;
  }function bnAndNot(t) {
    var e = nbi$1();return this.bitwiseTo(t, op_andnot, e), e;
  }function bnNot() {
    for (var t = this, e = nbi$1(), i = 0; i < this.t; ++i) {
      e[i] = t.DM & ~t[i];
    }return e.t = this.t, e.s = ~this.s, e;
  }function bnShiftLeft(t) {
    var e = nbi$1();return 0 > t ? this.rShiftTo(-t, e) : this.lShiftTo(t, e), e;
  }function bnShiftRight(t) {
    var e = nbi$1();return 0 > t ? this.lShiftTo(-t, e) : this.rShiftTo(t, e), e;
  }function lbit(t) {
    if (0 == t) return -1;var e = 0;return 0 == (65535 & t) && (t >>= 16, e += 16), 0 == (255 & t) && (t >>= 8, e += 8), 0 == (15 & t) && (t >>= 4, e += 4), 0 == (3 & t) && (t >>= 2, e += 2), 0 == (1 & t) && ++e, e;
  }function bnGetLowestSetBit() {
    for (var t = this, e = 0; e < this.t; ++e) {
      if (0 != t[e]) return e * t.DB + lbit(t[e]);
    }return 0 > this.s ? this.t * this.DB : -1;
  }function cbit(t) {
    for (var e = 0; 0 != t;) {
      t &= t - 1, ++e;
    }return e;
  }function bnBitCount() {
    for (var t = this, e = 0, i = this.s & this.DM, r = 0; r < this.t; ++r) {
      e += cbit(t[r] ^ i);
    }return e;
  }function bnTestBit(t) {
    var e = Math.floor(t / this.DB);return e >= this.t ? 0 != this.s : 0 != (this[e] & 1 << t % this.DB);
  }function bnpChangeBit(t, e) {
    var i = BigInteger$1.ONE.shiftLeft(t);return this.bitwiseTo(i, e, i), i;
  }function bnSetBit(t) {
    return this.changeBit(t, op_or);
  }function bnClearBit(t) {
    return this.changeBit(t, op_andnot);
  }function bnFlipBit(t) {
    return this.changeBit(t, op_xor);
  }function bnpAddTo(t, e) {
    for (var i = this, r = 0, n = 0, o = Math.min(t.t, this.t); r < o;) {
      n += i[r] + t[r], e[r++] = n & i.DM, n >>= i.DB;
    }if (t.t < this.t) {
      for (n += t.s; r < this.t;) {
        n += i[r], e[r++] = n & i.DM, n >>= i.DB;
      }n += this.s;
    } else {
      for (n += this.s; r < t.t;) {
        n += t[r], e[r++] = n & i.DM, n >>= i.DB;
      }n += t.s;
    }e.s = 0 > n ? -1 : 0, 0 < n ? e[r++] = n : -1 > n && (e[r++] = this.DV + n), e.t = r, e.clamp();
  }function bnAdd(t) {
    var e = nbi$1();return this.addTo(t, e), e;
  }function bnSubtract(t) {
    var e = nbi$1();return this.subTo(t, e), e;
  }function bnMultiply(t) {
    var e = nbi$1();return this.multiplyTo(t, e), e;
  }function bnSquare() {
    var t = nbi$1();return this.squareTo(t), t;
  }function bnDivide(t) {
    var e = nbi$1();return this.divRemTo(t, e, null), e;
  }function bnRemainder(t) {
    var e = nbi$1();return this.divRemTo(t, null, e), e;
  }function bnDivideAndRemainder(t) {
    var e = nbi$1(),
        i = nbi$1();return this.divRemTo(t, e, i), [e, i];
  }function bnpDMultiply(t) {
    this[this.t] = this.am(0, t - 1, this, 0, 0, this.t), ++this.t, this.clamp();
  }function bnpDAddOffset(t, e) {
    var i = this;if (0 != t) {
      for (; this.t <= e;) {
        i[i.t++] = 0;
      }for (this[e] += t; this[e] >= this.DV;) {
        i[e] -= i.DV, ++e >= i.t && (i[i.t++] = 0), ++i[e];
      }
    }
  }function NullExp() {}function nNop(t) {
    return t;
  }function nMulTo(t, e, i) {
    t.multiplyTo(e, i);
  }function nSqrTo(t, e) {
    t.squareTo(e);
  }function bnPow(t) {
    return this.exp(t, new NullExp());
  }function bnpMultiplyLowerTo(t, e, i) {
    var r = this,
        n = Math.min(this.t + t.t, e);for (i.s = 0, i.t = n; 0 < n;) {
      i[--n] = 0;
    }var o;for (o = i.t - this.t; n < o; ++n) {
      i[n + r.t] = r.am(0, t[n], i, n, 0, r.t);
    }for (o = Math.min(t.t, e); n < o; ++n) {
      r.am(0, t[n], i, n, 0, e - n);
    }i.clamp();
  }function bnpMultiplyUpperTo(t, e, i) {
    var r = this;--e;var n = i.t = this.t + t.t - e;for (i.s = 0; 0 <= --n;) {
      i[n] = 0;
    }for (n = Math.max(e - this.t, 0); n < t.t; ++n) {
      i[r.t + n - e] = r.am(e - n, t[n], i, 0, 0, r.t + n - e);
    }i.clamp(), i.drShiftTo(1, i);
  }function Barrett(t) {
    this.r2 = nbi$1(), this.q3 = nbi$1(), BigInteger$1.ONE.dlShiftTo(2 * t.t, this.r2), this.mu = this.r2.divide(t), this.m = t;
  }function barrettConvert(t) {
    if (0 > t.s || t.t > 2 * this.m.t) return t.mod(this.m);if (0 > t.compareTo(this.m)) return t;var e = nbi$1();return t.copyTo(e), this.reduce(e), e;
  }function barrettRevert(t) {
    return t;
  }function barrettReduce(t) {
    var e = this;for (t.drShiftTo(this.m.t - 1, this.r2), t.t > this.m.t + 1 && (t.t = this.m.t + 1, t.clamp()), this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3), this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); 0 > t.compareTo(this.r2);) {
      t.dAddOffset(1, e.m.t + 1);
    }for (t.subTo(this.r2, t); 0 <= t.compareTo(this.m);) {
      t.subTo(e.m, t);
    }
  }function barrettSqrTo(t, e) {
    t.squareTo(e), this.reduce(e);
  }function barrettMulTo(t, e, i) {
    t.multiplyTo(e, i), this.reduce(i);
  }function bnModPow(t, e) {
    var i,
        r,
        n = this,
        o = t.bitLength(),
        s = nbv$1(1);if (0 >= o) return s;i = 18 > o ? 1 : 48 > o ? 3 : 144 > o ? 4 : 768 > o ? 5 : 6, r = 8 > o ? new Classic$1(e) : e.isEven() ? new Barrett(e) : new Montgomery$1(e);var a = [],
        c = 3,
        h = i - 1,
        p = (1 << i) - 1;if (a[1] = r.convert(this), 1 < i) for (o = nbi$1(), r.sqrTo(a[1], o); c <= p;) {
      a[c] = nbi$1(), r.mulTo(o, a[c - 2], a[c]), c += 2;
    }for (var u, l = t.t - 1, f = !0, d = nbi$1(), o = nbits$1(t[l]) - 1; 0 <= l;) {
      for (o >= h ? u = t[l] >> o - h & p : (u = (t[l] & (1 << o + 1) - 1) << h - o, 0 < l && (u |= t[l - 1] >> n.DB + o - h)), c = i; 0 == (1 & u);) {
        u >>= 1, --c;
      }if (0 > (o -= c) && (o += n.DB, --l), f) a[u].copyTo(s), f = !1;else {
        for (; 1 < c;) {
          r.sqrTo(s, d), r.sqrTo(d, s), c -= 2;
        }0 < c ? r.sqrTo(s, d) : (c = s, s = d, d = c), r.mulTo(d, a[u], s);
      }for (; 0 <= l && 0 == (t[l] & 1 << o);) {
        r.sqrTo(s, d), c = s, s = d, d = c, 0 > --o && (o = n.DB - 1, --l);
      }
    }return r.revert(s);
  }function bnGCD(t) {
    var e = 0 > this.s ? this.negate() : this.clone();if (t = 0 > t.s ? t.negate() : t.clone(), 0 > e.compareTo(t)) {
      var i = e,
          e = t;t = i;
    }var i = e.getLowestSetBit(),
        r = t.getLowestSetBit();if (0 > r) return e;for (i < r && (r = i), 0 < r && (e.rShiftTo(r, e), t.rShiftTo(r, t)); 0 < e.signum();) {
      0 < (i = e.getLowestSetBit()) && e.rShiftTo(i, e), 0 < (i = t.getLowestSetBit()) && t.rShiftTo(i, t), 0 <= e.compareTo(t) ? (e.subTo(t, e), e.rShiftTo(1, e)) : (t.subTo(e, t), t.rShiftTo(1, t));
    }return 0 < r && t.lShiftTo(r, t), t;
  }function bnpModInt(t) {
    var e = this;if (0 >= t) return 0;var i = this.DV % t,
        r = 0 > this.s ? t - 1 : 0;if (0 < this.t) if (0 == i) r = this[0] % t;else for (var n = this.t - 1; 0 <= n; --n) {
      r = (i * r + e[n]) % t;
    }return r;
  }function bnModInverse(t) {
    var e = this,
        i = t.isEven();if (this.isEven() && i || 0 == t.signum()) return BigInteger$1.ZERO;for (var r = t.clone(), n = this.clone(), o = nbv$1(1), s = nbv$1(0), a = nbv$1(0), c = nbv$1(1); 0 != r.signum();) {
      for (; r.isEven();) {
        r.rShiftTo(1, r), i ? (o.isEven() && s.isEven() || (o.addTo(e, o), s.subTo(t, s)), o.rShiftTo(1, o)) : s.isEven() || s.subTo(t, s), s.rShiftTo(1, s);
      }for (; n.isEven();) {
        n.rShiftTo(1, n), i ? (a.isEven() && c.isEven() || (a.addTo(e, a), c.subTo(t, c)), a.rShiftTo(1, a)) : c.isEven() || c.subTo(t, c), c.rShiftTo(1, c);
      }0 <= r.compareTo(n) ? (r.subTo(n, r), i && o.subTo(a, o), s.subTo(c, s)) : (n.subTo(r, n), i && a.subTo(o, a), c.subTo(s, c));
    }return 0 != n.compareTo(BigInteger$1.ONE) ? BigInteger$1.ZERO : 0 <= c.compareTo(t) ? c.subtract(t) : 0 > c.signum() ? (c.addTo(t, c), 0 > c.signum() ? c.add(t) : c) : c;
  }function bnIsProbablePrime(t) {
    var e,
        i = this.abs();if (1 == i.t && i[0] <= lowprimes[lowprimes.length - 1]) {
      for (e = 0; e < lowprimes.length; ++e) {
        if (i[0] == lowprimes[e]) return !0;
      }return !1;
    }if (i.isEven()) return !1;for (e = 1; e < lowprimes.length;) {
      for (var r = lowprimes[e], n = e + 1; n < lowprimes.length && r < lplim;) {
        r *= lowprimes[n++];
      }for (r = i.modInt(r); e < n;) {
        if (0 == r % lowprimes[e++]) return !1;
      }
    }return i.millerRabin(t);
  }function bnpMillerRabin(t) {
    var e = this,
        i = this.subtract(BigInteger$1.ONE),
        r = i.getLowestSetBit();if (0 >= r) return !1;var n = i.shiftRight(r);t = t + 1 >> 1, t > lowprimes.length && (t = lowprimes.length);for (var o = nbi$1(), s = 0; s < t; ++s) {
      o.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);var a = o.modPow(n, e);if (0 != a.compareTo(BigInteger$1.ONE) && 0 != a.compareTo(i)) {
        for (var c = 1; c++ < r && 0 != a.compareTo(i);) {
          if (a = a.modPowInt(2, e), 0 == a.compareTo(BigInteger$1.ONE)) return !1;
        }if (0 != a.compareTo(i)) return !1;
      }
    }return !0;
  }function Arcfour$1() {
    this.j = this.i = 0, this.S = [];
  }function ARC4init$1(t) {
    var e,
        i,
        r,
        n = this;for (e = 0; 256 > e; ++e) {
      n.S[e] = e;
    }for (e = i = 0; 256 > e; ++e) {
      i = i + n.S[e] + t[e % t.length] & 255, r = n.S[e], n.S[e] = n.S[i], n.S[i] = r;
    }this.j = this.i = 0;
  }function ARC4next$1() {
    var t;return this.i = this.i + 1 & 255, this.j = this.j + this.S[this.i] & 255, t = this.S[this.i], this.S[this.i] = this.S[this.j], this.S[this.j] = t, this.S[t + this.S[this.i] & 255];
  }function prng_newstate$1() {
    return new Arcfour$1();
  }function rng_seed_int$1(t) {
    rng_pool$1[rng_pptr$1++] ^= 255 & t, rng_pool$1[rng_pptr$1++] ^= t >> 8 & 255, rng_pool$1[rng_pptr$1++] ^= t >> 16 & 255, rng_pool$1[rng_pptr$1++] ^= t >> 24 & 255, rng_pptr$1 >= rng_psize$1 && (rng_pptr$1 -= rng_psize$1);
  }function rng_seed_time$1() {
    rng_seed_int$1(new Date().getTime());
  }function rng_get_byte$1() {
    if (null == rng_state$1) {
      for (rng_seed_time$1(), rng_state$1 = prng_newstate$1(), rng_state$1.init(rng_pool$1), rng_pptr$1 = 0; rng_pptr$1 < rng_pool$1.length; ++rng_pptr$1) {
        rng_pool$1[rng_pptr$1] = 0;
      }rng_pptr$1 = 0;
    }return rng_state$1.next();
  }function rng_get_bytes$1(t) {
    var e;for (e = 0; e < t.length; ++e) {
      t[e] = rng_get_byte$1();
    }
  }function SecureRandom$1() {}function ECFieldElementFp(t, e) {
    this.x = e, this.q = t;
  }function feFpEquals(t) {
    return t == this || this.q.equals(t.q) && this.x.equals(t.x);
  }function feFpToBigInteger() {
    return this.x;
  }function feFpNegate() {
    return new ECFieldElementFp(this.q, this.x.negate().mod(this.q));
  }function feFpAdd(t) {
    return new ECFieldElementFp(this.q, this.x.add(t.toBigInteger()).mod(this.q));
  }function feFpSubtract(t) {
    return new ECFieldElementFp(this.q, this.x.subtract(t.toBigInteger()).mod(this.q));
  }function feFpMultiply(t) {
    return new ECFieldElementFp(this.q, this.x.multiply(t.toBigInteger()).mod(this.q));
  }function feFpSquare() {
    return new ECFieldElementFp(this.q, this.x.square().mod(this.q));
  }function feFpDivide(t) {
    return new ECFieldElementFp(this.q, this.x.multiply(t.toBigInteger().modInverse(this.q)).mod(this.q));
  }function ECPointFp(t, e, i, r) {
    this.curve = t, this.x = e, this.y = i, this.z = null == r ? BigInteger$1.ONE : r, this.zinv = null;
  }function pointFpGetX() {
    return null == this.zinv && (this.zinv = this.z.modInverse(this.curve.q)), this.curve.fromBigInteger(this.x.toBigInteger().multiply(this.zinv).mod(this.curve.q));
  }function pointFpGetY() {
    return null == this.zinv && (this.zinv = this.z.modInverse(this.curve.q)), this.curve.fromBigInteger(this.y.toBigInteger().multiply(this.zinv).mod(this.curve.q));
  }function pointFpEquals(t) {
    return t == this || (this.isInfinity() ? t.isInfinity() : t.isInfinity() ? this.isInfinity() : !!t.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(t.z)).mod(this.curve.q).equals(BigInteger$1.ZERO) && t.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(t.z)).mod(this.curve.q).equals(BigInteger$1.ZERO));
  }function pointFpIsInfinity() {
    return null == this.x && null == this.y || this.z.equals(BigInteger$1.ZERO) && !this.y.toBigInteger().equals(BigInteger$1.ZERO);
  }function pointFpNegate() {
    return new ECPointFp(this.curve, this.x, this.y.negate(), this.z);
  }function pointFpAdd(t) {
    if (this.isInfinity()) return t;if (t.isInfinity()) return this;var e = t.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(t.z)).mod(this.curve.q),
        i = t.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(t.z)).mod(this.curve.q);if (BigInteger$1.ZERO.equals(i)) return BigInteger$1.ZERO.equals(e) ? this.twice() : this.curve.getInfinity();var r = new BigInteger$1("3"),
        n = this.x.toBigInteger(),
        o = this.y.toBigInteger();t.x.toBigInteger(), t.y.toBigInteger();var s = i.square(),
        a = s.multiply(i),
        n = n.multiply(s),
        s = e.square().multiply(this.z),
        i = s.subtract(n.shiftLeft(1)).multiply(t.z).subtract(a).multiply(i).mod(this.curve.q),
        e = n.multiply(r).multiply(e).subtract(o.multiply(a)).subtract(s.multiply(e)).multiply(t.z).add(e.multiply(a)).mod(this.curve.q);return t = a.multiply(this.z).multiply(t.z).mod(this.curve.q), new ECPointFp(this.curve, this.curve.fromBigInteger(i), this.curve.fromBigInteger(e), t);
  }function pointFpTwice() {
    if (this.isInfinity()) return this;if (0 == this.y.toBigInteger().signum()) return this.curve.getInfinity();var t = new BigInteger$1("3"),
        e = this.x.toBigInteger(),
        i = this.y.toBigInteger(),
        r = i.multiply(this.z),
        n = r.multiply(i).mod(this.curve.q),
        i = this.curve.a.toBigInteger(),
        o = e.square().multiply(t);return BigInteger$1.ZERO.equals(i) || (o = o.add(this.z.square().multiply(i))), o = o.mod(this.curve.q), i = o.square().subtract(e.shiftLeft(3).multiply(n)).shiftLeft(1).multiply(r).mod(this.curve.q), t = o.multiply(t).multiply(e).subtract(n.shiftLeft(1)).shiftLeft(2).multiply(n).subtract(o.square().multiply(o)).mod(this.curve.q), r = r.square().multiply(r).shiftLeft(3).mod(this.curve.q), new ECPointFp(this.curve, this.curve.fromBigInteger(i), this.curve.fromBigInteger(t), r);
  }function pointFpMultiply(t) {
    var e = this;if (this.isInfinity()) return this;if (0 == t.signum()) return this.curve.getInfinity();var i,
        r = t.multiply(new BigInteger$1("3")),
        n = this.negate(),
        o = this;for (i = r.bitLength() - 2; 0 < i; --i) {
      var o = o.twice(),
          s = r.testBit(i),
          a = t.testBit(i);s != a && (o = o.add(s ? e : n));
    }return o;
  }function pointFpMultiplyTwo(t, e, i) {
    var r,
        n = this;r = t.bitLength() > i.bitLength() ? t.bitLength() - 1 : i.bitLength() - 1;for (var o = this.curve.getInfinity(), s = this.add(e); 0 <= r;) {
      o = o.twice(), t.testBit(r) ? o = i.testBit(r) ? o.add(s) : o.add(n) : i.testBit(r) && (o = o.add(e)), --r;
    }return o;
  }function ECCurveFp(t, e, i) {
    this.q = t, this.a = this.fromBigInteger(e), this.b = this.fromBigInteger(i), this.infinity = new ECPointFp(this, null, null);
  }function curveFpGetQ() {
    return this.q;
  }function curveFpGetA() {
    return this.a;
  }function curveFpGetB() {
    return this.b;
  }function curveFpEquals(t) {
    return t == this || this.q.equals(t.q) && this.a.equals(t.a) && this.b.equals(t.b);
  }function curveFpGetInfinity() {
    return this.infinity;
  }function curveFpFromBigInteger(t) {
    return new ECFieldElementFp(this.q, t);
  }function curveFpDecodePointHex(t) {
    switch (parseInt(t.substr(0, 2), 16)) {case 0:
        return this.infinity;case 2:case 3:
        return null;case 4:case 6:case 7:
        var e = (t.length - 2) / 2,
            i = t.substr(2, e);return t = t.substr(e + 2, e), new ECPointFp(this, this.fromBigInteger(new BigInteger$1(i, 16)), this.fromBigInteger(new BigInteger$1(t, 16)));default:
        return null;}
  }function SM3Digest() {
    this.BYTE_LENGTH = 64, this.xBuf = [], this.byteCount = this.xBufOff = 0, this.DIGEST_LENGTH = 32, this.v0 = [1937774191, 1226093241, 388252375, 3666478592, 2842636476, 372324522, 3817729613, 2969243214], this.v0 = [1937774191, 1226093241, 388252375, -628488704, -1452330820, 372324522, -477237683, -1325724082], this.v = Array(8), this.v_ = Array(8), this.X0 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.X = Array(68), this.xOff = 0, this.T_00_15 = 2043430169, this.T_16_63 = 2055708042, 0 < arguments.length ? this.InitDigest(arguments[0]) : this.Init();
  }function SM2Cipher(t) {
    this.ct = 1, this.sm3c3 = this.sm3keybase = this.p2 = null, this.key = Array(32), this.keyOff = 0, this.cipherMode = "undefined" != typeof t ? t : SM2CipherMode.C1C3C2;
  }function SM2SetKey(t) {
    t && "object" == (typeof t === "undefined" ? "undefined" : _typeof(t)) ? (this.eccX = t.eccX, this.eccY = t.eccY) : (this.eccX = "F1342ADB38855E1F8C37D1181378DE446E52788389F7DB3DEA022A1FC4D4D856", this.eccY = "66FC6DE253C822F1E52914D9E0B80C5D825759CE696CF039A8449F98017510B7");
  }function SM2Encrypt(t) {
    var e = SM2CipherMode.C1C3C2,
        i = new SM2Cipher(e),
        r = CryptoJS.enc.Utf8.parse(t),
        i = new SM2Cipher(e),
        n = i.CreatePoint(this.eccX, this.eccY),
        o = i.GetWords(r.toString());return i.Encrypt(n, o);
  }function createCommonjsModule(t, e) {
    return e = { exports: {} }, t(e, e.exports), e.exports;
  }function Crypto(t) {}function Device(t) {}function Header(t) {
    this.aladdin = t;var e = this;e._injectStyle();
  }function stringify(t, e) {
    if (void 0 === e && (e = !1), !t || "object" != (typeof t === "undefined" ? "undefined" : _typeof(t))) return "";var i = [];for (var r in t) {
      var n = t[r];if (Array.isArray(n)) for (var o in n) {
        i.push((e ? r : r + "[]") + "=" + encodeURIComponent(n[o]));
      } else i.push(r + "=" + encodeURIComponent(n));
    }return i.join("&");
  }function join(t, e, i) {
    void 0 === i && (i = !1);var r = stringify(e, i);return "" !== r && (r = (/\?/.test(t) ? "&" : "?") + r), t + r;
  }function Http(t) {}function filterOpts(t) {
    return t = t || {}, t.method = t.method.toLowerCase() || "get", t.headers || (t.headers = {}), "post" !== t.method && "put" !== t.method && "patch" !== t.method && "delete" !== t.method || t.headers["Content-Type"] || (t.headers["Content-Type"] = "application/x-www-form-urlencoded"), t.qs && "[object Object]" === Object.prototype.toString.call(t.qs) && (t.url = join(t.url, t.qs, t.traditional)), t.body && "[object Object]" === Object.prototype.toString.call(t.body) && (/x-www-form-urlencoded/.test(t.headers["Content-Type"]) ? t.body = stringify(t.body, t.traditional) : t.body = _JSON$stringify(t.body)), t;
  }function LocalStorage(t) {
    this._aladdin = t, this._secretKey = "123456781234567812345678";
  }function Navigator(t) {
    for (var e = !1, i = historyStack.length; i > 0; i--) {
      if (historyStack[i - 1] === location.href) {
        historyStack.splice(i), e = !0;break;
      }
    }e || historyStack.push(location.href), window.sessionStorage.setItem(PAGE_HISTORY_STACK_KEY, _JSON$stringify(historyStack));
  }function Network(t) {}function SessionStorage(t) {
    this._aladdin = t, this._secretKey = "123456781234567812345678";
  }function Page(t) {}var installGlobalApi = function installGlobalApi(t) {
    if (t.env.isBrowser) try {
      var e = JSON.parse(sessionStorage.getItem("aladdinChromeExtensionInfo"));e && (sessionStorage.removeItem("aladdinChromeExtensionInfo"), e.activeRequire ? window.aladdinChromeExtension && window.aladdinChromeExtension.startListen(t) : "complete" !== document.readyState && document.write('<script src="' + e.injectScriptPath + '"></script>'));
    } catch (t) {
      console.log("Browser plug-in loading failure");
    }window.__ALADDIN_CALLBACK__ = function () {
      var e = arguments;setTimeout(function () {
        t.callback.apply(t, e);
      }, 0);
    }, window.__ALADDIN_EVENT_EMIT__ = function () {
      var e = arguments;setTimeout(function () {
        t.emit.apply(t, e);
      }, 0);
    }, window.__ALADDIN_FETCH__ = function (e) {
      return t.fetch(e);
    };
  },
      ua = navigator.userAgent,
      _hybridVersion,
      _appName,
      _appVersion,
      infos = /AladdinHybrid\/(\d+\.\d+\.?\d*.*?) \((.*?) (\d+\.\d+\.?\d*.*?)\)/i.exec(ua);Array.isArray(infos) && (_hybridVersion = infos[1], _appName = infos[2], _appVersion = infos[3]);var env = { hybridVersion: _hybridVersion, appName: _appName, appVersion: _appVersion, isMobile: /Mobile/i.test(ua), isAndroid: /Android/i.test(ua), isiOS: !!ua.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/i), isiPhone: /iPhone/i.test(ua), isiPad: /iPad/i.test(ua), isiPod: /iPod/i.test(ua), isHybrid: !!_hybridVersion, isBrowser: !_hybridVersion, isWechat: /MicroMessenger/i.test(ua), isQQ: / QQ\//i.test(ua) },
      PROTOCOL = "aladdin:";readonlyProperty(Aladdin.prototype, "version", "1.0.6"), Aladdin.prototype.on = function (t, e) {
    return t && "string" == typeof t && e && "function" == typeof e ? ((this._subscribers[t] || (this._subscribers[t] = [])).push(e), this) : this;
  }, Aladdin.prototype.once = function (t, e) {
    var i = this,
        r = function r() {
      i.off(t, r), e.apply(this, arguments);
    };return r.listener = e, this.on(t, r), this;
  }, Aladdin.prototype.off = function (t, e) {
    var i = this;if (!arguments.length) {
      for (t in this._subscribers) {
        delete i._subscribers[t];
      }return this;
    }if (!t || "string" != typeof t) return this;if (!e && this._subscribers[t]) return delete this._subscribers[t], this;var r = this._subscribers[t];if (!r) return this;for (var n, o = r.length; o--;) {
      if (n = r[o], n === e || n.listener === e) {
        i._subscribers[t].splice(o, 1);break;
      }
    }return this;
  }, Aladdin.prototype.emit = function (t) {
    for (var e = [], i = arguments.length - 1; i-- > 0;) {
      e[i] = arguments[i + 1];
    }if (t && "string" == typeof t) {
      var r = this._subscribers[t];if (r) for (var n in r) {
        r[n].apply(null, e);
      }
    }return this;
  }, Aladdin.prototype.broadcast = function (t, e, i, r) {
    if (!t) return this;"function" == typeof e ? (r = e, e = {}) : "function" == typeof i && (r = i, i = "");var n = { eventName: t, event: e, url: i };return this.call("aladdin", "broadcast", n, r), this;
  }, Aladdin.prototype.use = function (t) {
    if ("function" == typeof t) {
      var e = new t(this),
          i = e.name || t.name.replace(/^([A-Z])/, function (t) {
        return t.toLowerCase();
      });if (!i) throw new Error("The Component's name is required");this[i] = e;
    }return this;
  }, Aladdin.prototype.middleware = function (t) {
    return "function" == typeof t && this._middlewares.push(t), this;
  }, Aladdin.prototype.support = function (t, e, i) {
    if (!t) return this;"function" == typeof e && (i = e, e = "");var r = { component: t, action: e };return this.call("aladdin", "support", r, i), this;
  }, Aladdin.prototype._transformHandlers = function (t, e, i, r) {
    var n = this;for (var o in i) {
      var s = i[o];if (s) {
        var a = Object.prototype.toString.call(s);if ("[object Object]" !== a && "[object Array]" !== a || n._transformHandlers(t, e, s, r), "[object Function]" === a) {
          var c = r + "_function_" + t + "_" + e + "_" + (isNaN(o) ? o : "callback");i[o] = c, n._handlers[c] = callbackWrapper.call(n, s);
        }
      }
    }
  }, Aladdin.prototype.call = function (t, e) {
    for (var i = [], r = arguments.length - 2; r-- > 0;) {
      i[r] = arguments[r + 2];
    }var n = { component: t, action: e, args: i, callId: (this._ts + ++this._counter).toString(16) };if (this._middlewares.length > 0 && (n = this._middlewares.reduce(function (t, e) {
      return e(t);
    }, n), !n)) return this;this._transformHandlers(n.component, n.action, n.args, n.callId), n.message = n.component + "." + n.action + "?" + encodeURIComponent(_JSON$stringify(n.args)), n.url = PROTOCOL + "//" + n.message, this.emit("call", n);var o;if (env.isAndroid) o = prompt(n.url);else if (env.isiOS) {
      n.message.length > 1024 && (this._datas[n.callId] = n.message, n.url = PROTOCOL + "//delay-fetch?callId=" + n.callId), window.__ALADDIN__ || (window.__ALADDIN__ = {});var s = document.createElement("IFRAME");s.setAttribute("src", n.url), s.setAttribute("style", "display: none;"), document.documentElement.appendChild(s), s.parentNode.removeChild(s), s = null, o = window.__ALADDIN__.retValue, window.__ALADDIN__.retValue = void 0;
    }return o;
  }, Aladdin.prototype.callback = function (t) {
    for (var e = [], i = arguments.length - 1; i-- > 0;) {
      e[i] = arguments[i + 1];
    }if (t) {
      var r = this._handlers[t];this.emit("callback", { handlerKey: t, handler: r, args: e }), r && "function" == typeof r && (r.apply(null, e), r.keep || delete this._handlers[t]);
    }
  }, Aladdin.prototype.fetch = function (t) {
    var e = this._datas[t];return e && delete this._datas[t], e;
  };var dbits,
      canary = 0xdeadbeefcafe,
      j_lm = 15715070 == (16777215 & canary);j_lm && "Microsoft Internet Explorer" == navigator.appName ? (BigInteger.prototype.am = am2, dbits = 30) : j_lm && "Netscape" != navigator.appName ? (BigInteger.prototype.am = am1, dbits = 26) : (BigInteger.prototype.am = am3, dbits = 28), BigInteger.prototype.DB = dbits, BigInteger.prototype.DM = (1 << dbits) - 1, BigInteger.prototype.DV = 1 << dbits;var BI_FP = 52;BigInteger.prototype.FV = Math.pow(2, BI_FP), BigInteger.prototype.F1 = BI_FP - dbits, BigInteger.prototype.F2 = 2 * dbits - BI_FP;var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz",
      BI_RC = new Array(),
      rr,
      vv;for (rr = "0".charCodeAt(0), vv = 0; vv <= 9; ++vv) {
    BI_RC[rr++] = vv;
  }for (rr = "a".charCodeAt(0), vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }for (rr = "A".charCodeAt(0), vv = 10; vv < 36; ++vv) {
    BI_RC[rr++] = vv;
  }Classic.prototype.convert = cConvert, Classic.prototype.revert = cRevert, Classic.prototype.reduce = cReduce, Classic.prototype.mulTo = cMulTo, Classic.prototype.sqrTo = cSqrTo, Montgomery.prototype.convert = montConvert, Montgomery.prototype.revert = montRevert, Montgomery.prototype.reduce = montReduce, Montgomery.prototype.mulTo = montMulTo, Montgomery.prototype.sqrTo = montSqrTo, BigInteger.prototype.copyTo = bnpCopyTo, BigInteger.prototype.fromInt = bnpFromInt, BigInteger.prototype.fromString = bnpFromString, BigInteger.prototype.clamp = bnpClamp, BigInteger.prototype.dlShiftTo = bnpDLShiftTo, BigInteger.prototype.drShiftTo = bnpDRShiftTo, BigInteger.prototype.lShiftTo = bnpLShiftTo, BigInteger.prototype.rShiftTo = bnpRShiftTo, BigInteger.prototype.subTo = bnpSubTo, BigInteger.prototype.multiplyTo = bnpMultiplyTo, BigInteger.prototype.squareTo = bnpSquareTo, BigInteger.prototype.divRemTo = bnpDivRemTo, BigInteger.prototype.invDigit = bnpInvDigit, BigInteger.prototype.isEven = bnpIsEven, BigInteger.prototype.exp = bnpExp, BigInteger.prototype.toString = bnToString, BigInteger.prototype.negate = bnNegate, BigInteger.prototype.abs = bnAbs, BigInteger.prototype.compareTo = bnCompareTo, BigInteger.prototype.bitLength = bnBitLength, BigInteger.prototype.mod = bnMod, BigInteger.prototype.modPowInt = bnModPowInt, BigInteger.ZERO = nbv(0), BigInteger.ONE = nbv(1), Arcfour.prototype.init = ARC4init, Arcfour.prototype.next = ARC4next;var rng_psize = 256,
      rng_state,
      rng_pool,
      rng_pptr;if (null == rng_pool) {
    rng_pool = new Array(), rng_pptr = 0;for (var t; rng_pptr < rng_psize;) {
      t = Math.floor(65536 * Math.random()), rng_pool[rng_pptr++] = t >>> 8, rng_pool[rng_pptr++] = 255 & t;
    }rng_pptr = 0, rng_seed_time();
  }SecureRandom.prototype.nextBytes = rng_get_bytes;var RSAKey$1 = function RSAKey$1() {
    this.n = null, this.e = 0, this.d = null, this.p = null, this.q = null, this.dmp1 = null, this.dmq1 = null, this.coeff = null;
  };RSAKey$1.prototype.doPublic = RSADoPublic, RSAKey$1.prototype.setPublic = RSASetPublic, RSAKey$1.prototype.encrypt = RSAEncrypt;var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      b64pad = "=",
      SM2CipherMode = { C1C2C3: "0", C1C3C2: "1" },
      CryptoJS = CryptoJS || function (t, e) {
    var i = {},
        r = i.lib = {},
        n = r.Base = function () {
      function t() {}return { extend: function extend(e) {
          t.prototype = this;var i = new t();return e && i.mixIn(e), i.hasOwnProperty("init") || (i.init = function () {
            i.$super.init.apply(this, arguments);
          }), i.init.prototype = i, i.$super = this, i;
        }, create: function create() {
          var t = this.extend();return t.init.apply(t, arguments), t;
        }, init: function init() {}, mixIn: function mixIn(t) {
          var e = this;for (var i in t) {
            t.hasOwnProperty(i) && (e[i] = t[i]);
          }t.hasOwnProperty("toString") && (this.toString = t.toString);
        }, clone: function clone() {
          return this.init.prototype.extend(this);
        } };
    }(),
        o = r.WordArray = n.extend({ init: function init(t, i) {
        t = this.words = t || [], this.sigBytes = i != e ? i : 4 * t.length;
      }, toString: function toString(t) {
        return (t || a).stringify(this);
      }, concat: function concat(t) {
        var e = this.words,
            i = t.words,
            r = this.sigBytes;if (t = t.sigBytes, this.clamp(), r % 4) for (var n = 0; n < t; n++) {
          e[r + n >>> 2] |= (i[n >>> 2] >>> 24 - n % 4 * 8 & 255) << 24 - (r + n) % 4 * 8;
        } else if (65535 < i.length) for (n = 0; n < t; n += 4) {
          e[r + n >>> 2] = i[n >>> 2];
        } else e.push.apply(e, i);return this.sigBytes += t, this;
      }, clamp: function clamp() {
        var e = this.words,
            i = this.sigBytes;e[i >>> 2] &= 4294967295 << 32 - i % 4 * 8, e.length = t.ceil(i / 4);
      }, clone: function clone() {
        var t = n.clone.call(this);return t.words = this.words.slice(0), t;
      }, random: function random(e) {
        for (var i = [], r = 0; r < e; r += 4) {
          i.push(4294967296 * t.random() | 0);
        }return new o.init(i, e);
      } }),
        s = i.enc = {},
        a = s.Hex = { stringify: function stringify(t) {
        var e = t.words;t = t.sigBytes;for (var i = [], r = 0; r < t; r++) {
          var n = e[r >>> 2] >>> 24 - r % 4 * 8 & 255;i.push((n >>> 4).toString(16)), i.push((15 & n).toString(16));
        }return i.join("");
      }, parse: function parse(t) {
        for (var e = t.length, i = [], r = 0; r < e; r += 2) {
          i[r >>> 3] |= parseInt(t.substr(r, 2), 16) << 24 - r % 8 * 4;
        }return new o.init(i, e / 2);
      } },
        c = s.Latin1 = { stringify: function stringify(t) {
        var e = t.words;t = t.sigBytes;for (var i = [], r = 0; r < t; r++) {
          i.push(String.fromCharCode(e[r >>> 2] >>> 24 - r % 4 * 8 & 255));
        }return i.join("");
      }, parse: function parse(t) {
        for (var e = t.length, i = [], r = 0; r < e; r++) {
          i[r >>> 2] |= (255 & t.charCodeAt(r)) << 24 - r % 4 * 8;
        }return new o.init(i, e);
      } },
        h = s.Utf8 = { stringify: function stringify(t) {
        try {
          return decodeURIComponent(escape(c.stringify(t)));
        } catch (t) {
          throw Error("Malformed UTF-8 data");
        }
      }, parse: function parse(t) {
        return c.parse(unescape(encodeURIComponent(t)));
      } },
        p = r.BufferedBlockAlgorithm = n.extend({ reset: function reset() {
        this._data = new o.init(), this._nDataBytes = 0;
      }, _append: function _append(t) {
        "string" == typeof t && (t = h.parse(t)), this._data.concat(t), this._nDataBytes += t.sigBytes;
      }, _process: function _process(e) {
        var i = this,
            r = this._data,
            n = r.words,
            s = r.sigBytes,
            a = this.blockSize,
            c = s / (4 * a),
            c = e ? t.ceil(c) : t.max((0 | c) - this._minBufferSize, 0);if (e = c * a, s = t.min(4 * e, s), e) {
          for (var h = 0; h < e; h += a) {
            i._doProcessBlock(n, h);
          }h = n.splice(0, e), r.sigBytes -= s;
        }return new o.init(h, s);
      }, clone: function clone() {
        var t = n.clone.call(this);return t._data = this._data.clone(), t;
      }, _minBufferSize: 0 });r.Hasher = p.extend({ cfg: n.extend(), init: function init(t) {
        this.cfg = this.cfg.extend(t), this.reset();
      }, reset: function reset() {
        p.reset.call(this), this._doReset();
      }, update: function update(t) {
        return this._append(t), this._process(), this;
      }, finalize: function finalize(t) {
        return t && this._append(t), this._doFinalize();
      }, blockSize: 16, _createHelper: function _createHelper(t) {
        return function (e, i) {
          return new t.init(i).finalize(e);
        };
      }, _createHmacHelper: function _createHmacHelper(t) {
        return function (e, i) {
          return new u.HMAC.init(t, i).finalize(e);
        };
      } });var u = i.algo = {};return i;
  }(Math);CryptoJS.lib.Cipher || function (t) {
    var e = CryptoJS,
        i = e.lib,
        r = i.Base,
        n = i.WordArray,
        o = i.BufferedBlockAlgorithm,
        s = e.enc.Base64,
        a = e.algo.EvpKDF,
        c = i.Cipher = o.extend({ cfg: r.extend(), createEncryptor: function createEncryptor(t, e) {
        return this.create(this._ENC_XFORM_MODE, t, e);
      }, createDecryptor: function createDecryptor(t, e) {
        return this.create(this._DEC_XFORM_MODE, t, e);
      }, init: function init(t, e, i) {
        this.cfg = this.cfg.extend(i), this._xformMode = t, this._key = e, this.reset();
      }, reset: function reset() {
        o.reset.call(this), this._doReset();
      }, process: function process(t) {
        return this._append(t), this._process();
      }, finalize: function finalize(t) {
        return t && this._append(t), this._doFinalize();
      }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function () {
        return function (t) {
          return { encrypt: function encrypt(e, i, r) {
              return ("string" == typeof i ? d : f).encrypt(t, e, i, r);
            }, decrypt: function decrypt(e, i, r) {
              return ("string" == typeof i ? d : f).decrypt(t, e, i, r);
            } };
        };
      }() });i.StreamCipher = c.extend({ _doFinalize: function _doFinalize() {
        return this._process(!0);
      }, blockSize: 1 });var h = e.mode = {},
        p = i.BlockCipherMode = r.extend({ createEncryptor: function createEncryptor(t, e) {
        return this.Encryptor.create(t, e);
      }, createDecryptor: function createDecryptor(t, e) {
        return this.Decryptor.create(t, e);
      }, init: function init(t, e) {
        this._cipher = t, this._iv = e;
      } }),
        h = h.CBC = function () {
      function e(e, i, r) {
        var n = this._iv;n ? this._iv = t : n = this._prevBlock;for (var o = 0; o < r; o++) {
          e[i + o] ^= n[o];
        }
      }var i = p.extend();return i.Encryptor = i.extend({ processBlock: function processBlock(t, i) {
          var r = this._cipher,
              n = r.blockSize;e.call(this, t, i, n), r.encryptBlock(t, i), this._prevBlock = t.slice(i, i + n);
        } }), i.Decryptor = i.extend({ processBlock: function processBlock(t, i) {
          var r = this._cipher,
              n = r.blockSize,
              o = t.slice(i, i + n);r.decryptBlock(t, i), e.call(this, t, i, n), this._prevBlock = o;
        } }), i;
    }(),
        u = (e.pad = {}).Pkcs7 = { pad: function pad(t, e) {
        for (var i = 4 * e, i = i - t.sigBytes % i, r = i << 24 | i << 16 | i << 8 | i, o = [], s = 0; s < i; s += 4) {
          o.push(r);
        }i = n.create(o, i), t.concat(i);
      }, unpad: function unpad(t) {
        t.sigBytes -= 255 & t.words[t.sigBytes - 1 >>> 2];
      } };i.BlockCipher = c.extend({ cfg: c.cfg.extend({ mode: h, padding: u }), reset: function reset() {
        c.reset.call(this);var t = this.cfg,
            e = t.iv,
            t = t.mode;if (this._xformMode == this._ENC_XFORM_MODE) var i = t.createEncryptor;else i = t.createDecryptor, this._minBufferSize = 1;this._mode = i.call(t, this, e && e.words);
      }, _doProcessBlock: function _doProcessBlock(t, e) {
        this._mode.processBlock(t, e);
      }, _doFinalize: function _doFinalize() {
        var t = this.cfg.padding;if (this._xformMode == this._ENC_XFORM_MODE) {
          t.pad(this._data, this.blockSize);var e = this._process(!0);
        } else e = this._process(!0), t.unpad(e);return e;
      }, blockSize: 4 });var l = i.CipherParams = r.extend({ init: function init(t) {
        this.mixIn(t);
      }, toString: function toString(t) {
        return (t || this.formatter).stringify(this);
      } }),
        h = (e.format = {}).OpenSSL = { stringify: function stringify(t) {
        var e = t.ciphertext;return t = t.salt, (t ? n.create([1398893684, 1701076831]).concat(t).concat(e) : e).toString(s);
      }, parse: function parse(t) {
        t = s.parse(t);var e = t.words;if (1398893684 == e[0] && 1701076831 == e[1]) {
          var i = n.create(e.slice(2, 4));e.splice(0, 4), t.sigBytes -= 16;
        }return l.create({ ciphertext: t, salt: i });
      } },
        f = i.SerializableCipher = r.extend({ cfg: r.extend({ format: h }), encrypt: function encrypt(t, e, i, r) {
        r = this.cfg.extend(r);var n = t.createEncryptor(i, r);return e = n.finalize(e), n = n.cfg, l.create({ ciphertext: e, key: i, iv: n.iv, algorithm: t, mode: n.mode, padding: n.padding, blockSize: t.blockSize, formatter: r.format });
      }, decrypt: function decrypt(t, e, i, r) {
        return r = this.cfg.extend(r), e = this._parse(e, r.format), t.createDecryptor(i, r).finalize(e.ciphertext);
      }, _parse: function _parse(t, e) {
        return "string" == typeof t ? e.parse(t, this) : t;
      } }),
        e = (e.kdf = {}).OpenSSL = { execute: function execute(t, e, i, r) {
        return r || (r = n.random(8)), t = a.create({ keySize: e + i }).compute(t, r), i = n.create(t.words.slice(e), 4 * i), t.sigBytes = 4 * e, l.create({ key: t, iv: i, salt: r });
      } },
        d = i.PasswordBasedCipher = f.extend({ cfg: f.cfg.extend({ kdf: e }), encrypt: function encrypt(t, e, i, r) {
        return r = this.cfg.extend(r), i = r.kdf.execute(i, t.keySize, t.ivSize), r.iv = i.iv, t = f.encrypt.call(this, t, e, i.key, r), t.mixIn(i), t;
      }, decrypt: function decrypt(t, e, i, r) {
        return r = this.cfg.extend(r), e = this._parse(e, r.format), i = r.kdf.execute(i, t.keySize, t.ivSize, e.salt), r.iv = i.iv, f.decrypt.call(this, t, e, i.key, r);
      } });
  }(), function () {
    function t(t, e) {
      var i = (this._lBlock >>> t ^ this._rBlock) & e;this._rBlock ^= i, this._lBlock ^= i << t;
    }function e(t, e) {
      var i = (this._rBlock >>> t ^ this._lBlock) & e;this._lBlock ^= i, this._rBlock ^= i << t;
    }var i = CryptoJS,
        r = i.lib,
        n = r.WordArray,
        r = r.BlockCipher,
        o = i.algo,
        s = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
        a = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
        c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
        h = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }],
        p = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
        u = o.DES = r.extend({ _doReset: function _doReset() {
        for (var t = this._key.words, e = [], i = 0; 56 > i; i++) {
          var r = s[i] - 1;e[i] = t[r >>> 5] >>> 31 - r % 32 & 1;
        }for (t = this._subKeys = [], r = 0; 16 > r; r++) {
          for (var n = t[r] = [], o = c[r], i = 0; 24 > i; i++) {
            n[i / 6 | 0] |= e[(a[i] - 1 + o) % 28] << 31 - i % 6, n[4 + (i / 6 | 0)] |= e[28 + (a[i + 24] - 1 + o) % 28] << 31 - i % 6;
          }for (n[0] = n[0] << 1 | n[0] >>> 31, i = 1; 7 > i; i++) {
            n[i] >>>= 4 * (i - 1) + 3;
          }n[7] = n[7] << 5 | n[7] >>> 27;
        }for (e = this._invSubKeys = [], i = 0; 16 > i; i++) {
          e[i] = t[15 - i];
        }
      }, encryptBlock: function encryptBlock(t, e) {
        this._doCryptBlock(t, e, this._subKeys);
      }, decryptBlock: function decryptBlock(t, e) {
        this._doCryptBlock(t, e, this._invSubKeys);
      }, _doCryptBlock: function _doCryptBlock(i, r, n) {
        var o = this;this._lBlock = i[r], this._rBlock = i[r + 1], t.call(this, 4, 252645135), t.call(this, 16, 65535), e.call(this, 2, 858993459), e.call(this, 8, 16711935), t.call(this, 1, 1431655765);for (var s = 0; 16 > s; s++) {
          for (var a = n[s], c = this._lBlock, u = this._rBlock, l = 0, f = 0; 8 > f; f++) {
            l |= h[f][((u ^ a[f]) & p[f]) >>> 0];
          }o._lBlock = u, o._rBlock = c ^ l;
        }n = this._lBlock, this._lBlock = this._rBlock, this._rBlock = n, t.call(this, 1, 1431655765), e.call(this, 8, 16711935), e.call(this, 2, 858993459), t.call(this, 16, 65535), t.call(this, 4, 252645135), i[r] = this._lBlock, i[r + 1] = this._rBlock;
      }, keySize: 2, ivSize: 2, blockSize: 2 });i.DES = r._createHelper(u), o = o.TripleDES = r.extend({ _doReset: function _doReset() {
        var t = this._key.words;this._des1 = u.createEncryptor(n.create(t.slice(0, 2))), this._des2 = u.createEncryptor(n.create(t.slice(2, 4))), this._des3 = u.createEncryptor(n.create(t.slice(4, 6)));
      }, encryptBlock: function encryptBlock(t, e) {
        this._des1.encryptBlock(t, e), this._des2.decryptBlock(t, e), this._des3.encryptBlock(t, e);
      }, decryptBlock: function decryptBlock(t, e) {
        this._des3.decryptBlock(t, e), this._des2.encryptBlock(t, e), this._des1.decryptBlock(t, e);
      }, keySize: 6, ivSize: 2, blockSize: 2 }), i.TripleDES = r._createHelper(o);
  }(), function () {
    var t = CryptoJS,
        e = t.lib.WordArray;t.enc.Base64 = { stringify: function stringify(t) {
        var e = t.words,
            i = t.sigBytes,
            r = this._map;t.clamp(), t = [];for (var n = 0; n < i; n += 3) {
          for (var o = (e[n >>> 2] >>> 24 - n % 4 * 8 & 255) << 16 | (e[n + 1 >>> 2] >>> 24 - (n + 1) % 4 * 8 & 255) << 8 | e[n + 2 >>> 2] >>> 24 - (n + 2) % 4 * 8 & 255, s = 0; 4 > s && n + .75 * s < i; s++) {
            t.push(r.charAt(o >>> 6 * (3 - s) & 63));
          }
        }if (e = r.charAt(64)) for (; t.length % 4;) {
          t.push(e);
        }return t.join("");
      }, parse: function parse(t) {
        var i = t.length,
            r = this._map,
            n = r.charAt(64);n && (n = t.indexOf(n), -1 != n && (i = n));for (var n = [], o = 0, s = 0; s < i; s++) {
          if (s % 4) {
            var a = r.indexOf(t.charAt(s - 1)) << s % 4 * 2,
                c = r.indexOf(t.charAt(s)) >>> 6 - s % 4 * 2;n[o >>> 2] |= (a | c) << 24 - o % 4 * 8, o++;
          }
        }return e.create(n, o);
      }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" };
  }();var dbits$1,
      canary$1 = 0xdeadbeefcafe,
      j_lm$1 = 15715070 == (16777215 & canary$1);j_lm$1 && "Microsoft Internet Explorer" == navigator.appName ? (BigInteger$1.prototype.am = am2$1, dbits$1 = 30) : j_lm$1 && "Netscape" != navigator.appName ? (BigInteger$1.prototype.am = am1$1, dbits$1 = 26) : (BigInteger$1.prototype.am = am3$1, dbits$1 = 28), BigInteger$1.prototype.DB = dbits$1, BigInteger$1.prototype.DM = (1 << dbits$1) - 1, BigInteger$1.prototype.DV = 1 << dbits$1;var BI_FP$1 = 52;BigInteger$1.prototype.FV = Math.pow(2, BI_FP$1), BigInteger$1.prototype.F1 = BI_FP$1 - dbits$1, BigInteger$1.prototype.F2 = 2 * dbits$1 - BI_FP$1;var BI_RM$1 = "0123456789abcdefghijklmnopqrstuvwxyz",
      BI_RC$1 = [],
      rr$1,
      vv$1;for (rr$1 = 48, vv$1 = 0; 9 >= vv$1; ++vv$1) {
    BI_RC$1[rr$1++] = vv$1;
  }for (rr$1 = 97, vv$1 = 10; 36 > vv$1; ++vv$1) {
    BI_RC$1[rr$1++] = vv$1;
  }for (rr$1 = 65, vv$1 = 10; 36 > vv$1; ++vv$1) {
    BI_RC$1[rr$1++] = vv$1;
  }Classic$1.prototype.convert = cConvert$1, Classic$1.prototype.revert = cRevert$1, Classic$1.prototype.reduce = cReduce$1, Classic$1.prototype.mulTo = cMulTo$1, Classic$1.prototype.sqrTo = cSqrTo$1, Montgomery$1.prototype.convert = montConvert$1, Montgomery$1.prototype.revert = montRevert$1, Montgomery$1.prototype.reduce = montReduce$1, Montgomery$1.prototype.mulTo = montMulTo$1, Montgomery$1.prototype.sqrTo = montSqrTo$1, BigInteger$1.prototype.copyTo = bnpCopyTo$1, BigInteger$1.prototype.fromInt = bnpFromInt$1, BigInteger$1.prototype.fromString = bnpFromString$1, BigInteger$1.prototype.clamp = bnpClamp$1, BigInteger$1.prototype.dlShiftTo = bnpDLShiftTo$1, BigInteger$1.prototype.drShiftTo = bnpDRShiftTo$1, BigInteger$1.prototype.lShiftTo = bnpLShiftTo$1, BigInteger$1.prototype.rShiftTo = bnpRShiftTo$1, BigInteger$1.prototype.subTo = bnpSubTo$1, BigInteger$1.prototype.multiplyTo = bnpMultiplyTo$1, BigInteger$1.prototype.squareTo = bnpSquareTo$1, BigInteger$1.prototype.divRemTo = bnpDivRemTo$1, BigInteger$1.prototype.invDigit = bnpInvDigit$1, BigInteger$1.prototype.isEven = bnpIsEven$1, BigInteger$1.prototype.exp = bnpExp$1, BigInteger$1.prototype.toString = bnToString$1, BigInteger$1.prototype.negate = bnNegate$1, BigInteger$1.prototype.abs = bnAbs$1, BigInteger$1.prototype.compareTo = bnCompareTo$1, BigInteger$1.prototype.bitLength = bnBitLength$1, BigInteger$1.prototype.mod = bnMod$1, BigInteger$1.prototype.modPowInt = bnModPowInt$1, BigInteger$1.ZERO = nbv$1(0), BigInteger$1.ONE = nbv$1(1), NullExp.prototype.convert = nNop, NullExp.prototype.revert = nNop, NullExp.prototype.mulTo = nMulTo, NullExp.prototype.sqrTo = nSqrTo, Barrett.prototype.convert = barrettConvert, Barrett.prototype.revert = barrettRevert, Barrett.prototype.reduce = barrettReduce, Barrett.prototype.mulTo = barrettMulTo, Barrett.prototype.sqrTo = barrettSqrTo;var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997],
      lplim = 67108864 / lowprimes[lowprimes.length - 1];BigInteger$1.prototype.chunkSize = bnpChunkSize, BigInteger$1.prototype.toRadix = bnpToRadix, BigInteger$1.prototype.fromRadix = bnpFromRadix, BigInteger$1.prototype.fromNumber = bnpFromNumber, BigInteger$1.prototype.bitwiseTo = bnpBitwiseTo, BigInteger$1.prototype.changeBit = bnpChangeBit, BigInteger$1.prototype.addTo = bnpAddTo, BigInteger$1.prototype.dMultiply = bnpDMultiply, BigInteger$1.prototype.dAddOffset = bnpDAddOffset, BigInteger$1.prototype.multiplyLowerTo = bnpMultiplyLowerTo, BigInteger$1.prototype.multiplyUpperTo = bnpMultiplyUpperTo, BigInteger$1.prototype.modInt = bnpModInt, BigInteger$1.prototype.millerRabin = bnpMillerRabin, BigInteger$1.prototype.clone = bnClone, BigInteger$1.prototype.intValue = bnIntValue, BigInteger$1.prototype.byteValue = bnByteValue, BigInteger$1.prototype.shortValue = bnShortValue, BigInteger$1.prototype.signum = bnSigNum, BigInteger$1.prototype.toByteArray = bnToByteArray, BigInteger$1.prototype.equals = bnEquals, BigInteger$1.prototype.min = bnMin, BigInteger$1.prototype.max = bnMax, BigInteger$1.prototype.and = bnAnd, BigInteger$1.prototype.or = bnOr, BigInteger$1.prototype.xor = bnXor, BigInteger$1.prototype.andNot = bnAndNot, BigInteger$1.prototype.not = bnNot, BigInteger$1.prototype.shiftLeft = bnShiftLeft, BigInteger$1.prototype.shiftRight = bnShiftRight, BigInteger$1.prototype.getLowestSetBit = bnGetLowestSetBit, BigInteger$1.prototype.bitCount = bnBitCount, BigInteger$1.prototype.testBit = bnTestBit, BigInteger$1.prototype.setBit = bnSetBit, BigInteger$1.prototype.clearBit = bnClearBit, BigInteger$1.prototype.flipBit = bnFlipBit, BigInteger$1.prototype.add = bnAdd, BigInteger$1.prototype.subtract = bnSubtract, BigInteger$1.prototype.multiply = bnMultiply, BigInteger$1.prototype.divide = bnDivide, BigInteger$1.prototype.remainder = bnRemainder, BigInteger$1.prototype.divideAndRemainder = bnDivideAndRemainder, BigInteger$1.prototype.modPow = bnModPow, BigInteger$1.prototype.modInverse = bnModInverse, BigInteger$1.prototype.pow = bnPow, BigInteger$1.prototype.gcd = bnGCD, BigInteger$1.prototype.isProbablePrime = bnIsProbablePrime, BigInteger$1.prototype.square = bnSquare, Arcfour$1.prototype.init = ARC4init$1, Arcfour$1.prototype.next = ARC4next$1;var rng_psize$1 = 256,
      rng_state$1,
      rng_pool$1,
      rng_pptr$1;if (null == rng_pool$1) {
    rng_pool$1 = [], rng_pptr$1 = 0;var t$1;if ("Netscape" == navigator.appName && "5" > navigator.appVersion && window.crypto) {
      var z = window.crypto.random(32);for (t$1 = 0; t$1 < z.length; ++t$1) {
        rng_pool$1[rng_pptr$1++] = 255 & z.charCodeAt(t$1);
      }
    }for (; rng_pptr$1 < rng_psize$1;) {
      t$1 = Math.floor(65536 * Math.random()), rng_pool$1[rng_pptr$1++] = t$1 >>> 8, rng_pool$1[rng_pptr$1++] = 255 & t$1;
    }rng_pptr$1 = 0, rng_seed_time$1();
  }SecureRandom$1.prototype.nextBytes = rng_get_bytes$1;var KJUR = {};"undefined" != typeof KJUR.crypto && KJUR.crypto || (KJUR.crypto = {}), KJUR.crypto.Util = new function () {
    this.DIGESTINFOHEAD = { sha1: "3021300906052b0e03021a05000414", sha224: "302d300d06096086480165030402040500041c", sha256: "3031300d060960864801650304020105000420", sha384: "3041300d060960864801650304020205000430", sha512: "3051300d060960864801650304020305000440", md2: "3020300c06082a864886f70d020205000410", md5: "3020300c06082a864886f70d020505000410", ripemd160: "3021300906052b2403020105000414" }, this.DEFAULTPROVIDER = { md5: "cryptojs", sha1: "cryptojs", sha224: "cryptojs", sha256: "cryptojs", sha384: "cryptojs", sha512: "cryptojs", ripemd160: "cryptojs", hmacmd5: "cryptojs", hmacsha1: "cryptojs", hmacsha224: "cryptojs", hmacsha256: "cryptojs", hmacsha384: "cryptojs", hmacsha512: "cryptojs", hmacripemd160: "cryptojs", sm3: "cryptojs", MD5withRSA: "cryptojs/jsrsa", SHA1withRSA: "cryptojs/jsrsa", SHA224withRSA: "cryptojs/jsrsa", SHA256withRSA: "cryptojs/jsrsa", SHA384withRSA: "cryptojs/jsrsa", SHA512withRSA: "cryptojs/jsrsa", RIPEMD160withRSA: "cryptojs/jsrsa", MD5withECDSA: "cryptojs/jsrsa", SHA1withECDSA: "cryptojs/jsrsa", SHA224withECDSA: "cryptojs/jsrsa", SHA256withECDSA: "cryptojs/jsrsa", SHA384withECDSA: "cryptojs/jsrsa", SHA512withECDSA: "cryptojs/jsrsa", RIPEMD160withECDSA: "cryptojs/jsrsa", SHA1withDSA: "cryptojs/jsrsa", SHA224withDSA: "cryptojs/jsrsa", SHA256withDSA: "cryptojs/jsrsa", MD5withRSAandMGF1: "cryptojs/jsrsa", SHA1withRSAandMGF1: "cryptojs/jsrsa", SHA224withRSAandMGF1: "cryptojs/jsrsa", SHA256withRSAandMGF1: "cryptojs/jsrsa", SHA384withRSAandMGF1: "cryptojs/jsrsa", SHA512withRSAandMGF1: "cryptojs/jsrsa", RIPEMD160withRSAandMGF1: "cryptojs/jsrsa" }, this.CRYPTOJSMESSAGEDIGESTNAME = { md5: "CryptoJS.algo.MD5", sha1: "CryptoJS.algo.SHA1", sha224: "CryptoJS.algo.SHA224", sha256: "CryptoJS.algo.SHA256", sha384: "CryptoJS.algo.SHA384", sha512: "CryptoJS.algo.SHA512", ripemd160: "CryptoJS.algo.RIPEMD160", sm3: "CryptoJS.algo.SM3" }, this.getDigestInfoHex = function (t, e) {
      if ("undefined" == typeof this.DIGESTINFOHEAD[e]) throw "alg not supported in Util.DIGESTINFOHEAD: " + e;return this.DIGESTINFOHEAD[e] + t;
    }, this.getPaddedDigestInfoHex = function (t, e, i) {
      var r = this.getDigestInfoHex(t, e);if (t = i / 4, r.length + 22 > t) throw "key is too short for SigAlg: keylen=" + i + "," + e;for (e = "00" + r, i = "", t = t - 4 - e.length, r = 0; r < t; r += 2) {
        i += "ff";
      }return "0001" + i + e;
    }, this.hashString = function (t, e) {
      return new KJUR.crypto.MessageDigest({ alg: e }).digestString(t);
    }, this.hashHex = function (t, e) {
      return new KJUR.crypto.MessageDigest({ alg: e }).digestHex(t);
    }, this.sha1 = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "sha1", prov: "cryptojs" }).digestString(t);
    }, this.sha256 = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "sha256", prov: "cryptojs" }).digestString(t);
    }, this.sha256Hex = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "sha256", prov: "cryptojs" }).digestHex(t);
    }, this.sha512 = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "sha512", prov: "cryptojs" }).digestString(t);
    }, this.sha512Hex = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "sha512", prov: "cryptojs" }).digestHex(t);
    }, this.md5 = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "md5", prov: "cryptojs" }).digestString(t);
    }, this.ripemd160 = function (t) {
      return new KJUR.crypto.MessageDigest({ alg: "ripemd160", prov: "cryptojs" }).digestString(t);
    }, this.getCryptoJSMDByName = function (t) {};
  }(), KJUR.crypto.MessageDigest = function (a) {
    this.setAlgAndProvider = function (a, c) {
      if (null != a && void 0 === c && (c = KJUR.crypto.Util.DEFAULTPROVIDER[a]), -1 != ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:sm3:".indexOf(a) && "cryptojs" == c) {
        try {
          this.md = eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[a]).create();
        } catch (t) {
          throw "setAlgAndProvider hash alg set fail alg=" + a + "/" + t;
        }this.updateString = function (t) {
          this.md.update(t);
        }, this.updateHex = function (t) {
          t = CryptoJS.enc.Hex.parse(t), this.md.update(t);
        }, this.digest = function () {
          return this.md.finalize().toString(CryptoJS.enc.Hex);
        }, this.digestString = function (t) {
          return this.updateString(t), this.digest();
        }, this.digestHex = function (t) {
          return this.updateHex(t), this.digest();
        };
      }if (-1 != ":sha256:".indexOf(a) && "sjcl" == c) {
        try {
          this.md = new sjcl.hash.sha256();
        } catch (t) {
          throw "setAlgAndProvider hash alg set fail alg=" + a + "/" + t;
        }this.updateString = function (t) {
          this.md.update(t);
        }, this.updateHex = function (t) {
          t = sjcl.codec.hex.toBits(t), this.md.update(t);
        }, this.digest = function () {
          var t = this.md.finalize();return sjcl.codec.hex.fromBits(t);
        }, this.digestString = function (t) {
          return this.updateString(t), this.digest();
        }, this.digestHex = function (t) {
          return this.updateHex(t), this.digest();
        };
      }
    }, this.updateString = function (t) {
      throw "updateString(str) not supported for this alg/prov: " + this.algName + "/" + this.provName;
    }, this.updateHex = function (t) {
      throw "updateHex(hex) not supported for this alg/prov: " + this.algName + "/" + this.provName;
    }, this.digest = function () {
      throw "digest() not supported for this alg/prov: " + this.algName + "/" + this.provName;
    }, this.digestString = function (t) {
      throw "digestString(str) not supported for this alg/prov: " + this.algName + "/" + this.provName;
    }, this.digestHex = function (t) {
      throw "digestHex(hex) not supported for this alg/prov: " + this.algName + "/" + this.provName;
    }, void 0 !== a && void 0 !== a.alg && (this.algName = a.alg, void 0 === a.prov && (this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]), this.setAlgAndProvider(this.algName, this.provName));
  }, KJUR.crypto.Mac = function (a) {
    this.setAlgAndProvider = function (a, c) {
      if (null == a && (a = "hmacsha1"), a = a.toLowerCase(), "hmac" != a.substr(0, 4)) throw "setAlgAndProvider unsupported HMAC alg: " + a;void 0 === c && (c = KJUR.crypto.Util.DEFAULTPROVIDER[a]), this.algProv = a + "/" + c;var d = a.substr(4);if (-1 != ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:".indexOf(d) && "cryptojs" == c) {
        try {
          var e = eval(KJUR.crypto.Util.CRYPTOJSMESSAGEDIGESTNAME[d]);this.mac = CryptoJS.algo.HMAC.create(e, this.pass);
        } catch (t) {
          throw "setAlgAndProvider hash alg set fail hashAlg=" + d + "/" + t;
        }this.updateString = function (t) {
          this.mac.update(t);
        }, this.updateHex = function (t) {
          t = CryptoJS.enc.Hex.parse(t), this.mac.update(t);
        }, this.doFinal = function () {
          return this.mac.finalize().toString(CryptoJS.enc.Hex);
        }, this.doFinalString = function (t) {
          return this.updateString(t), this.doFinal();
        }, this.doFinalHex = function (t) {
          return this.updateHex(t), this.doFinal();
        };
      }
    }, this.updateString = function (t) {
      throw "updateString(str) not supported for this alg/prov: " + this.algProv;
    }, this.updateHex = function (t) {
      throw "updateHex(hex) not supported for this alg/prov: " + this.algProv;
    }, this.doFinal = function () {
      throw "digest() not supported for this alg/prov: " + this.algProv;
    }, this.doFinalString = function (t) {
      throw "digestString(str) not supported for this alg/prov: " + this.algProv;
    }, this.doFinalHex = function (t) {
      throw "digestHex(hex) not supported for this alg/prov: " + this.algProv;
    }, void 0 !== a && (void 0 !== a.pass && (this.pass = a.pass), void 0 !== a.alg && (this.algName = a.alg, void 0 === a.prov && (this.provName = KJUR.crypto.Util.DEFAULTPROVIDER[this.algName]), this.setAlgAndProvider(this.algName, this.provName)));
  }, KJUR.crypto.Signature = function (t) {
    var e = null;if (this._setAlgNames = function () {
      this.algName.match(/^(.+)with(.+)$/) && (this.mdAlgName = RegExp.$1.toLowerCase(), this.pubkeyAlgName = RegExp.$2.toLowerCase());
    }, this._zeroPaddingOfSignature = function (t, e) {
      for (var i = "", r = e / 4 - t.length, n = 0; n < r; n++) {
        i += "0";
      }return i + t;
    }, this.setAlgAndProvider = function (t, e) {
      if (this._setAlgNames(), "cryptojs/jsrsa" != e) throw "provider not supported: " + e;if (-1 != ":md5:sha1:sha224:sha256:sha384:sha512:ripemd160:sm3:".indexOf(this.mdAlgName)) {
        try {
          this.md = new KJUR.crypto.MessageDigest({ alg: this.mdAlgName });
        } catch (t) {
          throw "setAlgAndProvider hash alg set fail alg=" + this.mdAlgName + "/" + t;
        }this.init = function (t, e) {
          var i = null;try {
            i = void 0 === e ? KEYUTIL.getKey(t) : KEYUTIL.getKey(t, e);
          } catch (t) {
            throw "init failed:" + t;
          }if (!0 === i.isPrivate) this.prvKey = i, this.state = "SIGN";else {
            if (!0 !== i.isPublic) throw "init failed.:" + i;this.pubKey = i, this.state = "VERIFY";
          }
        }, this.initSign = function (t) {
          "string" == typeof t.ecprvhex && "string" == typeof t.eccurvename ? (this.ecprvhex = t.ecprvhex, this.eccurvename = t.eccurvename) : this.prvKey = t, this.state = "SIGN";
        }, this.initVerifyByPublicKey = function (t) {
          "string" == typeof t.ecpubhex && "string" == typeof t.eccurvename ? (this.ecpubhex = t.ecpubhex, this.eccurvename = t.eccurvename) : t instanceof KJUR.crypto.ECDSA ? this.pubKey = t : t instanceof RSAKey && (this.pubKey = t), this.state = "VERIFY";
        }, this.initVerifyByCertificatePEM = function (t) {
          var e = new X509();e.readCertPEM(t), this.pubKey = e.subjectPublicKeyRSA, this.state = "VERIFY";
        }, this.updateString = function (t) {
          this.md.updateString(t);
        }, this.updateHex = function (t) {
          this.md.updateHex(t);
        }, this.sign = function () {
          if ("sm2" != this.eccurvename && (this.sHashHex = this.md.digest()), "undefined" != typeof this.ecprvhex && "undefined" != typeof this.eccurvename) {
            if ("sm2" == this.eccurvename) {
              var t = new KJUR.crypto.SM3withSM2({ curve: this.eccurvename }),
                  e = t.ecparams.G,
                  i = e.multiply(new BigInteger$1(this.ecprvhex, 16)),
                  r = i.getX().toBigInteger().toRadix(16) + i.getY().toBigInteger().toRadix(16),
                  i = new SM3Digest(),
                  e = new SM3Digest().GetZ(e, r),
                  e = i.GetWords(i.GetHex(e).toString()),
                  r = CryptoJS.enc.Utf8.stringify(this.md.md._data),
                  r = CryptoJS.enc.Utf8.parse(r).toString(),
                  r = i.GetWords(r),
                  n = Array(i.GetDigestSize());i.BlockUpdate(e, 0, e.length), i.BlockUpdate(r, 0, r.length), i.DoFinal(n, 0), this.sHashHex = i.GetHex(n).toString();
            } else t = new KJUR.crypto.ECDSA({ curve: this.eccurvename });this.hSign = t.signHex(this.sHashHex, this.ecprvhex);
          } else if ("rsaandmgf1" == this.pubkeyAlgName) this.hSign = this.prvKey.signWithMessageHashPSS(this.sHashHex, this.mdAlgName, this.pssSaltLen);else if ("rsa" == this.pubkeyAlgName) this.hSign = this.prvKey.signWithMessageHash(this.sHashHex, this.mdAlgName);else if (this.prvKey instanceof KJUR.crypto.ECDSA) this.hSign = this.prvKey.signWithMessageHash(this.sHashHex);else {
            if (!(this.prvKey instanceof KJUR.crypto.DSA)) throw "Signature: unsupported public key alg: " + this.pubkeyAlgName;this.hSign = this.prvKey.signWithMessageHash(this.sHashHex);
          }return this.hSign;
        }, this.signString = function (t) {
          this.updateString(t), this.sign();
        }, this.signHex = function (t) {
          this.updateHex(t), this.sign();
        }, this.verify = function (t) {
          if ("sm2" != this.eccurvename && (this.sHashHex = this.md.digest()), "undefined" != typeof this.ecpubhex && "undefined" != typeof this.eccurvename) {
            if ("sm2" == this.eccurvename) {
              var e = new KJUR.crypto.SM3withSM2({ curve: this.eccurvename }),
                  i = e.ecparams.G,
                  r = this.ecpubhex.substr(2, 128),
                  n = new SM3Digest(),
                  i = new SM3Digest().GetZ(i, r),
                  i = n.GetWords(n.GetHex(i).toString()),
                  r = CryptoJS.enc.Utf8.stringify(this.md.md._data),
                  r = CryptoJS.enc.Utf8.parse(r).toString(),
                  r = n.GetWords(r),
                  o = Array(n.GetDigestSize());n.BlockUpdate(i, 0, i.length), n.BlockUpdate(r, 0, r.length), n.DoFinal(o, 0), this.sHashHex = n.GetHex(o).toString();
            } else e = new KJUR.crypto.ECDSA({ curve: this.eccurvename });return e.verifyHex(this.sHashHex, t, this.ecpubhex);
          }if ("rsaandmgf1" == this.pubkeyAlgName) return this.pubKey.verifyWithMessageHashPSS(this.sHashHex, t, this.mdAlgName, this.pssSaltLen);if ("rsa" == this.pubkeyAlgName || this.pubKey instanceof KJUR.crypto.ECDSA || this.pubKey instanceof KJUR.crypto.DSA) return this.pubKey.verifyWithMessageHash(this.sHashHex, t);throw "Signature: unsupported public key alg: " + this.pubkeyAlgName;
        };
      }
    }, this.init = function (t, e) {
      throw "init(key, pass) not supported for this alg:prov=" + this.algProvName;
    }, this.initVerifyByPublicKey = function (t) {
      throw "initVerifyByPublicKey(rsaPubKeyy) not supported for this alg:prov=" + this.algProvName;
    }, this.initVerifyByCertificatePEM = function (t) {
      throw "initVerifyByCertificatePEM(certPEM) not supported for this alg:prov=" + this.algProvName;
    }, this.initSign = function (t) {
      throw "initSign(prvKey) not supported for this alg:prov=" + this.algProvName;
    }, this.updateString = function (t) {
      throw "updateString(str) not supported for this alg:prov=" + this.algProvName;
    }, this.updateHex = function (t) {
      throw "updateHex(hex) not supported for this alg:prov=" + this.algProvName;
    }, this.sign = function () {
      throw "sign() not supported for this alg:prov=" + this.algProvName;
    }, this.signString = function (t) {
      throw "digestString(str) not supported for this alg:prov=" + this.algProvName;
    }, this.signHex = function (t) {
      throw "digestHex(hex) not supported for this alg:prov=" + this.algProvName;
    }, this.verify = function (t) {
      throw "verify(hSigVal) not supported for this alg:prov=" + this.algProvName;
    }, this.initParams = t, void 0 !== t && (void 0 !== t.alg && (this.algName = t.alg, this.provName = void 0 === t.prov ? KJUR.crypto.Util.DEFAULTPROVIDER[this.algName] : t.prov, this.algProvName = this.algName + ":" + this.provName, this.setAlgAndProvider(this.algName, this.provName), this._setAlgNames()), void 0 !== t.psssaltlen && (this.pssSaltLen = t.psssaltlen), void 0 !== t.prvkeypem)) {
      if (void 0 !== t.prvkeypas) throw "both prvkeypem and prvkeypas parameters not supported";try {
        e = new RSAKey(), e.readPrivateKeyFromPEMString(t.prvkeypem), this.initSign(e);
      } catch (t) {
        throw "fatal error to load pem private key: " + t;
      }
    }
  }, KJUR.crypto.OID = new function () {
    this.oidhex2name = { "2a864886f70d010101": "rsaEncryption", "2a8648ce3d0201": "ecPublicKey", "2a8648ce380401": "dsa", "2a8648ce3d030107": "secp256r1", "2b8104001f": "secp192k1", "2b81040021": "secp224r1", "2b8104000a": "secp256k1", "2b81040023": "secp521r1", "2b81040022": "secp384r1", "2a8648ce380403": "SHA1withDSA", "608648016503040301": "SHA224withDSA", "608648016503040302": "SHA256withDSA" };
  }(), ECFieldElementFp.prototype.equals = feFpEquals, ECFieldElementFp.prototype.toBigInteger = feFpToBigInteger, ECFieldElementFp.prototype.negate = feFpNegate, ECFieldElementFp.prototype.add = feFpAdd, ECFieldElementFp.prototype.subtract = feFpSubtract, ECFieldElementFp.prototype.multiply = feFpMultiply, ECFieldElementFp.prototype.square = feFpSquare, ECFieldElementFp.prototype.divide = feFpDivide, ECPointFp.prototype.getX = pointFpGetX, ECPointFp.prototype.getY = pointFpGetY, ECPointFp.prototype.equals = pointFpEquals, ECPointFp.prototype.isInfinity = pointFpIsInfinity, ECPointFp.prototype.negate = pointFpNegate, ECPointFp.prototype.add = pointFpAdd, ECPointFp.prototype.twice = pointFpTwice, ECPointFp.prototype.multiply = pointFpMultiply, ECPointFp.prototype.multiplyTwo = pointFpMultiplyTwo, ECCurveFp.prototype.getQ = curveFpGetQ, ECCurveFp.prototype.getA = curveFpGetA, ECCurveFp.prototype.getB = curveFpGetB, ECCurveFp.prototype.equals = curveFpEquals, ECCurveFp.prototype.getInfinity = curveFpGetInfinity, ECCurveFp.prototype.fromBigInteger = curveFpFromBigInteger, ECCurveFp.prototype.decodePointHex = curveFpDecodePointHex, ECFieldElementFp.prototype.getByteLength = function () {
    return Math.floor((this.toBigInteger().bitLength() + 7) / 8);
  }, ECPointFp.prototype.getEncoded = function (t) {
    var e = function e(t, _e) {
      var i = t.toByteArrayUnsigned();if (_e < i.length) i = i.slice(i.length - _e);else for (; _e > i.length;) {
        i.unshift(0);
      }return i;
    },
        i = this.getX().toBigInteger(),
        r = this.getY().toBigInteger(),
        i = e(i, 32);return t ? r.isEven() ? i.unshift(2) : i.unshift(3) : (i.unshift(4), i = i.concat(e(r, 32))), i;
  }, ECPointFp.decodeFrom = function (t, e) {
    var i = e.length - 1,
        r = e.slice(1, 1 + i / 2),
        i = e.slice(1 + i / 2, 1 + i);return r.unshift(0), i.unshift(0), r = new BigInteger$1(r), i = new BigInteger$1(i), new ECPointFp(t, t.fromBigInteger(r), t.fromBigInteger(i));
  }, ECPointFp.decodeFromHex = function (t, e) {
    e.substr(0, 2);var i = e.length - 2,
        r = e.substr(2, i / 2),
        i = e.substr(2 + i / 2, i / 2),
        r = new BigInteger$1(r, 16),
        i = new BigInteger$1(i, 16);return new ECPointFp(t, t.fromBigInteger(r), t.fromBigInteger(i));
  }, ECPointFp.prototype.add2D = function (t) {
    if (this.isInfinity()) return t;if (t.isInfinity()) return this;if (this.x.equals(t.x)) return this.y.equals(t.y) ? this.twice() : this.curve.getInfinity();var e = t.x.subtract(this.x),
        e = t.y.subtract(this.y).divide(e);return t = e.square().subtract(this.x).subtract(t.x), e = e.multiply(this.x.subtract(t)).subtract(this.y), new ECPointFp(this.curve, t, e);
  }, ECPointFp.prototype.twice2D = function () {
    if (this.isInfinity()) return this;if (0 == this.y.toBigInteger().signum()) return this.curve.getInfinity();var t = this.curve.fromBigInteger(BigInteger$1.valueOf(2)),
        e = this.curve.fromBigInteger(BigInteger$1.valueOf(3)),
        e = this.x.square().multiply(e).add(this.curve.a).divide(this.y.multiply(t)),
        t = e.square().subtract(this.x.multiply(t)),
        e = e.multiply(this.x.subtract(t)).subtract(this.y);return new ECPointFp(this.curve, t, e);
  }, ECPointFp.prototype.multiply2D = function (t) {
    var e = this;if (this.isInfinity()) return this;if (0 == t.signum()) return this.curve.getInfinity();var i,
        r = t.multiply(new BigInteger$1("3")),
        n = this.negate(),
        o = this;for (i = r.bitLength() - 2; 0 < i; --i) {
      var o = o.twice(),
          s = r.testBit(i),
          a = t.testBit(i);s != a && (o = o.add2D(s ? e : n));
    }return o;
  }, ECPointFp.prototype.isOnCurve = function () {
    var t = this.getX().toBigInteger(),
        e = this.getY().toBigInteger(),
        i = this.curve.getA().toBigInteger(),
        r = this.curve.getB().toBigInteger(),
        n = this.curve.getQ(),
        e = e.multiply(e).mod(n),
        t = t.multiply(t).multiply(t).add(i.multiply(t)).add(r).mod(n);return e.equals(t);
  }, ECPointFp.prototype.toString = function () {
    return "(" + this.getX().toBigInteger().toString() + "," + this.getY().toBigInteger().toString() + ")";
  }, ECPointFp.prototype.validate = function () {
    var t = this.curve.getQ();if (this.isInfinity()) throw Error("Point is at infinity.");var e = this.getX().toBigInteger(),
        i = this.getY().toBigInteger();if (0 > e.compareTo(BigInteger$1.ONE) || 0 < e.compareTo(t.subtract(BigInteger$1.ONE))) throw Error("x coordinate out of bounds");if (0 > i.compareTo(BigInteger$1.ONE) || 0 < i.compareTo(t.subtract(BigInteger$1.ONE))) throw Error("y coordinate out of bounds");if (!this.isOnCurve()) throw Error("Point is not on the curve.");if (this.multiply(t).isInfinity()) throw Error("Point is not a scalar multiple of G.");return !0;
  }, "undefined" != typeof KJUR && KJUR || (KJUR = {}), "undefined" != typeof KJUR.crypto && KJUR.crypto || (KJUR.crypto = {}), KJUR.crypto.ECDSA = function (t) {
    var e = new SecureRandom$1();this.type = "EC", this.getBigRandom = function (t) {
      return new BigInteger$1(t.bitLength(), e).mod(t.subtract(BigInteger$1.ONE)).add(BigInteger$1.ONE);
    }, this.setNamedCurve = function (t) {
      this.ecparams = KJUR.crypto.ECParameterDB.getByName(t), this.pubKeyHex = this.prvKeyHex = null, this.curveName = t;
    }, this.setPrivateKeyHex = function (t) {
      this.isPrivate = !0, this.prvKeyHex = t;
    }, this.setPublicKeyHex = function (t) {
      this.isPublic = !0, this.pubKeyHex = t;
    }, this.generateKeyPairHex = function () {
      var t = this.getBigRandom(this.ecparams.n),
          e = this.ecparams.G.multiply(t),
          i = e.getX().toBigInteger(),
          e = e.getY().toBigInteger(),
          r = this.ecparams.keylen / 4,
          t = ("0000000000" + t.toString(16)).slice(-r),
          i = ("0000000000" + i.toString(16)).slice(-r),
          e = ("0000000000" + e.toString(16)).slice(-r),
          i = "04" + i + e;return this.setPrivateKeyHex(t), this.setPublicKeyHex(i), { ecprvhex: t, ecpubhex: i };
    }, this.signWithMessageHash = function (t) {
      return this.signHex(t, this.prvKeyHex);
    }, this.signHex = function (t, e) {
      var i = this,
          r = new BigInteger$1(e, 16),
          n = this.ecparams.n,
          o = new BigInteger$1(t, 16);do {
        var s = i.getBigRandom(n),
            a = i.ecparams.G.multiply(s).getX().toBigInteger().mod(n);
      } while (0 >= a.compareTo(BigInteger$1.ZERO));return r = s.modInverse(n).multiply(o.add(r.multiply(a))).mod(n), KJUR.crypto.ECDSA.biRSSigToASN1Sig(a, r);
    }, this.sign = function (t, e) {
      var i = this,
          r = this.ecparams.n,
          n = BigInteger$1.fromByteArrayUnsigned(t);do {
        var o = i.getBigRandom(r),
            s = i.ecparams.G.multiply(o).getX().toBigInteger().mod(r);
      } while (0 >= s.compareTo(BigInteger$1.ZERO));return r = o.modInverse(r).multiply(n.add(e.multiply(s))).mod(r), this.serializeSig(s, r);
    }, this.verifyWithMessageHash = function (t, e) {
      return this.verifyHex(t, e, this.pubKeyHex);
    }, this.verifyHex = function (t, e, i) {
      var r;return r = KJUR.crypto.ECDSA.parseSigHex(e), e = r.r, r = r.s, i = ECPointFp.decodeFromHex(this.ecparams.curve, i), t = new BigInteger$1(t, 16), this.verifyRaw(t, e, r, i);
    }, this.verify = function (t, e, i) {
      var r;if (Bitcoin.Util.isArray(e)) e = this.parseSig(e), r = e.r, e = e.s;else {
        if ("object" != (typeof e === "undefined" ? "undefined" : _typeof(e)) || !e.r || !e.s) throw "Invalid value for signature";r = e.r, e = e.s;
      }if (!(i instanceof ECPointFp)) {
        if (!Bitcoin.Util.isArray(i)) throw "Invalid format for pubkey value, must be byte array or ECPointFp";i = ECPointFp.decodeFrom(this.ecparams.curve, i);
      }return t = BigInteger$1.fromByteArrayUnsigned(t), this.verifyRaw(t, r, e, i);
    }, this.verifyRaw = function (t, e, i, r) {
      var n = this.ecparams.n,
          o = this.ecparams.G;return !(0 > e.compareTo(BigInteger$1.ONE) || 0 <= e.compareTo(n) || 0 > i.compareTo(BigInteger$1.ONE) || 0 <= i.compareTo(n)) && (i = i.modInverse(n), t = t.multiply(i).mod(n), i = e.multiply(i).mod(n), o.multiply(t).add(r.multiply(i)).getX().toBigInteger().mod(n).equals(e));
    }, this.serializeSig = function (t, e) {
      var i = t.toByteArraySigned(),
          r = e.toByteArraySigned(),
          n = [];return n.push(2), n.push(i.length), n = n.concat(i), n.push(2), n.push(r.length), n = n.concat(r), n.unshift(n.length), n.unshift(48), n;
    }, this.parseSig = function (t) {
      var e;if (48 != t[0]) throw Error("Signature not a valid DERSequence");if (e = 2, 2 != t[e]) throw Error("First element in signature must be a DERInteger");var i = t.slice(e + 2, e + 2 + t[e + 1]);if (e += 2 + t[e + 1], 2 != t[e]) throw Error("Second element in signature must be a DERInteger");return t = t.slice(e + 2, e + 2 + t[e + 1]), i = BigInteger$1.fromByteArrayUnsigned(i), t = BigInteger$1.fromByteArrayUnsigned(t), { r: i, s: t };
    }, this.parseSigCompact = function (t) {
      if (65 !== t.length) throw "Signature has the wrong length";var e = t[0] - 27;if (0 > e || 7 < e) throw "Invalid signature type";var i = this.ecparams.n,
          r = BigInteger$1.fromByteArrayUnsigned(t.slice(1, 33)).mod(i);return t = BigInteger$1.fromByteArrayUnsigned(t.slice(33, 65)).mod(i), { r: r, s: t, i: e };
    }, void 0 !== t && void 0 !== t.curve && (this.curveName = t.curve), void 0 === this.curveName && (this.curveName = "secp256r1"), this.setNamedCurve(this.curveName), void 0 !== t && (void 0 !== t.prv && this.setPrivateKeyHex(t.prv), void 0 !== t.pub && this.setPublicKeyHex(t.pub));
  }, KJUR.crypto.ECDSA.parseSigHex = function (t) {
    var e = KJUR.crypto.ECDSA.parseSigHexInHexRS(t);return t = new BigInteger$1(e.r, 16), e = new BigInteger$1(e.s, 16), { r: t, s: e };
  }, KJUR.crypto.ECDSA.parseSigHexInHexRS = function (t) {
    if ("30" != t.substr(0, 2)) throw "signature is not a ASN.1 sequence";var e = ASN1HEX.getPosArrayOfChildren_AtObj(t, 0);if (2 != e.length) throw "number of signature ASN.1 sequence elements seem wrong";var i = e[0],
        e = e[1];if ("02" != t.substr(i, 2)) throw "1st item of sequene of signature is not ASN.1 integer";if ("02" != t.substr(e, 2)) throw "2nd item of sequene of signature is not ASN.1 integer";return i = ASN1HEX.getHexOfV_AtObj(t, i), t = ASN1HEX.getHexOfV_AtObj(t, e), { r: i, s: t };
  }, KJUR.crypto.ECDSA.asn1SigToConcatSig = function (t) {
    var e = KJUR.crypto.ECDSA.parseSigHexInHexRS(t);if (t = e.r, e = e.s, "00" == t.substr(0, 2) && 8 == t.length / 2 * 8 % 128 && (t = t.substr(2)), "00" == e.substr(0, 2) && 8 == e.length / 2 * 8 % 128 && (e = e.substr(2)), 0 != t.length / 2 * 8 % 128) throw "unknown ECDSA sig r length error";if (0 != e.length / 2 * 8 % 128) throw "unknown ECDSA sig s length error";return t + e;
  }, KJUR.crypto.ECDSA.concatSigToASN1Sig = function (t) {
    if (0 != t.length / 2 * 8 % 128) throw "unknown ECDSA concatinated r-s sig  length error";var e = t.substr(0, t.length / 2);return t = t.substr(t.length / 2), KJUR.crypto.ECDSA.hexRSSigToASN1Sig(e, t);
  }, KJUR.crypto.ECDSA.hexRSSigToASN1Sig = function (t, e) {
    var i = new BigInteger$1(t, 16),
        r = new BigInteger$1(e, 16);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(i, r);
  }, KJUR.crypto.ECDSA.biRSSigToASN1Sig = function (t, e) {
    var i = new KJUR.asn1.DERInteger({ bigint: t }),
        r = new KJUR.asn1.DERInteger({ bigint: e });return new KJUR.asn1.DERSequence({ array: [i, r] }).getEncodedHex();
  }, function () {
    var t = CryptoJS,
        e = t.lib,
        i = e.WordArray,
        r = e.Hasher,
        n = [],
        e = t.algo.SM3 = r.extend({ _doReset: function _doReset() {
        this._hash = new i.init([1937774191, 1226093241, 388252375, 3666478592, 2842636476, 372324522, 3817729613, 2969243214]);
      }, _doProcessBlock: function _doProcessBlock(t, e) {
        for (var i = this._hash.words, r = i[0], o = i[1], s = i[2], a = i[3], c = i[4], h = 0; 80 > h; h++) {
          if (16 > h) n[h] = 0 | t[e + h];else {
            var p = n[h - 3] ^ n[h - 8] ^ n[h - 14] ^ n[h - 16];n[h] = p << 1 | p >>> 31;
          }p = (r << 5 | r >>> 27) + c + n[h], p = 20 > h ? p + ((o & s | ~o & a) + 1518500249) : 40 > h ? p + ((o ^ s ^ a) + 1859775393) : 60 > h ? p + ((o & s | o & a | s & a) - 1894007588) : p + ((o ^ s ^ a) - 899497514), c = a, a = s, s = o << 30 | o >>> 2, o = r, r = p;
        }i[0] = i[0] + r | 0, i[1] = i[1] + o | 0, i[2] = i[2] + s | 0, i[3] = i[3] + a | 0, i[4] = i[4] + c | 0;
      }, _doFinalize: function _doFinalize() {
        var t = this._data,
            e = t.words,
            i = 8 * this._nDataBytes,
            r = 8 * t.sigBytes;return e[r >>> 5] |= 128 << 24 - r % 32, e[(r + 64 >>> 9 << 4) + 14] = Math.floor(i / 4294967296), e[(r + 64 >>> 9 << 4) + 15] = i, t.sigBytes = 4 * e.length, this._process(), this._hash;
      }, clone: function clone() {
        var t = r.clone.call(this);return t._hash = this._hash.clone(), t;
      } });t.SM3 = r._createHelper(e), t.HmacSM3 = r._createHmacHelper(e);
  }(), SM3Digest.prototype = { Init: function Init() {
      this.xBuf = Array(4), this.Reset();
    }, InitDigest: function InitDigest(t) {
      this.xBuf = Array(t.xBuf.length), Array.Copy(t.xBuf, 0, this.xBuf, 0, t.xBuf.length), this.xBufOff = t.xBufOff, this.byteCount = t.byteCount, Array.Copy(t.X, 0, this.X, 0, t.X.length), this.xOff = t.xOff, Array.Copy(t.v, 0, this.v, 0, t.v.length);
    }, GetDigestSize: function GetDigestSize() {
      return this.DIGEST_LENGTH;
    }, Reset: function Reset() {
      this.xBufOff = this.byteCount = 0, Array.Clear(this.xBuf, 0, this.xBuf.length), Array.Copy(this.v0, 0, this.v, 0, this.v0.length), this.xOff = 0, Array.Copy(this.X0, 0, this.X, 0, this.X0.length);
    }, GetByteLength: function GetByteLength() {
      return this.BYTE_LENGTH;
    }, ProcessBlock: function ProcessBlock() {
      var t,
          e = this,
          i = this.X,
          r = Array(64);for (t = 16; 68 > t; t++) {
        i[t] = e.P1(i[t - 16] ^ i[t - 9] ^ e.ROTATE(i[t - 3], 15)) ^ e.ROTATE(i[t - 13], 7) ^ i[t - 6];
      }for (t = 0; 64 > t; t++) {
        r[t] = i[t] ^ i[t + 4];
      }var n = this.v,
          o = this.v_;Array.Copy(n, 0, o, 0, this.v0.length);var s, a;for (t = 0; 16 > t; t++) {
        a = e.ROTATE(o[0], 12), s = Int32.parse(Int32.parse(a + o[4]) + e.ROTATE(e.T_00_15, t)), s = e.ROTATE(s, 7), a ^= s, a = Int32.parse(Int32.parse(e.FF_00_15(o[0], o[1], o[2]) + o[3]) + a) + r[t], s = Int32.parse(Int32.parse(e.GG_00_15(o[4], o[5], o[6]) + o[7]) + s) + i[t], o[3] = o[2], o[2] = e.ROTATE(o[1], 9), o[1] = o[0], o[0] = a, o[7] = o[6], o[6] = e.ROTATE(o[5], 19), o[5] = o[4], o[4] = e.P0(s);
      }for (t = 16; 64 > t; t++) {
        a = e.ROTATE(o[0], 12), s = Int32.parse(Int32.parse(a + o[4]) + e.ROTATE(e.T_16_63, t)), s = e.ROTATE(s, 7), a ^= s, a = Int32.parse(Int32.parse(e.FF_16_63(o[0], o[1], o[2]) + o[3]) + a) + r[t], s = Int32.parse(Int32.parse(e.GG_16_63(o[4], o[5], o[6]) + o[7]) + s) + i[t], o[3] = o[2], o[2] = e.ROTATE(o[1], 9), o[1] = o[0], o[0] = a, o[7] = o[6], o[6] = e.ROTATE(o[5], 19), o[5] = o[4], o[4] = e.P0(s);
      }for (t = 0; 8 > t; t++) {
        n[t] ^= Int32.parse(o[t]);
      }this.xOff = 0, Array.Copy(this.X0, 0, this.X, 0, this.X0.length);
    }, ProcessWord: function ProcessWord(t, e) {
      var i = t[e] << 24,
          i = i | (255 & t[++e]) << 16,
          i = i | (255 & t[++e]) << 8,
          i = i | 255 & t[++e];this.X[this.xOff] = i, 16 == ++this.xOff && this.ProcessBlock();
    }, ProcessLength: function ProcessLength(t) {
      14 < this.xOff && this.ProcessBlock(), this.X[14] = this.URShiftLong(t, 32), this.X[15] = 4294967295 & t;
    }, IntToBigEndian: function IntToBigEndian(t, e, i) {
      e[i] = Int32.parseByte(this.URShift(t, 24)), e[++i] = Int32.parseByte(this.URShift(t, 16)), e[++i] = Int32.parseByte(this.URShift(t, 8)), e[++i] = Int32.parseByte(t);
    }, DoFinal: function DoFinal(t, e) {
      var i = this;this.Finish();for (var r = 0; 8 > r; r++) {
        i.IntToBigEndian(i.v[r], t, e + 4 * r);
      }this.Reset();for (var n = t.length, r = 0; r < n; r++) {
        t[r] &= 255;
      }return this.DIGEST_LENGTH;
    }, Update: function Update(t) {
      this.xBuf[this.xBufOff++] = t, this.xBufOff == this.xBuf.length && (this.ProcessWord(this.xBuf, 0), this.xBufOff = 0), this.byteCount++;
    }, BlockUpdate: function BlockUpdate(t, e, i) {
      for (var r = this; 0 != this.xBufOff && 0 < i;) {
        r.Update(t[e]), e++, i--;
      }for (; i > this.xBuf.length;) {
        r.ProcessWord(t, e), e += r.xBuf.length, i -= r.xBuf.length, r.byteCount += r.xBuf.length;
      }for (; 0 < i;) {
        r.Update(t[e]), e++, i--;
      }
    }, Finish: function Finish() {
      var t = this,
          e = this.byteCount << 3;for (this.Update(128); 0 != this.xBufOff;) {
        t.Update(0);
      }this.ProcessLength(e), this.ProcessBlock();
    }, ROTATE: function ROTATE(t, e) {
      return t << e | this.URShift(t, 32 - e);
    }, P0: function P0(t) {
      return t ^ this.ROTATE(t, 9) ^ this.ROTATE(t, 17);
    }, P1: function P1(t) {
      return t ^ this.ROTATE(t, 15) ^ this.ROTATE(t, 23);
    }, FF_00_15: function FF_00_15(t, e, i) {
      return t ^ e ^ i;
    }, FF_16_63: function FF_16_63(t, e, i) {
      return t & e | t & i | e & i;
    }, GG_00_15: function GG_00_15(t, e, i) {
      return t ^ e ^ i;
    }, GG_16_63: function GG_16_63(t, e, i) {
      return t & e | ~t & i;
    }, URShift: function URShift(t, e) {
      return (t > Int32.maxValue || t < Int32.minValue) && (t = Int32.parse(t)), 0 <= t ? t >> e : (t >> e) + (2 << ~e);
    }, URShiftLong: function URShiftLong(t, e) {
      var i;if (i = new BigInteger$1(), i.fromInt(t), 0 <= i.signum()) i = i.shiftRight(e).intValue();else {
        var r = new BigInteger$1();r.fromInt(2);var n = ~e;if (i = "", 0 > n) {
          for (r = 64 + n, n = 0; n < r; n++) {
            i += "0";
          }r = new BigInteger$1(), r.fromInt(t >> e), i = new BigInteger$1("10" + i, 2), i.toRadix(10), i = i.add(r).toRadix(10);
        } else i = r.shiftLeft(~e).intValue(), i = (t >> e) + i;
      }return i;
    }, GetZ: function GetZ(t, e) {
      var i = CryptoJS.enc.Utf8.parse("1234567812345678"),
          r = 32 * i.words.length;this.Update(r >> 8 & 255), this.Update(255 & r), i = this.GetWords(i.toString()), this.BlockUpdate(i, 0, i.length);var i = this.GetWords(t.curve.a.toBigInteger().toRadix(16)),
          r = this.GetWords(t.curve.b.toBigInteger().toRadix(16)),
          n = this.GetWords(t.getX().toBigInteger().toRadix(16)),
          o = this.GetWords(t.getY().toBigInteger().toRadix(16)),
          s = this.GetWords(e.substr(0, 64)),
          a = this.GetWords(e.substr(64, 64));return this.BlockUpdate(i, 0, i.length), this.BlockUpdate(r, 0, r.length), this.BlockUpdate(n, 0, n.length), this.BlockUpdate(o, 0, o.length), this.BlockUpdate(s, 0, s.length), this.BlockUpdate(a, 0, a.length), i = Array(this.GetDigestSize()), this.DoFinal(i, 0), i;
    }, GetWords: function GetWords(t) {
      for (var e = [], i = t.length, r = 0; r < i; r += 2) {
        e[e.length] = parseInt(t.substr(r, 2), 16);
      }return e;
    }, GetHex: function GetHex(t) {
      for (var e = [], i = 0, r = 0; r < 2 * t.length; r += 2) {
        e[r >>> 3] |= parseInt(t[i]) << 24 - r % 8 * 4, i++;
      }return new CryptoJS.lib.WordArray.init(e, t.length);
    } }, Array.Clear = function (t, e, i) {
    for (var r in t) {
      t[r] = null;
    }
  }, Array.Copy = function (t, e, i, r, n) {
    for (t = t.slice(e, e + n), e = 0; e < t.length; e++) {
      i[r] = t[e], r++;
    }
  };var Int32 = { minValue: -parseInt("10000000000000000000000000000000", 2), maxValue: 2147483647, parse: function parse(t) {
      if (t < this.minValue) {
        t = new Number(-t), t = t.toString(2), t = t.substr(t.length - 31, 31);for (var e = "", i = 0; i < t.length; i++) {
          var r = t.substr(i, 1),
              e = e + ("0" == r ? "1" : "0");
        }return t = parseInt(e, 2), t + 1;
      }if (t > this.maxValue) {
        for (t = Number(t), t = t.toString(2), t = t.substr(t.length - 31, 31), e = "", i = 0; i < t.length; i++) {
          r = t.substr(i, 1), e += "0" == r ? "1" : "0";
        }return t = parseInt(e, 2), -(t + 1);
      }return t;
    }, parseByte: function parseByte(t) {
      if (0 > t) {
        t = new Number(-t), t = t.toString(2), t = t.substr(t.length - 8, 8);for (var e = "", i = 0; i < t.length; i++) {
          var r = t.substr(i, 1),
              e = e + ("0" == r ? "1" : "0");
        }return parseInt(e, 2) + 1;
      }return 255 < t ? (t = Number(t), t = t.toString(2), parseInt(t.substr(t.length - 8, 8), 2)) : t;
    } };"undefined" != typeof KJUR && KJUR || (KJUR = {}), "undefined" != typeof KJUR.crypto && KJUR.crypto || (KJUR.crypto = {}), KJUR.crypto.SM3withSM2 = function (t) {
    var e = new SecureRandom$1();this.type = "SM2", this.getBigRandom = function (t) {
      return new BigInteger$1(t.bitLength(), e).mod(t.subtract(BigInteger$1.ONE)).add(BigInteger$1.ONE);
    }, this.setNamedCurve = function (t) {
      this.ecparams = KJUR.crypto.ECParameterDB.getByName(t), this.pubKeyHex = this.prvKeyHex = null, this.curveName = t;
    }, this.setPrivateKeyHex = function (t) {
      this.isPrivate = !0, this.prvKeyHex = t;
    }, this.setPublicKeyHex = function (t) {
      this.isPublic = !0, this.pubKeyHex = t;
    }, this.generateKeyPairHex = function () {
      var t = this.getBigRandom(this.ecparams.n),
          e = this.ecparams.G.multiply(t),
          i = e.getX().toBigInteger(),
          e = e.getY().toBigInteger(),
          r = this.ecparams.keylen / 4,
          t = ("0000000000" + t.toString(16)).slice(-r),
          i = ("0000000000" + i.toString(16)).slice(-r),
          e = ("0000000000" + e.toString(16)).slice(-r),
          i = "04" + i + e;return this.setPrivateKeyHex(t), this.setPublicKeyHex(i), { ecprvhex: t, ecpubhex: i };
    }, this.signWithMessageHash = function (t) {
      return this.signHex(t, this.prvKeyHex);
    }, this.signHex = function (t, e) {
      var i = this,
          r = new BigInteger$1(e, 16),
          n = this.ecparams.n,
          o = new BigInteger$1(t, 16),
          s = null,
          a = null,
          c = a = null;do {
        do {
          a = i.generateKeyPairHex(), s = new BigInteger$1(a.ecprvhex, 16), a = ECPointFp.decodeFromHex(i.ecparams.curve, a.ecpubhex), a = o.add(a.getX().toBigInteger()), a = a.mod(n);
        } while (a.equals(BigInteger$1.ZERO) || a.add(s).equals(n));
        var h = r.add(BigInteger$1.ONE),
            h = h.modInverse(n),
            c = a.multiply(r),
            c = s.subtract(c).mod(n),
            c = h.multiply(c).mod(n);
      } while (c.equals(BigInteger$1.ZERO));return KJUR.crypto.ECDSA.biRSSigToASN1Sig(a, c);
    }, this.sign = function (t, e) {
      var i = this,
          r = this.ecparams.n,
          n = BigInteger$1.fromByteArrayUnsigned(t);do {
        var o = i.getBigRandom(r),
            s = i.ecparams.G.multiply(o).getX().toBigInteger().mod(r);
      } while (0 >= s.compareTo(BigInteger$1.ZERO));return r = o.modInverse(r).multiply(n.add(e.multiply(s))).mod(r), this.serializeSig(s, r);
    }, this.verifyWithMessageHash = function (t, e) {
      return this.verifyHex(t, e, this.pubKeyHex);
    }, this.verifyHex = function (t, e, i) {
      var r;return r = KJUR.crypto.ECDSA.parseSigHex(e), e = r.r, r = r.s, i = ECPointFp.decodeFromHex(this.ecparams.curve, i), t = new BigInteger$1(t, 16), this.verifyRaw(t, e, r, i);
    }, this.verify = function (t, e, i) {
      var r;if (Bitcoin.Util.isArray(e)) e = this.parseSig(e), r = e.r, e = e.s;else {
        if ("object" != (typeof e === "undefined" ? "undefined" : _typeof(e)) || !e.r || !e.s) throw "Invalid value for signature";r = e.r, e = e.s;
      }if (!(i instanceof ECPointFp)) {
        if (!Bitcoin.Util.isArray(i)) throw "Invalid format for pubkey value, must be byte array or ECPointFp";i = ECPointFp.decodeFrom(this.ecparams.curve, i);
      }return t = BigInteger$1.fromByteArrayUnsigned(t), this.verifyRaw(t, r, e, i);
    }, this.verifyRaw = function (t, e, i, r) {
      var n = this.ecparams.n,
          o = this.ecparams.G,
          s = e.add(i).mod(n);return !s.equals(BigInteger$1.ZERO) && (i = o.multiply(i), i = i.add(r.multiply(s)), t = t.add(i.getX().toBigInteger()).mod(n), e.equals(t));
    }, this.serializeSig = function (t, e) {
      var i = t.toByteArraySigned(),
          r = e.toByteArraySigned(),
          n = [];return n.push(2), n.push(i.length), n = n.concat(i), n.push(2), n.push(r.length), n = n.concat(r), n.unshift(n.length), n.unshift(48), n;
    }, this.parseSig = function (t) {
      var e;if (48 != t[0]) throw Error("Signature not a valid DERSequence");if (e = 2, 2 != t[e]) throw Error("First element in signature must be a DERInteger");var i = t.slice(e + 2, e + 2 + t[e + 1]);if (e += 2 + t[e + 1], 2 != t[e]) throw Error("Second element in signature must be a DERInteger");return t = t.slice(e + 2, e + 2 + t[e + 1]), i = BigInteger$1.fromByteArrayUnsigned(i), t = BigInteger$1.fromByteArrayUnsigned(t), { r: i, s: t };
    }, this.parseSigCompact = function (t) {
      if (65 !== t.length) throw "Signature has the wrong length";var e = t[0] - 27;if (0 > e || 7 < e) throw "Invalid signature type";var i = this.ecparams.n,
          r = BigInteger$1.fromByteArrayUnsigned(t.slice(1, 33)).mod(i);return t = BigInteger$1.fromByteArrayUnsigned(t.slice(33, 65)).mod(i), { r: r, s: t, i: e };
    }, void 0 !== t && void 0 !== t.curve && (this.curveName = t.curve), void 0 === this.curveName && (this.curveName = "sm2"), this.setNamedCurve(this.curveName), void 0 !== t && (void 0 !== t.prv && this.setPrivateKeyHex(t.prv), void 0 !== t.pub && this.setPublicKeyHex(t.pub));
  }, "undefined" != typeof KJUR && KJUR || (KJUR = {}), "undefined" != typeof KJUR.crypto && KJUR.crypto || (KJUR.crypto = {}), KJUR.crypto.ECParameterDB = new function () {
    var t = {},
        e = {};this.getByName = function (i) {
      var r = i;if ("undefined" != typeof e[r] && (r = e[i]), "undefined" != typeof t[r]) return t[r];throw "unregistered EC curve name: " + r;
    }, this.regist = function (i, r, n, o, s, a, c, h, p, u, l, f) {
      for (t[i] = {}, n = new BigInteger$1(n, 16), o = new BigInteger$1(o, 16), s = new BigInteger$1(s, 16), a = new BigInteger$1(a, 16), c = new BigInteger$1(c, 16), n = new ECCurveFp(n, o, s), h = n.decodePointHex("04" + h + p), t[i].name = i, t[i].keylen = r, t[i].curve = n, t[i].G = h, t[i].n = a, t[i].h = c, t[i].oid = l, t[i].info = f, r = 0; r < u.length; r++) {
        e[u[r]] = i;
      }
    };
  }(), KJUR.crypto.ECParameterDB.regist("secp128r1", 128, "FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF", "FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC", "E87579C11079F43DD824993C2CEE5ED3", "FFFFFFFE0000000075A30D1B9038A115", "1", "161FF7528B899B2D0C28607CA52C5B86", "CF5AC8395BAFEB13C02DA292DDED7A83", [], "", "secp128r1 : SECG curve over a 128 bit prime field"), KJUR.crypto.ECParameterDB.regist("secp160k1", 160, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73", "0", "7", "0100000000000000000001B8FA16DFAB9ACA16B6B3", "1", "3B4C382CE37AA192A4019E763036F4F5DD4D7EBB", "938CF935318FDCED6BC28286531733C3F03C4FEE", [], "", "secp160k1 : SECG curve over a 160 bit prime field"), KJUR.crypto.ECParameterDB.regist("secp160r1", 160, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC", "1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45", "0100000000000000000001F4C8F927AED3CA752257", "1", "4A96B5688EF573284664698968C38BB913CBFC82", "23A628553168947D59DCC912042351377AC5FB32", [], "", "secp160r1 : SECG curve over a 160 bit prime field"), KJUR.crypto.ECParameterDB.regist("secp192k1", 192, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37", "0", "3", "FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D", "1", "DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D", "9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D", []), KJUR.crypto.ECParameterDB.regist("secp192r1", 192, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC", "64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1", "FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831", "1", "188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012", "07192B95FFC8DA78631011ED6B24CDD573F977A11E794811", []), KJUR.crypto.ECParameterDB.regist("secp224r1", 224, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE", "B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4", "FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D", "1", "B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21", "BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34", []), KJUR.crypto.ECParameterDB.regist("secp256k1", 256, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F", "0", "7", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141", "1", "79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798", "483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8", []), KJUR.crypto.ECParameterDB.regist("secp256r1", 256, "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF", "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC", "5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B", "FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551", "1", "6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296", "4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5", ["NIST P-256", "P-256", "prime256v1"]), KJUR.crypto.ECParameterDB.regist("secp384r1", 384, "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC", "B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973", "1", "AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7", "3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f", ["NIST P-384", "P-384"]), KJUR.crypto.ECParameterDB.regist("secp521r1", 521, "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC", "051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00", "1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409", "1", "C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66", "011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650", ["NIST P-521", "P-521"]), KJUR.crypto.ECParameterDB.regist("sm2", 256, "FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF", "FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFC", "28E9FA9E9D9F5E344D5A9E4BCF6509A7F39789F515AB8F92DDBCBD414D940E93", "FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123", "1", "32C4AE2C1F1981195F9904466A39C9948FE30BBFF2660BE1715A4589334C74C7", "BC3736A2F4F6779C59BDCEE36B692153D0A9877CC62A474002DF32E52139F0A0", ["sm2", "SM2"]), SM2Cipher.prototype = { Reset: function Reset() {
      this.sm3keybase = new SM3Digest(), this.sm3c3 = new SM3Digest();for (var t = this.p2.getX().toBigInteger().toRadix(16); 64 > t.length;) {
        t = "0" + t;
      }for (var t = this.GetWords(t), e = this.p2.getY().toBigInteger().toRadix(16); 64 > e.length;) {
        e = "0" + e;
      }e = this.GetWords(e), this.sm3keybase.BlockUpdate(t, 0, t.length), this.sm3c3.BlockUpdate(t, 0, t.length), this.sm3keybase.BlockUpdate(e, 0, e.length), this.ct = 1, this.NextKey();
    }, NextKey: function NextKey() {
      var t = new SM3Digest(this.sm3keybase);t.Update(this.ct >> 24 & 255), t.Update(this.ct >> 16 & 255), t.Update(this.ct >> 8 & 255), t.Update(255 & this.ct), t.DoFinal(this.key, 0), this.keyOff = 0, this.ct++;
    }, KDF: function KDF(t) {
      var e = Array(t),
          i = new SM3Digest(),
          r = Array(32),
          n = 1,
          o = t / 32;t %= 32;for (var s = this.p2.getX().toBigInteger().toRadix(16); 64 > s.length;) {
        s = "0" + s;
      }for (var s = this.GetWords(s), a = this.p2.getY().toBigInteger().toRadix(16); 64 > a.length;) {
        a = "0" + a;
      }for (var a = this.GetWords(a), c = 0, h = 0; h < o; h++) {
        i.BlockUpdate(s, 0, s.length), i.BlockUpdate(a, 0, a.length), i.Update(n >> 24 & 255), i.Update(n >> 16 & 255), i.Update(n >> 8 & 255), i.Update(255 & n), i.DoFinal(e, c), c += 32, n++;
      }for (0 != t && (i.BlockUpdate(s, 0, s.length), i.BlockUpdate(a, 0, a.length), i.Update(n >> 24 & 255), i.Update(n >> 16 & 255), i.Update(n >> 8 & 255), i.Update(255 & n), i.DoFinal(r, 0)), Array.Copy(r, 0, e, c, t), h = 0; h < e.length; h++) {
        e[h] &= 255;
      }return e;
    }, InitEncipher: function InitEncipher(t) {
      var e = null,
          i = null,
          i = new KJUR.crypto.ECDSA({ curve: "sm2" }),
          r = i.generateKeyPairHex(),
          e = new BigInteger$1(r.ecprvhex, 16),
          i = ECPointFp.decodeFromHex(i.ecparams.curve, r.ecpubhex);return this.p2 = t.multiply(e), this.Reset(), i;
    }, EncryptBlock: function EncryptBlock(t) {
      this.sm3c3.BlockUpdate(t, 0, t.length);for (var e = this.KDF(t.length), i = 0; i < t.length; i++) {
        t[i] ^= e[i];
      }
    }, InitDecipher: function InitDecipher(t, e) {
      this.p2 = e.multiply(t), this.p2.getX().toBigInteger().toRadix(16), this.p2.getY().toBigInteger().toRadix(16), this.Reset();
    }, DecryptBlock: function DecryptBlock(t) {
      for (var e = this.KDF(t.length), i = 0, r = "", i = 0; i < e.length; i++) {
        r += e[i].toString(16);
      }for (i = 0; i < t.length; i++) {
        t[i] ^= e[i];
      }this.sm3c3.BlockUpdate(t, 0, t.length);
    }, Dofinal: function Dofinal(t) {
      for (var e = this.p2.getY().toBigInteger().toRadix(16); 64 > e.length;) {
        e = "0" + e;
      }e = this.GetWords(e), this.sm3c3.BlockUpdate(e, 0, e.length), this.sm3c3.DoFinal(t, 0), this.Reset();
    }, Encrypt: function Encrypt(t, e) {
      var i = Array(e.length);Array.Copy(e, 0, i, 0, e.length);var r = this.InitEncipher(t);this.EncryptBlock(i);var n = Array(32);this.Dofinal(n);for (var o = r.getX().toBigInteger().toRadix(16), r = r.getY().toBigInteger().toRadix(16); 64 > o.length;) {
        o = "0" + o;
      }for (; 64 > r.length;) {
        r = "0" + r;
      }return o += r, i = this.GetHex(i).toString(), 0 != i.length % 2 && (i = "0" + i), n = this.GetHex(n).toString(), r = o + i + n, this.cipherMode == SM2CipherMode.C1C3C2 && (r = o + n + i), r;
    }, GetWords: function GetWords(t) {
      for (var e = [], i = t.length, r = 0; r < i; r += 2) {
        e[e.length] = parseInt(t.substr(r, 2), 16);
      }return e;
    }, GetHex: function GetHex(t) {
      for (var e = [], i = 0, r = 0; r < 2 * t.length; r += 2) {
        e[r >>> 3] |= parseInt(t[i]) << 24 - r % 8 * 4, i++;
      }return new CryptoJS.lib.WordArray.init(e, t.length);
    }, Decrypt: function Decrypt(t, e) {
      var i = e.substr(0, 64),
          r = e.substr(0 + i.length, 64),
          n = e.substr(i.length + r.length, e.length - i.length - r.length - 64),
          o = e.substr(e.length - 64);return this.cipherMode == SM2CipherMode.C1C3C2 && (o = e.substr(i.length + r.length, 64), n = e.substr(i.length + r.length + 64)), n = this.GetWords(n), i = this.CreatePoint(i, r), this.InitDecipher(t, i), this.DecryptBlock(n), i = Array(32), this.Dofinal(i), this.GetHex(i).toString() == o ? (o = this.GetHex(n), CryptoJS.enc.Utf8.stringify(o)) : "";
    }, CreatePoint: function CreatePoint(t, e) {
      var i = new KJUR.crypto.ECDSA({ curve: "sm2" });return ECPointFp.decodeFromHex(i.ecparams.curve, "04" + t + e);
    } };var SM2Key = function SM2Key(t) {
    this.setKey(t);
  };SM2Key.prototype.setKey = SM2SetKey, SM2Key.prototype.encrypt = SM2Encrypt;var SM2 = { SM2CipherMode: SM2CipherMode, SM2Cipher: SM2Cipher, CryptoJS: CryptoJS },
      commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
      core = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r() : i.CryptoJS = r();
    }(commonjsGlobal, function () {
      var t = t || function (t, e) {
        var i = _Object$create || function () {
          function t() {}return function (e) {
            var i;return t.prototype = e, i = new t(), t.prototype = null, i;
          };
        }(),
            r = {},
            n = r.lib = {},
            o = n.Base = function () {
          return { extend: function extend(t) {
              var e = i(this);return t && e.mixIn(t), e.hasOwnProperty("init") && this.init !== e.init || (e.init = function () {
                e.$super.init.apply(this, arguments);
              }), e.init.prototype = e, e.$super = this, e;
            }, create: function create() {
              var t = this.extend();return t.init.apply(t, arguments), t;
            }, init: function init() {}, mixIn: function mixIn(t) {
              var e = this;for (var i in t) {
                t.hasOwnProperty(i) && (e[i] = t[i]);
              }t.hasOwnProperty("toString") && (this.toString = t.toString);
            }, clone: function clone() {
              return this.init.prototype.extend(this);
            } };
        }(),
            s = n.WordArray = o.extend({ init: function init(t, i) {
            t = this.words = t || [], i != e ? this.sigBytes = i : this.sigBytes = 4 * t.length;
          }, toString: function toString(t) {
            return (t || c).stringify(this);
          }, concat: function concat(t) {
            var e = this.words,
                i = t.words,
                r = this.sigBytes,
                n = t.sigBytes;if (this.clamp(), r % 4) for (var o = 0; o < n; o++) {
              var s = i[o >>> 2] >>> 24 - o % 4 * 8 & 255;e[r + o >>> 2] |= s << 24 - (r + o) % 4 * 8;
            } else for (var o = 0; o < n; o += 4) {
              e[r + o >>> 2] = i[o >>> 2];
            }return this.sigBytes += n, this;
          }, clamp: function clamp() {
            var e = this.words,
                i = this.sigBytes;e[i >>> 2] &= 4294967295 << 32 - i % 4 * 8, e.length = t.ceil(i / 4);
          }, clone: function clone() {
            var t = o.clone.call(this);return t.words = this.words.slice(0), t;
          }, random: function random(e) {
            for (var i, r = [], n = function n(e) {
              var e = e,
                  i = 987654321,
                  r = 4294967295;return function () {
                i = 36969 * (65535 & i) + (i >> 16) & r, e = 18e3 * (65535 & e) + (e >> 16) & r;var n = (i << 16) + e & r;return n /= 4294967296, n += .5, n * (t.random() > .5 ? 1 : -1);
              };
            }, o = 0; o < e; o += 4) {
              var a = n(4294967296 * (i || t.random()));i = 987654071 * a(), r.push(4294967296 * a() | 0);
            }return new s.init(r, e);
          } }),
            a = r.enc = {},
            c = a.Hex = { stringify: function stringify(t) {
            for (var e = t.words, i = t.sigBytes, r = [], n = 0; n < i; n++) {
              var o = e[n >>> 2] >>> 24 - n % 4 * 8 & 255;r.push((o >>> 4).toString(16)), r.push((15 & o).toString(16));
            }return r.join("");
          }, parse: function parse(t) {
            for (var e = t.length, i = [], r = 0; r < e; r += 2) {
              i[r >>> 3] |= parseInt(t.substr(r, 2), 16) << 24 - r % 8 * 4;
            }return new s.init(i, e / 2);
          } },
            h = a.Latin1 = { stringify: function stringify(t) {
            for (var e = t.words, i = t.sigBytes, r = [], n = 0; n < i; n++) {
              var o = e[n >>> 2] >>> 24 - n % 4 * 8 & 255;r.push(String.fromCharCode(o));
            }return r.join("");
          }, parse: function parse(t) {
            for (var e = t.length, i = [], r = 0; r < e; r++) {
              i[r >>> 2] |= (255 & t.charCodeAt(r)) << 24 - r % 4 * 8;
            }return new s.init(i, e);
          } },
            p = a.Utf8 = { stringify: function stringify(t) {
            try {
              return decodeURIComponent(escape(h.stringify(t)));
            } catch (t) {
              throw new Error("Malformed UTF-8 data");
            }
          }, parse: function parse(t) {
            return h.parse(unescape(encodeURIComponent(t)));
          } },
            u = n.BufferedBlockAlgorithm = o.extend({ reset: function reset() {
            this._data = new s.init(), this._nDataBytes = 0;
          }, _append: function _append(t) {
            "string" == typeof t && (t = p.parse(t)), this._data.concat(t), this._nDataBytes += t.sigBytes;
          }, _process: function _process(e) {
            var i = this,
                r = this._data,
                n = r.words,
                o = r.sigBytes,
                a = this.blockSize,
                c = 4 * a,
                h = o / c;h = e ? t.ceil(h) : t.max((0 | h) - this._minBufferSize, 0);var p = h * a,
                u = t.min(4 * p, o);if (p) {
              for (var l = 0; l < p; l += a) {
                i._doProcessBlock(n, l);
              }var f = n.splice(0, p);r.sigBytes -= u;
            }return new s.init(f, u);
          }, clone: function clone() {
            var t = o.clone.call(this);return t._data = this._data.clone(), t;
          }, _minBufferSize: 0 }),
            l = (n.Hasher = u.extend({ cfg: o.extend(), init: function init(t) {
            this.cfg = this.cfg.extend(t), this.reset();
          }, reset: function reset() {
            u.reset.call(this), this._doReset();
          }, update: function update(t) {
            return this._append(t), this._process(), this;
          }, finalize: function finalize(t) {
            t && this._append(t);var e = this._doFinalize();return e;
          }, blockSize: 16, _createHelper: function _createHelper(t) {
            return function (e, i) {
              return new t.init(i).finalize(e);
            };
          }, _createHmacHelper: function _createHmacHelper(t) {
            return function (e, i) {
              return new l.HMAC.init(t, i).finalize(e);
            };
          } }), r.algo = {});return r;
      }(Math);return t;
    });
  }),
      x64Core = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function (e) {
        var i = t,
            r = i.lib,
            n = r.Base,
            o = r.WordArray,
            s = i.x64 = {};s.Word = n.extend({ init: function init(t, e) {
            this.high = t, this.low = e;
          } }), s.WordArray = n.extend({ init: function init(t, i) {
            t = this.words = t || [], i != e ? this.sigBytes = i : this.sigBytes = 8 * t.length;
          }, toX32: function toX32() {
            for (var t = this.words, e = t.length, i = [], r = 0; r < e; r++) {
              var n = t[r];i.push(n.high), i.push(n.low);
            }return o.create(i, this.sigBytes);
          }, clone: function clone() {
            for (var t = n.clone.call(this), e = t.words = this.words.slice(0), i = e.length, r = 0; r < i; r++) {
              e[r] = e[r].clone();
            }return t;
          } });
      }(), t;
    });
  }),
      libTypedarrays = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        if ("function" == typeof ArrayBuffer) {
          var e = t,
              i = e.lib,
              r = i.WordArray,
              n = r.init,
              o = r.init = function (t) {
            if (t instanceof ArrayBuffer && (t = new Uint8Array(t)), (t instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array) && (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength)), t instanceof Uint8Array) {
              for (var e = t.byteLength, i = [], r = 0; r < e; r++) {
                i[r >>> 2] |= t[r] << 24 - r % 4 * 8;
              }n.call(this, i, e);
            } else n.apply(this, arguments);
          };o.prototype = r;
        }
      }(), t.lib.WordArray;
    });
  }),
      encUtf16 = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e(t) {
          return t << 8 & 4278255360 | t >>> 8 & 16711935;
        }var i = t,
            r = i.lib,
            n = r.WordArray,
            o = i.enc;o.Utf16 = o.Utf16BE = { stringify: function stringify(t) {
            for (var e = t.words, i = t.sigBytes, r = [], n = 0; n < i; n += 2) {
              var o = e[n >>> 2] >>> 16 - n % 4 * 8 & 65535;r.push(String.fromCharCode(o));
            }return r.join("");
          }, parse: function parse(t) {
            for (var e = t.length, i = [], r = 0; r < e; r++) {
              i[r >>> 1] |= t.charCodeAt(r) << 16 - r % 2 * 16;
            }return n.create(i, 2 * e);
          } };o.Utf16LE = { stringify: function stringify(t) {
            for (var i = t.words, r = t.sigBytes, n = [], o = 0; o < r; o += 2) {
              var s = e(i[o >>> 2] >>> 16 - o % 4 * 8 & 65535);n.push(String.fromCharCode(s));
            }return n.join("");
          }, parse: function parse(t) {
            for (var i = t.length, r = [], o = 0; o < i; o++) {
              r[o >>> 1] |= e(t.charCodeAt(o) << 16 - o % 2 * 16);
            }return n.create(r, 2 * i);
          } };
      }(), t.enc.Utf16;
    });
  }),
      encBase64 = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e(t, e, i) {
          for (var r = [], o = 0, s = 0; s < e; s++) {
            if (s % 4) {
              var a = i[t.charCodeAt(s - 1)] << s % 4 * 2,
                  c = i[t.charCodeAt(s)] >>> 6 - s % 4 * 2;r[o >>> 2] |= (a | c) << 24 - o % 4 * 8, o++;
            }
          }return n.create(r, o);
        }var i = t,
            r = i.lib,
            n = r.WordArray,
            o = i.enc;o.Base64 = { stringify: function stringify(t) {
            var e = t.words,
                i = t.sigBytes,
                r = this._map;t.clamp();for (var n = [], o = 0; o < i; o += 3) {
              for (var s = e[o >>> 2] >>> 24 - o % 4 * 8 & 255, a = e[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255, c = e[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, h = s << 16 | a << 8 | c, p = 0; p < 4 && o + .75 * p < i; p++) {
                n.push(r.charAt(h >>> 6 * (3 - p) & 63));
              }
            }var u = r.charAt(64);if (u) for (; n.length % 4;) {
              n.push(u);
            }return n.join("");
          }, parse: function parse(t) {
            var i = t.length,
                r = this._map,
                n = this._reverseMap;if (!n) {
              n = this._reverseMap = [];for (var o = 0; o < r.length; o++) {
                n[r.charCodeAt(o)] = o;
              }
            }var s = r.charAt(64);if (s) {
              var a = t.indexOf(s);a !== -1 && (i = a);
            }return e(t, i, n);
          }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" };
      }(), t.enc.Base64;
    });
  }),
      md5 = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function (e) {
        function i(t, e, i, r, n, o, s) {
          var a = t + (e & i | ~e & r) + n + s;return (a << o | a >>> 32 - o) + e;
        }function r(t, e, i, r, n, o, s) {
          var a = t + (e & r | i & ~r) + n + s;return (a << o | a >>> 32 - o) + e;
        }function n(t, e, i, r, n, o, s) {
          var a = t + (e ^ i ^ r) + n + s;return (a << o | a >>> 32 - o) + e;
        }function o(t, e, i, r, n, o, s) {
          var a = t + (i ^ (e | ~r)) + n + s;return (a << o | a >>> 32 - o) + e;
        }var s = t,
            a = s.lib,
            c = a.WordArray,
            h = a.Hasher,
            p = s.algo,
            u = [];!function () {
          for (var t = 0; t < 64; t++) {
            u[t] = 4294967296 * e.abs(e.sin(t + 1)) | 0;
          }
        }();var l = p.MD5 = h.extend({ _doReset: function _doReset() {
            this._hash = new c.init([1732584193, 4023233417, 2562383102, 271733878]);
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            for (var s = 0; s < 16; s++) {
              var a = e + s,
                  c = t[a];t[a] = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8);
            }var h = this._hash.words,
                p = t[e + 0],
                l = t[e + 1],
                f = t[e + 2],
                d = t[e + 3],
                g = t[e + 4],
                F = t[e + 5],
                y = t[e + 6],
                v = t[e + 7],
                m = t[e + 8],
                B = t[e + 9],
                b = t[e + 10],
                S = t[e + 11],
                _ = t[e + 12],
                C = t[e + 13],
                E = t[e + 14],
                w = t[e + 15],
                A = h[0],
                I = h[1],
                x = h[2],
                D = h[3];A = i(A, I, x, D, p, 7, u[0]), D = i(D, A, I, x, l, 12, u[1]), x = i(x, D, A, I, f, 17, u[2]), I = i(I, x, D, A, d, 22, u[3]), A = i(A, I, x, D, g, 7, u[4]), D = i(D, A, I, x, F, 12, u[5]), x = i(x, D, A, I, y, 17, u[6]), I = i(I, x, D, A, v, 22, u[7]), A = i(A, I, x, D, m, 7, u[8]), D = i(D, A, I, x, B, 12, u[9]), x = i(x, D, A, I, b, 17, u[10]), I = i(I, x, D, A, S, 22, u[11]), A = i(A, I, x, D, _, 7, u[12]), D = i(D, A, I, x, C, 12, u[13]), x = i(x, D, A, I, E, 17, u[14]), I = i(I, x, D, A, w, 22, u[15]), A = r(A, I, x, D, l, 5, u[16]), D = r(D, A, I, x, y, 9, u[17]), x = r(x, D, A, I, S, 14, u[18]), I = r(I, x, D, A, p, 20, u[19]), A = r(A, I, x, D, F, 5, u[20]), D = r(D, A, I, x, b, 9, u[21]), x = r(x, D, A, I, w, 14, u[22]), I = r(I, x, D, A, g, 20, u[23]), A = r(A, I, x, D, B, 5, u[24]), D = r(D, A, I, x, E, 9, u[25]), x = r(x, D, A, I, d, 14, u[26]), I = r(I, x, D, A, m, 20, u[27]), A = r(A, I, x, D, C, 5, u[28]), D = r(D, A, I, x, f, 9, u[29]), x = r(x, D, A, I, v, 14, u[30]), I = r(I, x, D, A, _, 20, u[31]), A = n(A, I, x, D, F, 4, u[32]), D = n(D, A, I, x, m, 11, u[33]), x = n(x, D, A, I, S, 16, u[34]), I = n(I, x, D, A, E, 23, u[35]), A = n(A, I, x, D, l, 4, u[36]), D = n(D, A, I, x, g, 11, u[37]), x = n(x, D, A, I, v, 16, u[38]), I = n(I, x, D, A, b, 23, u[39]), A = n(A, I, x, D, C, 4, u[40]), D = n(D, A, I, x, p, 11, u[41]), x = n(x, D, A, I, d, 16, u[42]), I = n(I, x, D, A, y, 23, u[43]), A = n(A, I, x, D, B, 4, u[44]), D = n(D, A, I, x, _, 11, u[45]), x = n(x, D, A, I, w, 16, u[46]), I = n(I, x, D, A, f, 23, u[47]), A = o(A, I, x, D, p, 6, u[48]), D = o(D, A, I, x, v, 10, u[49]), x = o(x, D, A, I, E, 15, u[50]), I = o(I, x, D, A, F, 21, u[51]), A = o(A, I, x, D, _, 6, u[52]), D = o(D, A, I, x, d, 10, u[53]), x = o(x, D, A, I, b, 15, u[54]), I = o(I, x, D, A, l, 21, u[55]), A = o(A, I, x, D, m, 6, u[56]), D = o(D, A, I, x, w, 10, u[57]), x = o(x, D, A, I, y, 15, u[58]), I = o(I, x, D, A, C, 21, u[59]), A = o(A, I, x, D, g, 6, u[60]), D = o(D, A, I, x, S, 10, u[61]), x = o(x, D, A, I, f, 15, u[62]), I = o(I, x, D, A, B, 21, u[63]), h[0] = h[0] + A | 0, h[1] = h[1] + I | 0, h[2] = h[2] + x | 0, h[3] = h[3] + D | 0;
          }, _doFinalize: function _doFinalize() {
            var t = this._data,
                i = t.words,
                r = 8 * this._nDataBytes,
                n = 8 * t.sigBytes;i[n >>> 5] |= 128 << 24 - n % 32;var o = e.floor(r / 4294967296),
                s = r;i[(n + 64 >>> 9 << 4) + 15] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), i[(n + 64 >>> 9 << 4) + 14] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), t.sigBytes = 4 * (i.length + 1), this._process();for (var a = this._hash, c = a.words, h = 0; h < 4; h++) {
              var p = c[h];c[h] = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8);
            }return a;
          }, clone: function clone() {
            var t = h.clone.call(this);return t._hash = this._hash.clone(), t;
          } });s.MD5 = h._createHelper(l), s.HmacMD5 = h._createHmacHelper(l);
      }(Math), t.MD5;
    });
  }),
      sha1 = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        var e = t,
            i = e.lib,
            r = i.WordArray,
            n = i.Hasher,
            o = e.algo,
            s = [],
            a = o.SHA1 = n.extend({ _doReset: function _doReset() {
            this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            for (var i = this._hash.words, r = i[0], n = i[1], o = i[2], a = i[3], c = i[4], h = 0; h < 80; h++) {
              if (h < 16) s[h] = 0 | t[e + h];else {
                var p = s[h - 3] ^ s[h - 8] ^ s[h - 14] ^ s[h - 16];s[h] = p << 1 | p >>> 31;
              }var u = (r << 5 | r >>> 27) + c + s[h];u += h < 20 ? (n & o | ~n & a) + 1518500249 : h < 40 ? (n ^ o ^ a) + 1859775393 : h < 60 ? (n & o | n & a | o & a) - 1894007588 : (n ^ o ^ a) - 899497514, c = a, a = o, o = n << 30 | n >>> 2, n = r, r = u;
            }i[0] = i[0] + r | 0, i[1] = i[1] + n | 0, i[2] = i[2] + o | 0, i[3] = i[3] + a | 0, i[4] = i[4] + c | 0;
          }, _doFinalize: function _doFinalize() {
            var t = this._data,
                e = t.words,
                i = 8 * this._nDataBytes,
                r = 8 * t.sigBytes;return e[r >>> 5] |= 128 << 24 - r % 32, e[(r + 64 >>> 9 << 4) + 14] = Math.floor(i / 4294967296), e[(r + 64 >>> 9 << 4) + 15] = i, t.sigBytes = 4 * e.length, this._process(), this._hash;
          }, clone: function clone() {
            var t = n.clone.call(this);return t._hash = this._hash.clone(), t;
          } });e.SHA1 = n._createHelper(a), e.HmacSHA1 = n._createHmacHelper(a);
      }(), t.SHA1;
    });
  }),
      sha256 = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function (e) {
        var i = t,
            r = i.lib,
            n = r.WordArray,
            o = r.Hasher,
            s = i.algo,
            a = [],
            c = [];!function () {
          function t(t) {
            for (var i = e.sqrt(t), r = 2; r <= i; r++) {
              if (!(t % r)) return !1;
            }return !0;
          }function i(t) {
            return 4294967296 * (t - (0 | t)) | 0;
          }for (var r = 2, n = 0; n < 64;) {
            t(r) && (n < 8 && (a[n] = i(e.pow(r, .5))), c[n] = i(e.pow(r, 1 / 3)), n++), r++;
          }
        }();var h = [],
            p = s.SHA256 = o.extend({ _doReset: function _doReset() {
            this._hash = new n.init(a.slice(0));
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            for (var i = this._hash.words, r = i[0], n = i[1], o = i[2], s = i[3], a = i[4], p = i[5], u = i[6], l = i[7], f = 0; f < 64; f++) {
              if (f < 16) h[f] = 0 | t[e + f];else {
                var d = h[f - 15],
                    g = (d << 25 | d >>> 7) ^ (d << 14 | d >>> 18) ^ d >>> 3,
                    F = h[f - 2],
                    y = (F << 15 | F >>> 17) ^ (F << 13 | F >>> 19) ^ F >>> 10;h[f] = g + h[f - 7] + y + h[f - 16];
              }var v = a & p ^ ~a & u,
                  m = r & n ^ r & o ^ n & o,
                  B = (r << 30 | r >>> 2) ^ (r << 19 | r >>> 13) ^ (r << 10 | r >>> 22),
                  b = (a << 26 | a >>> 6) ^ (a << 21 | a >>> 11) ^ (a << 7 | a >>> 25),
                  S = l + b + v + c[f] + h[f],
                  _ = B + m;l = u, u = p, p = a, a = s + S | 0, s = o, o = n, n = r, r = S + _ | 0;
            }i[0] = i[0] + r | 0, i[1] = i[1] + n | 0, i[2] = i[2] + o | 0, i[3] = i[3] + s | 0, i[4] = i[4] + a | 0, i[5] = i[5] + p | 0, i[6] = i[6] + u | 0, i[7] = i[7] + l | 0;
          }, _doFinalize: function _doFinalize() {
            var t = this._data,
                i = t.words,
                r = 8 * this._nDataBytes,
                n = 8 * t.sigBytes;return i[n >>> 5] |= 128 << 24 - n % 32, i[(n + 64 >>> 9 << 4) + 14] = e.floor(r / 4294967296), i[(n + 64 >>> 9 << 4) + 15] = r, t.sigBytes = 4 * i.length, this._process(), this._hash;
          }, clone: function clone() {
            var t = o.clone.call(this);return t._hash = this._hash.clone(), t;
          } });i.SHA256 = o._createHelper(p), i.HmacSHA256 = o._createHmacHelper(p);
      }(Math), t.SHA256;
    });
  }),
      sha224 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, sha256) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        var e = t,
            i = e.lib,
            r = i.WordArray,
            n = e.algo,
            o = n.SHA256,
            s = n.SHA224 = o.extend({ _doReset: function _doReset() {
            this._hash = new r.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
          }, _doFinalize: function _doFinalize() {
            var t = o._doFinalize.call(this);return t.sigBytes -= 4, t;
          } });e.SHA224 = o._createHelper(s), e.HmacSHA224 = o._createHmacHelper(s);
      }(), t.SHA224;
    });
  }),
      sha512 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, x64Core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e() {
          return s.create.apply(s, arguments);
        }var i = t,
            r = i.lib,
            n = r.Hasher,
            o = i.x64,
            s = o.Word,
            a = o.WordArray,
            c = i.algo,
            h = [e(1116352408, 3609767458), e(1899447441, 602891725), e(3049323471, 3964484399), e(3921009573, 2173295548), e(961987163, 4081628472), e(1508970993, 3053834265), e(2453635748, 2937671579), e(2870763221, 3664609560), e(3624381080, 2734883394), e(310598401, 1164996542), e(607225278, 1323610764), e(1426881987, 3590304994), e(1925078388, 4068182383), e(2162078206, 991336113), e(2614888103, 633803317), e(3248222580, 3479774868), e(3835390401, 2666613458), e(4022224774, 944711139), e(264347078, 2341262773), e(604807628, 2007800933), e(770255983, 1495990901), e(1249150122, 1856431235), e(1555081692, 3175218132), e(1996064986, 2198950837), e(2554220882, 3999719339), e(2821834349, 766784016), e(2952996808, 2566594879), e(3210313671, 3203337956), e(3336571891, 1034457026), e(3584528711, 2466948901), e(113926993, 3758326383), e(338241895, 168717936), e(666307205, 1188179964), e(773529912, 1546045734), e(1294757372, 1522805485), e(1396182291, 2643833823), e(1695183700, 2343527390), e(1986661051, 1014477480), e(2177026350, 1206759142), e(2456956037, 344077627), e(2730485921, 1290863460), e(2820302411, 3158454273), e(3259730800, 3505952657), e(3345764771, 106217008), e(3516065817, 3606008344), e(3600352804, 1432725776), e(4094571909, 1467031594), e(275423344, 851169720), e(430227734, 3100823752), e(506948616, 1363258195), e(659060556, 3750685593), e(883997877, 3785050280), e(958139571, 3318307427), e(1322822218, 3812723403), e(1537002063, 2003034995), e(1747873779, 3602036899), e(1955562222, 1575990012), e(2024104815, 1125592928), e(2227730452, 2716904306), e(2361852424, 442776044), e(2428436474, 593698344), e(2756734187, 3733110249), e(3204031479, 2999351573), e(3329325298, 3815920427), e(3391569614, 3928383900), e(3515267271, 566280711), e(3940187606, 3454069534), e(4118630271, 4000239992), e(116418474, 1914138554), e(174292421, 2731055270), e(289380356, 3203993006), e(460393269, 320620315), e(685471733, 587496836), e(852142971, 1086792851), e(1017036298, 365543100), e(1126000580, 2618297676), e(1288033470, 3409855158), e(1501505948, 4234509866), e(1607167915, 987167468), e(1816402316, 1246189591)],
            p = [];!function () {
          for (var t = 0; t < 80; t++) {
            p[t] = e();
          }
        }();var u = c.SHA512 = n.extend({ _doReset: function _doReset() {
            this._hash = new a.init([new s.init(1779033703, 4089235720), new s.init(3144134277, 2227873595), new s.init(1013904242, 4271175723), new s.init(2773480762, 1595750129), new s.init(1359893119, 2917565137), new s.init(2600822924, 725511199), new s.init(528734635, 4215389547), new s.init(1541459225, 327033209)]);
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            for (var i = this._hash.words, r = i[0], n = i[1], o = i[2], s = i[3], a = i[4], c = i[5], u = i[6], l = i[7], f = r.high, d = r.low, g = n.high, F = n.low, y = o.high, v = o.low, m = s.high, B = s.low, b = a.high, S = a.low, _ = c.high, C = c.low, E = u.high, w = u.low, A = l.high, I = l.low, x = f, D = d, $ = g, T = F, R = y, k = v, M = m, H = B, P = b, j = S, N = _, O = C, U = E, K = w, z = A, J = I, q = 0; q < 80; q++) {
              var G = p[q];if (q < 16) var L = G.high = 0 | t[e + 2 * q],
                  V = G.low = 0 | t[e + 2 * q + 1];else {
                var X = p[q - 15],
                    W = X.high,
                    Z = X.low,
                    Y = (W >>> 1 | Z << 31) ^ (W >>> 8 | Z << 24) ^ W >>> 7,
                    Q = (Z >>> 1 | W << 31) ^ (Z >>> 8 | W << 24) ^ (Z >>> 7 | W << 25),
                    tt = p[q - 2],
                    et = tt.high,
                    it = tt.low,
                    rt = (et >>> 19 | it << 13) ^ (et << 3 | it >>> 29) ^ et >>> 6,
                    nt = (it >>> 19 | et << 13) ^ (it << 3 | et >>> 29) ^ (it >>> 6 | et << 26),
                    ot = p[q - 7],
                    st = ot.high,
                    at = ot.low,
                    ct = p[q - 16],
                    ht = ct.high,
                    pt = ct.low,
                    V = Q + at,
                    L = Y + st + (V >>> 0 < Q >>> 0 ? 1 : 0),
                    V = V + nt,
                    L = L + rt + (V >>> 0 < nt >>> 0 ? 1 : 0),
                    V = V + pt,
                    L = L + ht + (V >>> 0 < pt >>> 0 ? 1 : 0);G.high = L, G.low = V;
              }var ut = P & N ^ ~P & U,
                  lt = j & O ^ ~j & K,
                  ft = x & $ ^ x & R ^ $ & R,
                  dt = D & T ^ D & k ^ T & k,
                  gt = (x >>> 28 | D << 4) ^ (x << 30 | D >>> 2) ^ (x << 25 | D >>> 7),
                  Ft = (D >>> 28 | x << 4) ^ (D << 30 | x >>> 2) ^ (D << 25 | x >>> 7),
                  yt = (P >>> 14 | j << 18) ^ (P >>> 18 | j << 14) ^ (P << 23 | j >>> 9),
                  vt = (j >>> 14 | P << 18) ^ (j >>> 18 | P << 14) ^ (j << 23 | P >>> 9),
                  mt = h[q],
                  Bt = mt.high,
                  bt = mt.low,
                  St = J + vt,
                  _t = z + yt + (St >>> 0 < J >>> 0 ? 1 : 0),
                  St = St + lt,
                  _t = _t + ut + (St >>> 0 < lt >>> 0 ? 1 : 0),
                  St = St + bt,
                  _t = _t + Bt + (St >>> 0 < bt >>> 0 ? 1 : 0),
                  St = St + V,
                  _t = _t + L + (St >>> 0 < V >>> 0 ? 1 : 0),
                  Ct = Ft + dt,
                  Et = gt + ft + (Ct >>> 0 < Ft >>> 0 ? 1 : 0);z = U, J = K, U = N, K = O, N = P, O = j, j = H + St | 0, P = M + _t + (j >>> 0 < H >>> 0 ? 1 : 0) | 0, M = R, H = k, R = $, k = T, $ = x, T = D, D = St + Ct | 0, x = _t + Et + (D >>> 0 < St >>> 0 ? 1 : 0) | 0;
            }d = r.low = d + D, r.high = f + x + (d >>> 0 < D >>> 0 ? 1 : 0), F = n.low = F + T, n.high = g + $ + (F >>> 0 < T >>> 0 ? 1 : 0), v = o.low = v + k, o.high = y + R + (v >>> 0 < k >>> 0 ? 1 : 0), B = s.low = B + H, s.high = m + M + (B >>> 0 < H >>> 0 ? 1 : 0), S = a.low = S + j, a.high = b + P + (S >>> 0 < j >>> 0 ? 1 : 0), C = c.low = C + O, c.high = _ + N + (C >>> 0 < O >>> 0 ? 1 : 0), w = u.low = w + K, u.high = E + U + (w >>> 0 < K >>> 0 ? 1 : 0), I = l.low = I + J, l.high = A + z + (I >>> 0 < J >>> 0 ? 1 : 0);
          }, _doFinalize: function _doFinalize() {
            var t = this._data,
                e = t.words,
                i = 8 * this._nDataBytes,
                r = 8 * t.sigBytes;e[r >>> 5] |= 128 << 24 - r % 32, e[(r + 128 >>> 10 << 5) + 30] = Math.floor(i / 4294967296), e[(r + 128 >>> 10 << 5) + 31] = i, t.sigBytes = 4 * e.length, this._process();var n = this._hash.toX32();return n;
          }, clone: function clone() {
            var t = n.clone.call(this);return t._hash = this._hash.clone(), t;
          }, blockSize: 32 });i.SHA512 = n._createHelper(u), i.HmacSHA512 = n._createHmacHelper(u);
      }(), t.SHA512;
    });
  }),
      sha384 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, x64Core, sha512) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        var e = t,
            i = e.x64,
            r = i.Word,
            n = i.WordArray,
            o = e.algo,
            s = o.SHA512,
            a = o.SHA384 = s.extend({ _doReset: function _doReset() {
            this._hash = new n.init([new r.init(3418070365, 3238371032), new r.init(1654270250, 914150663), new r.init(2438529370, 812702999), new r.init(355462360, 4144912697), new r.init(1731405415, 4290775857), new r.init(2394180231, 1750603025), new r.init(3675008525, 1694076839), new r.init(1203062813, 3204075428)]);
          }, _doFinalize: function _doFinalize() {
            var t = s._doFinalize.call(this);return t.sigBytes -= 16, t;
          } });e.SHA384 = s._createHelper(a), e.HmacSHA384 = s._createHmacHelper(a);
      }(), t.SHA384;
    });
  }),
      sha3 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, x64Core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function (e) {
        var i = t,
            r = i.lib,
            n = r.WordArray,
            o = r.Hasher,
            s = i.x64,
            a = s.Word,
            c = i.algo,
            h = [],
            p = [],
            u = [];!function () {
          for (var t = 1, e = 0, i = 0; i < 24; i++) {
            h[t + 5 * e] = (i + 1) * (i + 2) / 2 % 64;var r = e % 5,
                n = (2 * t + 3 * e) % 5;t = r, e = n;
          }for (var t = 0; t < 5; t++) {
            for (var e = 0; e < 5; e++) {
              p[t + 5 * e] = e + (2 * t + 3 * e) % 5 * 5;
            }
          }for (var o = 1, s = 0; s < 24; s++) {
            for (var c = 0, l = 0, f = 0; f < 7; f++) {
              if (1 & o) {
                var d = (1 << f) - 1;d < 32 ? l ^= 1 << d : c ^= 1 << d - 32;
              }128 & o ? o = o << 1 ^ 113 : o <<= 1;
            }u[s] = a.create(c, l);
          }
        }();var l = [];!function () {
          for (var t = 0; t < 25; t++) {
            l[t] = a.create();
          }
        }();var f = c.SHA3 = o.extend({ cfg: o.cfg.extend({ outputLength: 512 }), _doReset: function _doReset() {
            for (var t = this._state = [], e = 0; e < 25; e++) {
              t[e] = new a.init();
            }this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            for (var i = this._state, r = this.blockSize / 2, n = 0; n < r; n++) {
              var o = t[e + 2 * n],
                  s = t[e + 2 * n + 1];o = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), s = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8);var a = i[n];a.high ^= s, a.low ^= o;
            }for (var c = 0; c < 24; c++) {
              for (var f = 0; f < 5; f++) {
                for (var d = 0, g = 0, F = 0; F < 5; F++) {
                  var a = i[f + 5 * F];d ^= a.high, g ^= a.low;
                }var y = l[f];y.high = d, y.low = g;
              }for (var f = 0; f < 5; f++) {
                for (var v = l[(f + 4) % 5], m = l[(f + 1) % 5], B = m.high, b = m.low, d = v.high ^ (B << 1 | b >>> 31), g = v.low ^ (b << 1 | B >>> 31), F = 0; F < 5; F++) {
                  var a = i[f + 5 * F];a.high ^= d, a.low ^= g;
                }
              }for (var S = 1; S < 25; S++) {
                var a = i[S],
                    _ = a.high,
                    C = a.low,
                    E = h[S];if (E < 32) var d = _ << E | C >>> 32 - E,
                    g = C << E | _ >>> 32 - E;else var d = C << E - 32 | _ >>> 64 - E,
                    g = _ << E - 32 | C >>> 64 - E;var w = l[p[S]];w.high = d, w.low = g;
              }var A = l[0],
                  I = i[0];A.high = I.high, A.low = I.low;for (var f = 0; f < 5; f++) {
                for (var F = 0; F < 5; F++) {
                  var S = f + 5 * F,
                      a = i[S],
                      x = l[S],
                      D = l[(f + 1) % 5 + 5 * F],
                      $ = l[(f + 2) % 5 + 5 * F];a.high = x.high ^ ~D.high & $.high, a.low = x.low ^ ~D.low & $.low;
                }
              }var a = i[0],
                  T = u[c];a.high ^= T.high, a.low ^= T.low;
            }
          }, _doFinalize: function _doFinalize() {
            var t = this._data,
                i = t.words,
                r = (8 * this._nDataBytes, 8 * t.sigBytes),
                o = 32 * this.blockSize;i[r >>> 5] |= 1 << 24 - r % 32, i[(e.ceil((r + 1) / o) * o >>> 5) - 1] |= 128, t.sigBytes = 4 * i.length, this._process();for (var s = this._state, a = this.cfg.outputLength / 8, c = a / 8, h = [], p = 0; p < c; p++) {
              var u = s[p],
                  l = u.high,
                  f = u.low;l = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8), f = 16711935 & (f << 8 | f >>> 24) | 4278255360 & (f << 24 | f >>> 8), h.push(f), h.push(l);
            }return new n.init(h, a);
          }, clone: function clone() {
            for (var t = o.clone.call(this), e = t._state = this._state.slice(0), i = 0; i < 25; i++) {
              e[i] = e[i].clone();
            }return t;
          } });i.SHA3 = o._createHelper(f), i.HmacSHA3 = o._createHmacHelper(f);
      }(Math), t.SHA3;
    });
  }),
      ripemd160 = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function (e) {
        function i(t, e, i) {
          return t ^ e ^ i;
        }function r(t, e, i) {
          return t & e | ~t & i;
        }function n(t, e, i) {
          return (t | ~e) ^ i;
        }function o(t, e, i) {
          return t & i | e & ~i;
        }function s(t, e, i) {
          return t ^ (e | ~i);
        }function a(t, e) {
          return t << e | t >>> 32 - e;
        }var c = t,
            h = c.lib,
            p = h.WordArray,
            u = h.Hasher,
            l = c.algo,
            f = p.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),
            d = p.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),
            g = p.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),
            F = p.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),
            y = p.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
            v = p.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
            m = l.RIPEMD160 = u.extend({ _doReset: function _doReset() {
            this._hash = p.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            for (var c = 0; c < 16; c++) {
              var h = e + c,
                  p = t[h];t[h] = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8);
            }var u,
                l,
                m,
                B,
                b,
                S,
                _,
                C,
                E,
                w,
                A = this._hash.words,
                I = y.words,
                x = v.words,
                D = f.words,
                $ = d.words,
                T = g.words,
                R = F.words;S = u = A[0], _ = l = A[1], C = m = A[2], E = B = A[3], w = b = A[4];for (var k, c = 0; c < 80; c += 1) {
              k = u + t[e + D[c]] | 0, k += c < 16 ? i(l, m, B) + I[0] : c < 32 ? r(l, m, B) + I[1] : c < 48 ? n(l, m, B) + I[2] : c < 64 ? o(l, m, B) + I[3] : s(l, m, B) + I[4], k = 0 | k, k = a(k, T[c]), k = k + b | 0, u = b, b = B, B = a(m, 10), m = l, l = k, k = S + t[e + $[c]] | 0, k += c < 16 ? s(_, C, E) + x[0] : c < 32 ? o(_, C, E) + x[1] : c < 48 ? n(_, C, E) + x[2] : c < 64 ? r(_, C, E) + x[3] : i(_, C, E) + x[4], k = 0 | k, k = a(k, R[c]), k = k + w | 0, S = w, w = E, E = a(C, 10), C = _, _ = k;
            }k = A[1] + m + E | 0, A[1] = A[2] + B + w | 0, A[2] = A[3] + b + S | 0, A[3] = A[4] + u + _ | 0, A[4] = A[0] + l + C | 0, A[0] = k;
          }, _doFinalize: function _doFinalize() {
            var t = this._data,
                e = t.words,
                i = 8 * this._nDataBytes,
                r = 8 * t.sigBytes;e[r >>> 5] |= 128 << 24 - r % 32, e[(r + 64 >>> 9 << 4) + 14] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), t.sigBytes = 4 * (e.length + 1), this._process();for (var n = this._hash, o = n.words, s = 0; s < 5; s++) {
              var a = o[s];o[s] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);
            }return n;
          }, clone: function clone() {
            var t = u.clone.call(this);return t._hash = this._hash.clone(), t;
          } });c.RIPEMD160 = u._createHelper(m), c.HmacRIPEMD160 = u._createHmacHelper(m);
      }(Math), t.RIPEMD160;
    });
  }),
      hmac = createCommonjsModule(function (t, e) {
    !function (i, r) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      !function () {
        var e = t,
            i = e.lib,
            r = i.Base,
            n = e.enc,
            o = n.Utf8,
            s = e.algo;s.HMAC = r.extend({ init: function init(t, e) {
            t = this._hasher = new t.init(), "string" == typeof e && (e = o.parse(e));var i = t.blockSize,
                r = 4 * i;e.sigBytes > r && (e = t.finalize(e)), e.clamp();for (var n = this._oKey = e.clone(), s = this._iKey = e.clone(), a = n.words, c = s.words, h = 0; h < i; h++) {
              a[h] ^= 1549556828, c[h] ^= 909522486;
            }n.sigBytes = s.sigBytes = r, this.reset();
          }, reset: function reset() {
            var t = this._hasher;t.reset(), t.update(this._iKey);
          }, update: function update(t) {
            return this._hasher.update(t), this;
          }, finalize: function finalize(t) {
            var e = this._hasher,
                i = e.finalize(t);e.reset();var r = e.finalize(this._oKey.clone().concat(i));return r;
          } });
      }();
    });
  }),
      pbkdf2 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, sha1, hmac) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        var e = t,
            i = e.lib,
            r = i.Base,
            n = i.WordArray,
            o = e.algo,
            s = o.SHA1,
            a = o.HMAC,
            c = o.PBKDF2 = r.extend({ cfg: r.extend({ keySize: 4, hasher: s, iterations: 1 }), init: function init(t) {
            this.cfg = this.cfg.extend(t);
          }, compute: function compute(t, e) {
            for (var i = this.cfg, r = a.create(i.hasher, t), o = n.create(), s = n.create([1]), c = o.words, h = s.words, p = i.keySize, u = i.iterations; c.length < p;) {
              var l = r.update(e).finalize(s);r.reset();for (var f = l.words, d = f.length, g = l, F = 1; F < u; F++) {
                g = r.finalize(g), r.reset();for (var y = g.words, v = 0; v < d; v++) {
                  f[v] ^= y[v];
                }
              }o.concat(l), h[0]++;
            }return o.sigBytes = 4 * p, o;
          } });e.PBKDF2 = function (t, e, i) {
          return c.create(i).compute(t, e);
        };
      }(), t.PBKDF2;
    });
  }),
      evpkdf = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, sha1, hmac) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        var e = t,
            i = e.lib,
            r = i.Base,
            n = i.WordArray,
            o = e.algo,
            s = o.MD5,
            a = o.EvpKDF = r.extend({ cfg: r.extend({ keySize: 4, hasher: s, iterations: 1 }), init: function init(t) {
            this.cfg = this.cfg.extend(t);
          }, compute: function compute(t, e) {
            for (var i = this.cfg, r = i.hasher.create(), o = n.create(), s = o.words, a = i.keySize, c = i.iterations; s.length < a;) {
              h && r.update(h);var h = r.update(t).finalize(e);r.reset();for (var p = 1; p < c; p++) {
                h = r.finalize(h), r.reset();
              }o.concat(h);
            }return o.sigBytes = 4 * a, o;
          } });e.EvpKDF = function (t, e, i) {
          return a.create(i).compute(t, e);
        };
      }(), t.EvpKDF;
    });
  }),
      cipherCore = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, evpkdf) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      t.lib.Cipher || function (e) {
        var i = t,
            r = i.lib,
            n = r.Base,
            o = r.WordArray,
            s = r.BufferedBlockAlgorithm,
            a = i.enc,
            c = (a.Utf8, a.Base64),
            h = i.algo,
            p = h.EvpKDF,
            u = r.Cipher = s.extend({ cfg: n.extend(), createEncryptor: function createEncryptor(t, e) {
            return this.create(this._ENC_XFORM_MODE, t, e);
          }, createDecryptor: function createDecryptor(t, e) {
            return this.create(this._DEC_XFORM_MODE, t, e);
          }, init: function init(t, e, i) {
            this.cfg = this.cfg.extend(i), this._xformMode = t, this._key = e, this.reset();
          }, reset: function reset() {
            s.reset.call(this), this._doReset();
          }, process: function process(t) {
            return this._append(t), this._process();
          }, finalize: function finalize(t) {
            t && this._append(t);var e = this._doFinalize();return e;
          }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function () {
            function t(t) {
              return "string" == typeof t ? _ : B;
            }return function (e) {
              return { encrypt: function encrypt(i, r, n) {
                  return t(r).encrypt(e, i, r, n);
                }, decrypt: function decrypt(i, r, n) {
                  return t(r).decrypt(e, i, r, n);
                } };
            };
          }() }),
            l = (r.StreamCipher = u.extend({ _doFinalize: function _doFinalize() {
            var t = this._process(!0);return t;
          }, blockSize: 1 }), i.mode = {}),
            f = r.BlockCipherMode = n.extend({ createEncryptor: function createEncryptor(t, e) {
            return this.Encryptor.create(t, e);
          }, createDecryptor: function createDecryptor(t, e) {
            return this.Decryptor.create(t, e);
          }, init: function init(t, e) {
            this._cipher = t, this._iv = e;
          } }),
            d = l.CBC = function () {
          function t(t, i, r) {
            var n = this._iv;if (n) {
              var o = n;this._iv = e;
            } else var o = this._prevBlock;for (var s = 0; s < r; s++) {
              t[i + s] ^= o[s];
            }
          }var i = f.extend();return i.Encryptor = i.extend({ processBlock: function processBlock(e, i) {
              var r = this._cipher,
                  n = r.blockSize;t.call(this, e, i, n), r.encryptBlock(e, i), this._prevBlock = e.slice(i, i + n);
            } }), i.Decryptor = i.extend({ processBlock: function processBlock(e, i) {
              var r = this._cipher,
                  n = r.blockSize,
                  o = e.slice(i, i + n);r.decryptBlock(e, i), t.call(this, e, i, n), this._prevBlock = o;
            } }), i;
        }(),
            g = i.pad = {},
            F = g.Pkcs7 = { pad: function pad(t, e) {
            for (var i = 4 * e, r = i - t.sigBytes % i, n = r << 24 | r << 16 | r << 8 | r, s = [], a = 0; a < r; a += 4) {
              s.push(n);
            }var c = o.create(s, r);t.concat(c);
          }, unpad: function unpad(t) {
            var e = 255 & t.words[t.sigBytes - 1 >>> 2];t.sigBytes -= e;
          } },
            y = (r.BlockCipher = u.extend({ cfg: u.cfg.extend({ mode: d, padding: F }), reset: function reset() {
            u.reset.call(this);var t = this.cfg,
                e = t.iv,
                i = t.mode;if (this._xformMode == this._ENC_XFORM_MODE) var r = i.createEncryptor;else {
              var r = i.createDecryptor;this._minBufferSize = 1;
            }this._mode && this._mode.__creator == r ? this._mode.init(this, e && e.words) : (this._mode = r.call(i, this, e && e.words), this._mode.__creator = r);
          }, _doProcessBlock: function _doProcessBlock(t, e) {
            this._mode.processBlock(t, e);
          }, _doFinalize: function _doFinalize() {
            var t = this.cfg.padding;if (this._xformMode == this._ENC_XFORM_MODE) {
              t.pad(this._data, this.blockSize);var e = this._process(!0);
            } else {
              var e = this._process(!0);t.unpad(e);
            }return e;
          }, blockSize: 4 }), r.CipherParams = n.extend({ init: function init(t) {
            this.mixIn(t);
          }, toString: function toString(t) {
            return (t || this.formatter).stringify(this);
          } })),
            v = i.format = {},
            m = v.OpenSSL = { stringify: function stringify(t) {
            var e = t.ciphertext,
                i = t.salt;if (i) var r = o.create([1398893684, 1701076831]).concat(i).concat(e);else var r = e;return r.toString(c);
          }, parse: function parse(t) {
            var e = c.parse(t),
                i = e.words;if (1398893684 == i[0] && 1701076831 == i[1]) {
              var r = o.create(i.slice(2, 4));i.splice(0, 4), e.sigBytes -= 16;
            }return y.create({ ciphertext: e, salt: r });
          } },
            B = r.SerializableCipher = n.extend({ cfg: n.extend({ format: m }), encrypt: function encrypt(t, e, i, r) {
            r = this.cfg.extend(r);var n = t.createEncryptor(i, r),
                o = n.finalize(e),
                s = n.cfg;return y.create({ ciphertext: o, key: i, iv: s.iv, algorithm: t, mode: s.mode, padding: s.padding, blockSize: t.blockSize, formatter: r.format });
          }, decrypt: function decrypt(t, e, i, r) {
            r = this.cfg.extend(r), e = this._parse(e, r.format);var n = t.createDecryptor(i, r).finalize(e.ciphertext);return n;
          }, _parse: function _parse(t, e) {
            return "string" == typeof t ? e.parse(t, this) : t;
          } }),
            b = i.kdf = {},
            S = b.OpenSSL = { execute: function execute(t, e, i, r) {
            r || (r = o.random(8));var n = p.create({ keySize: e + i }).compute(t, r),
                s = o.create(n.words.slice(e), 4 * i);return n.sigBytes = 4 * e, y.create({ key: n, iv: s, salt: r });
          } },
            _ = r.PasswordBasedCipher = B.extend({ cfg: B.cfg.extend({ kdf: S }), encrypt: function encrypt(t, e, i, r) {
            r = this.cfg.extend(r);var n = r.kdf.execute(i, t.keySize, t.ivSize);r.iv = n.iv;var o = B.encrypt.call(this, t, e, n.key, r);return o.mixIn(n), o;
          }, decrypt: function decrypt(t, e, i, r) {
            r = this.cfg.extend(r), e = this._parse(e, r.format);var n = r.kdf.execute(i, t.keySize, t.ivSize, e.salt);r.iv = n.iv;var o = B.decrypt.call(this, t, e, n.key, r);return o;
          } });
      }();
    });
  }),
      modeCfb = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.mode.CFB = function () {
        function e(t, e, i, r) {
          var n = this._iv;if (n) {
            var o = n.slice(0);this._iv = void 0;
          } else var o = this._prevBlock;r.encryptBlock(o, 0);for (var s = 0; s < i; s++) {
            t[e + s] ^= o[s];
          }
        }var i = t.lib.BlockCipherMode.extend();return i.Encryptor = i.extend({ processBlock: function processBlock(t, i) {
            var r = this._cipher,
                n = r.blockSize;e.call(this, t, i, n, r), this._prevBlock = t.slice(i, i + n);
          } }), i.Decryptor = i.extend({ processBlock: function processBlock(t, i) {
            var r = this._cipher,
                n = r.blockSize,
                o = t.slice(i, i + n);e.call(this, t, i, n, r), this._prevBlock = o;
          } }), i;
      }(), t.mode.CFB;
    });
  }),
      modeCtr = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.mode.CTR = function () {
        var e = t.lib.BlockCipherMode.extend(),
            i = e.Encryptor = e.extend({ processBlock: function processBlock(t, e) {
            var i = this._cipher,
                r = i.blockSize,
                n = this._iv,
                o = this._counter;n && (o = this._counter = n.slice(0), this._iv = void 0);var s = o.slice(0);i.encryptBlock(s, 0), o[r - 1] = o[r - 1] + 1 | 0;for (var a = 0; a < r; a++) {
              t[e + a] ^= s[a];
            }
          } });return e.Decryptor = i, e;
      }(), t.mode.CTR;
    });
  }),
      modeCtrGladman = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.mode.CTRGladman = function () {
        function e(t) {
          if (255 === (t >> 24 & 255)) {
            var e = t >> 16 & 255,
                i = t >> 8 & 255,
                r = 255 & t;255 === e ? (e = 0, 255 === i ? (i = 0, 255 === r ? r = 0 : ++r) : ++i) : ++e, t = 0, t += e << 16, t += i << 8, t += r;
          } else t += 1 << 24;return t;
        }function i(t) {
          return 0 === (t[0] = e(t[0])) && (t[1] = e(t[1])), t;
        }var r = t.lib.BlockCipherMode.extend(),
            n = r.Encryptor = r.extend({ processBlock: function processBlock(t, e) {
            var r = this._cipher,
                n = r.blockSize,
                o = this._iv,
                s = this._counter;o && (s = this._counter = o.slice(0), this._iv = void 0), i(s);var a = s.slice(0);r.encryptBlock(a, 0);for (var c = 0; c < n; c++) {
              t[e + c] ^= a[c];
            }
          } });return r.Decryptor = n, r;
      }(), t.mode.CTRGladman;
    });
  }),
      modeOfb = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.mode.OFB = function () {
        var e = t.lib.BlockCipherMode.extend(),
            i = e.Encryptor = e.extend({ processBlock: function processBlock(t, e) {
            var i = this._cipher,
                r = i.blockSize,
                n = this._iv,
                o = this._keystream;n && (o = this._keystream = n.slice(0), this._iv = void 0), i.encryptBlock(o, 0);for (var s = 0; s < r; s++) {
              t[e + s] ^= o[s];
            }
          } });return e.Decryptor = i, e;
      }(), t.mode.OFB;
    });
  }),
      modeEcb = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.mode.ECB = function () {
        var e = t.lib.BlockCipherMode.extend();return e.Encryptor = e.extend({ processBlock: function processBlock(t, e) {
            this._cipher.encryptBlock(t, e);
          } }), e.Decryptor = e.extend({ processBlock: function processBlock(t, e) {
            this._cipher.decryptBlock(t, e);
          } }), e;
      }(), t.mode.ECB;
    });
  }),
      padAnsix923 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.pad.AnsiX923 = { pad: function pad(t, e) {
          var i = t.sigBytes,
              r = 4 * e,
              n = r - i % r,
              o = i + n - 1;t.clamp(), t.words[o >>> 2] |= n << 24 - o % 4 * 8, t.sigBytes += n;
        }, unpad: function unpad(t) {
          var e = 255 & t.words[t.sigBytes - 1 >>> 2];t.sigBytes -= e;
        } }, t.pad.Ansix923;
    });
  }),
      padIso10126 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.pad.Iso10126 = { pad: function pad(e, i) {
          var r = 4 * i,
              n = r - e.sigBytes % r;e.concat(t.lib.WordArray.random(n - 1)).concat(t.lib.WordArray.create([n << 24], 1));
        }, unpad: function unpad(t) {
          var e = 255 & t.words[t.sigBytes - 1 >>> 2];t.sigBytes -= e;
        } }, t.pad.Iso10126;
    });
  }),
      padIso97971 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.pad.Iso97971 = { pad: function pad(e, i) {
          e.concat(t.lib.WordArray.create([2147483648], 1)), t.pad.ZeroPadding.pad(e, i);
        }, unpad: function unpad(e) {
          t.pad.ZeroPadding.unpad(e), e.sigBytes--;
        } }, t.pad.Iso97971;
    });
  }),
      padZeropadding = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.pad.ZeroPadding = { pad: function pad(t, e) {
          var i = 4 * e;t.clamp(), t.sigBytes += i - (t.sigBytes % i || i);
        }, unpad: function unpad(t) {
          for (var e = t.words, i = t.sigBytes - 1; !(e[i >>> 2] >>> 24 - i % 4 * 8 & 255);) {
            i--;
          }t.sigBytes = i + 1;
        } }, t.pad.ZeroPadding;
    });
  }),
      padNopadding = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t.pad.NoPadding = { pad: function pad() {}, unpad: function unpad() {} }, t.pad.NoPadding;
    });
  }),
      formatHex = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function (e) {
        var i = t,
            r = i.lib,
            n = r.CipherParams,
            o = i.enc,
            s = o.Hex,
            a = i.format;a.Hex = { stringify: function stringify(t) {
            return t.ciphertext.toString(s);
          }, parse: function parse(t) {
            var e = s.parse(t);return n.create({ ciphertext: e });
          } };
      }(), t.format.Hex;
    });
  }),
      aes = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, encBase64, md5, evpkdf, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        var e = t,
            i = e.lib,
            r = i.BlockCipher,
            n = e.algo,
            o = [],
            s = [],
            a = [],
            c = [],
            h = [],
            p = [],
            u = [],
            l = [],
            f = [],
            d = [];!function () {
          for (var t = [], e = 0; e < 256; e++) {
            e < 128 ? t[e] = e << 1 : t[e] = e << 1 ^ 283;
          }for (var i = 0, r = 0, e = 0; e < 256; e++) {
            var n = r ^ r << 1 ^ r << 2 ^ r << 3 ^ r << 4;n = n >>> 8 ^ 255 & n ^ 99, o[i] = n, s[n] = i;var g = t[i],
                F = t[g],
                y = t[F],
                v = 257 * t[n] ^ 16843008 * n;a[i] = v << 24 | v >>> 8, c[i] = v << 16 | v >>> 16, h[i] = v << 8 | v >>> 24, p[i] = v;var v = 16843009 * y ^ 65537 * F ^ 257 * g ^ 16843008 * i;u[n] = v << 24 | v >>> 8, l[n] = v << 16 | v >>> 16, f[n] = v << 8 | v >>> 24, d[n] = v, i ? (i = g ^ t[t[t[y ^ g]]], r ^= t[t[r]]) : i = r = 1;
          }
        }();var g = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
            F = n.AES = r.extend({ _doReset: function _doReset() {
            if (!this._nRounds || this._keyPriorReset !== this._key) {
              for (var t = this._keyPriorReset = this._key, e = t.words, i = t.sigBytes / 4, r = this._nRounds = i + 6, n = 4 * (r + 1), s = this._keySchedule = [], a = 0; a < n; a++) {
                if (a < i) s[a] = e[a];else {
                  var c = s[a - 1];a % i ? i > 6 && a % i == 4 && (c = o[c >>> 24] << 24 | o[c >>> 16 & 255] << 16 | o[c >>> 8 & 255] << 8 | o[255 & c]) : (c = c << 8 | c >>> 24, c = o[c >>> 24] << 24 | o[c >>> 16 & 255] << 16 | o[c >>> 8 & 255] << 8 | o[255 & c], c ^= g[a / i | 0] << 24), s[a] = s[a - i] ^ c;
                }
              }for (var h = this._invKeySchedule = [], p = 0; p < n; p++) {
                var a = n - p;if (p % 4) var c = s[a];else var c = s[a - 4];p < 4 || a <= 4 ? h[p] = c : h[p] = u[o[c >>> 24]] ^ l[o[c >>> 16 & 255]] ^ f[o[c >>> 8 & 255]] ^ d[o[255 & c]];
              }
            }
          }, encryptBlock: function encryptBlock(t, e) {
            this._doCryptBlock(t, e, this._keySchedule, a, c, h, p, o);
          }, decryptBlock: function decryptBlock(t, e) {
            var i = t[e + 1];t[e + 1] = t[e + 3], t[e + 3] = i, this._doCryptBlock(t, e, this._invKeySchedule, u, l, f, d, s);var i = t[e + 1];t[e + 1] = t[e + 3], t[e + 3] = i;
          }, _doCryptBlock: function _doCryptBlock(t, e, i, r, n, o, s, a) {
            for (var c = this._nRounds, h = t[e] ^ i[0], p = t[e + 1] ^ i[1], u = t[e + 2] ^ i[2], l = t[e + 3] ^ i[3], f = 4, d = 1; d < c; d++) {
              var g = r[h >>> 24] ^ n[p >>> 16 & 255] ^ o[u >>> 8 & 255] ^ s[255 & l] ^ i[f++],
                  F = r[p >>> 24] ^ n[u >>> 16 & 255] ^ o[l >>> 8 & 255] ^ s[255 & h] ^ i[f++],
                  y = r[u >>> 24] ^ n[l >>> 16 & 255] ^ o[h >>> 8 & 255] ^ s[255 & p] ^ i[f++],
                  v = r[l >>> 24] ^ n[h >>> 16 & 255] ^ o[p >>> 8 & 255] ^ s[255 & u] ^ i[f++];h = g, p = F, u = y, l = v;
            }var g = (a[h >>> 24] << 24 | a[p >>> 16 & 255] << 16 | a[u >>> 8 & 255] << 8 | a[255 & l]) ^ i[f++],
                F = (a[p >>> 24] << 24 | a[u >>> 16 & 255] << 16 | a[l >>> 8 & 255] << 8 | a[255 & h]) ^ i[f++],
                y = (a[u >>> 24] << 24 | a[l >>> 16 & 255] << 16 | a[h >>> 8 & 255] << 8 | a[255 & p]) ^ i[f++],
                v = (a[l >>> 24] << 24 | a[h >>> 16 & 255] << 16 | a[p >>> 8 & 255] << 8 | a[255 & u]) ^ i[f++];t[e] = g, t[e + 1] = F, t[e + 2] = y, t[e + 3] = v;
          }, keySize: 8 });e.AES = r._createHelper(F);
      }(), t.AES;
    });
  }),
      tripledes = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, encBase64, md5, evpkdf, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e(t, e) {
          var i = (this._lBlock >>> t ^ this._rBlock) & e;this._rBlock ^= i, this._lBlock ^= i << t;
        }function i(t, e) {
          var i = (this._rBlock >>> t ^ this._lBlock) & e;this._lBlock ^= i, this._rBlock ^= i << t;
        }var r = t,
            n = r.lib,
            o = n.WordArray,
            s = n.BlockCipher,
            a = r.algo,
            c = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
            h = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
            p = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
            u = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }],
            l = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
            f = a.DES = s.extend({ _doReset: function _doReset() {
            for (var t = this._key, e = t.words, i = [], r = 0; r < 56; r++) {
              var n = c[r] - 1;i[r] = e[n >>> 5] >>> 31 - n % 32 & 1;
            }for (var o = this._subKeys = [], s = 0; s < 16; s++) {
              for (var a = o[s] = [], u = p[s], r = 0; r < 24; r++) {
                a[r / 6 | 0] |= i[(h[r] - 1 + u) % 28] << 31 - r % 6, a[4 + (r / 6 | 0)] |= i[28 + (h[r + 24] - 1 + u) % 28] << 31 - r % 6;
              }a[0] = a[0] << 1 | a[0] >>> 31;for (var r = 1; r < 7; r++) {
                a[r] = a[r] >>> 4 * (r - 1) + 3;
              }a[7] = a[7] << 5 | a[7] >>> 27;
            }for (var l = this._invSubKeys = [], r = 0; r < 16; r++) {
              l[r] = o[15 - r];
            }
          }, encryptBlock: function encryptBlock(t, e) {
            this._doCryptBlock(t, e, this._subKeys);
          }, decryptBlock: function decryptBlock(t, e) {
            this._doCryptBlock(t, e, this._invSubKeys);
          }, _doCryptBlock: function _doCryptBlock(t, r, n) {
            var o = this;this._lBlock = t[r], this._rBlock = t[r + 1], e.call(this, 4, 252645135), e.call(this, 16, 65535), i.call(this, 2, 858993459), i.call(this, 8, 16711935), e.call(this, 1, 1431655765);for (var s = 0; s < 16; s++) {
              for (var a = n[s], c = o._lBlock, h = o._rBlock, p = 0, f = 0; f < 8; f++) {
                p |= u[f][((h ^ a[f]) & l[f]) >>> 0];
              }o._lBlock = h, o._rBlock = c ^ p;
            }var d = this._lBlock;this._lBlock = this._rBlock, this._rBlock = d, e.call(this, 1, 1431655765), i.call(this, 8, 16711935), i.call(this, 2, 858993459), e.call(this, 16, 65535), e.call(this, 4, 252645135), t[r] = this._lBlock, t[r + 1] = this._rBlock;
          }, keySize: 2, ivSize: 2, blockSize: 2 });r.DES = s._createHelper(f);var d = a.TripleDES = s.extend({ _doReset: function _doReset() {
            var t = this._key,
                e = t.words;this._des1 = f.createEncryptor(o.create(e.slice(0, 2))), this._des2 = f.createEncryptor(o.create(e.slice(2, 4))), this._des3 = f.createEncryptor(o.create(e.slice(4, 6)));
          }, encryptBlock: function encryptBlock(t, e) {
            this._des1.encryptBlock(t, e), this._des2.decryptBlock(t, e), this._des3.encryptBlock(t, e);
          }, decryptBlock: function decryptBlock(t, e) {
            this._des3.decryptBlock(t, e), this._des2.encryptBlock(t, e), this._des1.decryptBlock(t, e);
          }, keySize: 6, ivSize: 2, blockSize: 2 });r.TripleDES = s._createHelper(d);
      }(), t.TripleDES;
    });
  }),
      rc4 = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, encBase64, md5, evpkdf, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e() {
          for (var t = this._S, e = this._i, i = this._j, r = 0, n = 0; n < 4; n++) {
            e = (e + 1) % 256, i = (i + t[e]) % 256;var o = t[e];t[e] = t[i], t[i] = o, r |= t[(t[e] + t[i]) % 256] << 24 - 8 * n;
          }return this._i = e, this._j = i, r;
        }var i = t,
            r = i.lib,
            n = r.StreamCipher,
            o = i.algo,
            s = o.RC4 = n.extend({ _doReset: function _doReset() {
            for (var t = this._key, e = t.words, i = t.sigBytes, r = this._S = [], n = 0; n < 256; n++) {
              r[n] = n;
            }for (var n = 0, o = 0; n < 256; n++) {
              var s = n % i,
                  a = e[s >>> 2] >>> 24 - s % 4 * 8 & 255;o = (o + r[n] + a) % 256;var c = r[n];r[n] = r[o], r[o] = c;
            }this._i = this._j = 0;
          }, _doProcessBlock: function _doProcessBlock(t, i) {
            t[i] ^= e.call(this);
          }, keySize: 8, ivSize: 0 });i.RC4 = n._createHelper(s);var a = o.RC4Drop = s.extend({ cfg: s.cfg.extend({ drop: 192 }), _doReset: function _doReset() {
            var t = this;s._doReset.call(this);for (var i = this.cfg.drop; i > 0; i--) {
              e.call(t);
            }
          } });i.RC4Drop = n._createHelper(a);
      }(), t.RC4;
    });
  }),
      rabbit = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, encBase64, md5, evpkdf, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e() {
          for (var t = this._X, e = this._C, i = 0; i < 8; i++) {
            a[i] = e[i];
          }e[0] = e[0] + 1295307597 + this._b | 0, e[1] = e[1] + 3545052371 + (e[0] >>> 0 < a[0] >>> 0 ? 1 : 0) | 0, e[2] = e[2] + 886263092 + (e[1] >>> 0 < a[1] >>> 0 ? 1 : 0) | 0, e[3] = e[3] + 1295307597 + (e[2] >>> 0 < a[2] >>> 0 ? 1 : 0) | 0, e[4] = e[4] + 3545052371 + (e[3] >>> 0 < a[3] >>> 0 ? 1 : 0) | 0, e[5] = e[5] + 886263092 + (e[4] >>> 0 < a[4] >>> 0 ? 1 : 0) | 0, e[6] = e[6] + 1295307597 + (e[5] >>> 0 < a[5] >>> 0 ? 1 : 0) | 0, e[7] = e[7] + 3545052371 + (e[6] >>> 0 < a[6] >>> 0 ? 1 : 0) | 0, this._b = e[7] >>> 0 < a[7] >>> 0 ? 1 : 0;for (var i = 0; i < 8; i++) {
            var r = t[i] + e[i],
                n = 65535 & r,
                o = r >>> 16,
                s = ((n * n >>> 17) + n * o >>> 15) + o * o,
                h = ((4294901760 & r) * r | 0) + ((65535 & r) * r | 0);c[i] = s ^ h;
          }t[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, t[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, t[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, t[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, t[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, t[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, t[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, t[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0;
        }var i = t,
            r = i.lib,
            n = r.StreamCipher,
            o = i.algo,
            s = [],
            a = [],
            c = [],
            h = o.Rabbit = n.extend({ _doReset: function _doReset() {
            for (var t = this, i = this._key.words, r = this.cfg.iv, n = 0; n < 4; n++) {
              i[n] = 16711935 & (i[n] << 8 | i[n] >>> 24) | 4278255360 & (i[n] << 24 | i[n] >>> 8);
            }var o = this._X = [i[0], i[3] << 16 | i[2] >>> 16, i[1], i[0] << 16 | i[3] >>> 16, i[2], i[1] << 16 | i[0] >>> 16, i[3], i[2] << 16 | i[1] >>> 16],
                s = this._C = [i[2] << 16 | i[2] >>> 16, 4294901760 & i[0] | 65535 & i[1], i[3] << 16 | i[3] >>> 16, 4294901760 & i[1] | 65535 & i[2], i[0] << 16 | i[0] >>> 16, 4294901760 & i[2] | 65535 & i[3], i[1] << 16 | i[1] >>> 16, 4294901760 & i[3] | 65535 & i[0]];this._b = 0;for (var n = 0; n < 4; n++) {
              e.call(t);
            }for (var n = 0; n < 8; n++) {
              s[n] ^= o[n + 4 & 7];
            }if (r) {
              var a = r.words,
                  c = a[0],
                  h = a[1],
                  p = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
                  u = 16711935 & (h << 8 | h >>> 24) | 4278255360 & (h << 24 | h >>> 8),
                  l = p >>> 16 | 4294901760 & u,
                  f = u << 16 | 65535 & p;s[0] ^= p, s[1] ^= l, s[2] ^= u, s[3] ^= f, s[4] ^= p, s[5] ^= l, s[6] ^= u, s[7] ^= f;for (var n = 0; n < 4; n++) {
                e.call(t);
              }
            }
          }, _doProcessBlock: function _doProcessBlock(t, i) {
            var r = this._X;e.call(this), s[0] = r[0] ^ r[5] >>> 16 ^ r[3] << 16, s[1] = r[2] ^ r[7] >>> 16 ^ r[5] << 16, s[2] = r[4] ^ r[1] >>> 16 ^ r[7] << 16, s[3] = r[6] ^ r[3] >>> 16 ^ r[1] << 16;for (var n = 0; n < 4; n++) {
              s[n] = 16711935 & (s[n] << 8 | s[n] >>> 24) | 4278255360 & (s[n] << 24 | s[n] >>> 8), t[i + n] ^= s[n];
            }
          }, blockSize: 4, ivSize: 2 });i.Rabbit = n._createHelper(h);
      }(), t.Rabbit;
    });
  }),
      rabbitLegacy = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, encBase64, md5, evpkdf, cipherCore) : r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return function () {
        function e() {
          for (var t = this._X, e = this._C, i = 0; i < 8; i++) {
            a[i] = e[i];
          }e[0] = e[0] + 1295307597 + this._b | 0, e[1] = e[1] + 3545052371 + (e[0] >>> 0 < a[0] >>> 0 ? 1 : 0) | 0, e[2] = e[2] + 886263092 + (e[1] >>> 0 < a[1] >>> 0 ? 1 : 0) | 0, e[3] = e[3] + 1295307597 + (e[2] >>> 0 < a[2] >>> 0 ? 1 : 0) | 0, e[4] = e[4] + 3545052371 + (e[3] >>> 0 < a[3] >>> 0 ? 1 : 0) | 0, e[5] = e[5] + 886263092 + (e[4] >>> 0 < a[4] >>> 0 ? 1 : 0) | 0, e[6] = e[6] + 1295307597 + (e[5] >>> 0 < a[5] >>> 0 ? 1 : 0) | 0, e[7] = e[7] + 3545052371 + (e[6] >>> 0 < a[6] >>> 0 ? 1 : 0) | 0, this._b = e[7] >>> 0 < a[7] >>> 0 ? 1 : 0;for (var i = 0; i < 8; i++) {
            var r = t[i] + e[i],
                n = 65535 & r,
                o = r >>> 16,
                s = ((n * n >>> 17) + n * o >>> 15) + o * o,
                h = ((4294901760 & r) * r | 0) + ((65535 & r) * r | 0);c[i] = s ^ h;
          }t[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, t[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, t[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, t[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, t[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, t[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, t[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, t[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0;
        }var i = t,
            r = i.lib,
            n = r.StreamCipher,
            o = i.algo,
            s = [],
            a = [],
            c = [],
            h = o.RabbitLegacy = n.extend({ _doReset: function _doReset() {
            var t = this,
                i = this._key.words,
                r = this.cfg.iv,
                n = this._X = [i[0], i[3] << 16 | i[2] >>> 16, i[1], i[0] << 16 | i[3] >>> 16, i[2], i[1] << 16 | i[0] >>> 16, i[3], i[2] << 16 | i[1] >>> 16],
                o = this._C = [i[2] << 16 | i[2] >>> 16, 4294901760 & i[0] | 65535 & i[1], i[3] << 16 | i[3] >>> 16, 4294901760 & i[1] | 65535 & i[2], i[0] << 16 | i[0] >>> 16, 4294901760 & i[2] | 65535 & i[3], i[1] << 16 | i[1] >>> 16, 4294901760 & i[3] | 65535 & i[0]];this._b = 0;for (var s = 0; s < 4; s++) {
              e.call(t);
            }for (var s = 0; s < 8; s++) {
              o[s] ^= n[s + 4 & 7];
            }if (r) {
              var a = r.words,
                  c = a[0],
                  h = a[1],
                  p = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
                  u = 16711935 & (h << 8 | h >>> 24) | 4278255360 & (h << 24 | h >>> 8),
                  l = p >>> 16 | 4294901760 & u,
                  f = u << 16 | 65535 & p;o[0] ^= p, o[1] ^= l, o[2] ^= u, o[3] ^= f, o[4] ^= p, o[5] ^= l, o[6] ^= u, o[7] ^= f;for (var s = 0; s < 4; s++) {
                e.call(t);
              }
            }
          }, _doProcessBlock: function _doProcessBlock(t, i) {
            var r = this._X;e.call(this), s[0] = r[0] ^ r[5] >>> 16 ^ r[3] << 16, s[1] = r[2] ^ r[7] >>> 16 ^ r[5] << 16, s[2] = r[4] ^ r[1] >>> 16 ^ r[7] << 16, s[3] = r[6] ^ r[3] >>> 16 ^ r[1] << 16;for (var n = 0; n < 4; n++) {
              s[n] = 16711935 & (s[n] << 8 | s[n] >>> 24) | 4278255360 & (s[n] << 24 | s[n] >>> 8), t[i + n] ^= s[n];
            }
          }, blockSize: 4, ivSize: 2 });i.RabbitLegacy = n._createHelper(h);
      }(), t.RabbitLegacy;
    });
  }),
      index = createCommonjsModule(function (t, e) {
    !function (i, r, n) {
      "object" == (typeof e === "undefined" ? "undefined" : _typeof(e)) ? t.exports = e = r(core, x64Core, libTypedarrays, encUtf16, encBase64, md5, sha1, sha256, sha224, sha512, sha384, sha3, ripemd160, hmac, pbkdf2, evpkdf, cipherCore, modeCfb, modeCtr, modeCtrGladman, modeOfb, modeEcb, padAnsix923, padIso10126, padIso97971, padZeropadding, padNopadding, formatHex, aes, tripledes, rc4, rabbit, rabbitLegacy) : i.CryptoJS = r(i.CryptoJS);
    }(commonjsGlobal, function (t) {
      return t;
    });
  });readonlyProperty(Crypto.prototype, "name", "crypto"), Crypto.prototype.encrypt = function (t, e) {
    var i = "";if (t) {
      var r = t.params || {};try {
        switch (t.mode) {case "MD5":
            i = index.MD5(t.source).toString(), "16" === r.length && (i = i.substr(8, 16));break;case "SHA1":
            i = index.SHA1(t.source).toString();break;case "SHA256":
            i = index.SHA256(t.source).toString();break;case "3DES":
            var n = index.enc.Utf8.parse(r.secretKey),
                o = index.TripleDES.encrypt(t.source, n, { mode: index.mode.ECB, padding: index.pad.Pkcs7 });i = o.toString();break;case "AES":
            var s = index.enc.Utf8.parse(r.secretKey),
                a = index.AES.encrypt(t.source, s, { mode: index.mode.CBC, padding: index.pad.Pkcs7 });i = a.toString();break;case "RSA":
            var c = new RSAKey$1();c.setPublic(r.secretKeyN, r.secretKeyE), i = c.encrypt(t.source);break;case "SM2":
            var h = SM2.CryptoJS.enc.Utf8.parse(t.source),
                p = r.cipherMode || SM2.SM2CipherMode.C1C3C2,
                u = new SM2.SM2Cipher(p),
                l = u.CreatePoint(r.secretKeyX, r.secretKeyY),
                f = u.GetWords(h.toString());i = u.Encrypt(l, f);}"function" == typeof e && e(null, i);
      } catch (t) {
        "function" == typeof e && e({ code: "", message: t.message || "\u52A0\u5BC6\u5931\u8D25" });
      }
    } else "function" == typeof e && e({ code: "", message: "\u53C2\u6570\u9519\u8BEF" });return this;
  }, Crypto.prototype.decrypt = function (t, e) {
    var i = "";if (t && t.params) {
      if ("3DES" === t.mode && t.params.secretKey) {
        var r = index.enc.Utf8.parse(t.params.secretKey),
            n = index.TripleDES.decrypt(t.source, r, { mode: index.mode.ECB, padding: index.pad.Pkcs7 });i = index.enc.Utf8.stringify(n);
      }"function" == typeof e && e(null, i);
    } else "function" == typeof e && e({ code: "", message: "options\u4E3A\u5FC5\u586B\u53C2\u6570" }, null);return this;
  }, readonlyProperty(Device.prototype, "name", "device"), Device.prototype.getInfo = function (t) {
    t = t || function () {};var e = { deviceId: "uuid123", deviceName: "my iPhone 6s", deviceModel: "iPhone 6s", osName: "IOS", osVersion: "9.3.2", appVersion: "1.1.2" };return t(null, e), this;
  }, readonlyProperty(Header.prototype, "name", "header"), Header.prototype._injectStyle = function () {
    var t = "#aladdin-header-body{position:absolute;top:56px;left:0;right:0;bottom:0;overflow:auto}#aladdin-header-bar{position:absolute;top:0;left:0;width:100%;z-index:1000;height:56px;box-sizing:border-box;background-color:#2196f3}.aladdin-header-cell{position:absolute;height:100%;vertical-align:middle;box-sizing:border-box}.aladdin-header-left-btn{padding:10px;text-align:center;left:0;top:0;color:#fff;font-size:16px}.aladdin-header-left-icon{width:12px;height:24px;margin-top:6px;float:left}.aladdin-header-left-text{height:36px;line-height:36px;padding-left:5px;float:left}.aladdin-header-right-btn{padding:10px;text-align:center;right:0;top:0;color:#fff;font-size:16px}.aladdin-header-right-icon{width:24px;height:24px;margin-top:6px}.aladdin-header-right-text{height:36px;line-height:36px}.aladdin-header-title{left:50%;top:0;width:180px;margin-left:-90px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;z-index:1000;font-size:20px;text-align:center;line-height:56px;color:#fff}",
        e = t,
        i = document.createElement("style");i.setAttribute("type", "text/css"), i.styleSheet ? i.styleSheet.cssText += e : document.getBoxObjectFor ? i.innerHTML += e : i.appendChild(document.createTextNode(e)), document.head.appendChild(i);
  }, Header.prototype._display = function () {
    var t = document.getElementById("aladdin-header-bar");if (!t) {
      var e = window.sessionStorage.getItem("aladdin-header-opts");if (e) try {
        e = JSON.parse(e), e.title || (e.title = document.title);
      } catch (t) {
        e = {};
      }this.config(e);
    }
  }, Header.prototype.config = function (t, e) {
    var i = this._getHeader();return t || (t = {}), this._setBackground(i, t), this._setTitle(i, t), this._setLeftBtn(i, t), this._setRightBtn(i, t), "function" == typeof e && e(), this;
  };var headerNavHtml = '<div class="aladdin-header-bar"><div class="aladdin-header-cell aladdin-header-left-btn"><img class="aladdin-header-left-icon"/><span class="aladdin-header-left-text"></span></div><div class="aladdin-header-cell aladdin-header-title"></div><div class="aladdin-header-cell aladdin-header-right-btn"><img class="aladdin-header-right-icon"/><span class="aladdin-header-right-text"></span></div></div';Header.prototype._getHeader = function () {
    var t = document.getElementById("aladdin-header-bar");if (!t) {
      var e = document.createElement("div");e.id = "aladdin-header-body", document.body.appendChild(e);for (var i = document.body.childNodes, r = i.length - 1; r >= 0; r--) {
        var n = i[r];n !== e && "SCRIPT" !== n.nodeName && e.insertBefore(n, e.childNodes[0]);
      }t = document.createElement("div"), t.id = "aladdin-header-bar", t.innerHTML = headerNavHtml, document.body.style.overflow = "hidden", document.body.appendChild(t);
    }return t;
  }, Header.prototype._setBackground = function (t, e) {
    t.style.backgroundColor = e.backgroundColor || "";
  }, Header.prototype._setTitle = function (t, e) {
    var i = t.getElementsByClassName("aladdin-header-title")[0];return e.title ? (i.style.display = "block", i.style.color = e.color || "", i.style.fontSize = e.fontSize || "", void (i.innerText = e.title)) : void (i.style.display = "none");
  }, Header.prototype._setLeftBtn = function (t, e) {
    var i = this,
        r = t.getElementsByClassName("aladdin-header-left-btn")[0];if ("undefined" != typeof e.leftButtonVisible && !e.leftButtonVisible) return void (r.style.display = "none");r.style.display = "block", r.style.backgroundColor = e.leftButtonBackgroundColor || "";var n = r.getElementsByClassName("aladdin-header-left-icon")[0];e.leftButtonIcon ? (n.style.display = "block", n.src = e.leftButtonIcon) : (n.style.display = "none", n.src = "");var o = r.getElementsByClassName("aladdin-header-left-text")[0],
        s = e.leftButtonText;"string" != typeof s && (s = e.leftButtonIcon ? "" : "\u8FD4\u56DE"), o.innerText = s, o.style.fontSize = e.leftButtonFontSize + "px" || "", o.style.color = e.leftButtonTextColor || "", this._handleLeftBtn && r.removeEventListener("click", this._handleLeftBtn), this._handleLeftBtn = function () {
      "function" == typeof e.leftButtonCallback ? e.leftButtonCallback() : i.aladdin && i.aladdin.navigator && i.aladdin.navigator.back();
    }, r.addEventListener("click", this._handleLeftBtn);
  }, Header.prototype._setRightBtn = function (t, e) {
    var i = t.getElementsByClassName("aladdin-header-right-btn")[0];if (!e.rightButtonVisible) return void (i.style.display = "none");i.style.display = "block", i.style.backgroundColor = e.rightButtonBackgroundColor || "";var r = i.getElementsByClassName("aladdin-header-right-icon")[0],
        n = i.getElementsByClassName("aladdin-header-right-text")[0];e.rightButtonIcon ? (r.style.display = "block", r.src = e.rightButtonIcon, n.style.display = "none") : (r.style.display = "none", r.src = "", n.style.display = "block", n.innerText = e.rightButtonText || "\u5173\u95ED", n.style.fontSize = e.rightButtonFontSize + "px" || "", n.style.color = e.rightButtonTextColor || ""), this._handlRightBtn && i.removeEventListener("click", this._handlRightBtn), this._handlRightBtn = function () {
      "function" == typeof e.rightButtonCallback ? e.rightButtonCallback() : aladdin.navigator && aladdin.navigator.backTop();
    }, i.addEventListener("click", this._handlRightBtn);
  }, readonlyProperty(Http.prototype, "name", "http"), Http.prototype.request = function (t, e) {
    t = filterOpts(t);var i = new XMLHttpRequest();i.timeout = t.timeout, i.onreadystatechange = function () {
      if (i.readyState === XMLHttpRequest.DONE) if (200 === i.status) {
        var t = { status: i.status, statusText: i.statusText, headers: i.getAllResponseHeaders(), body: i.responseText, text: function text() {
            return i.responseText;
          }, json: function json() {
            return JSON.parse(i.responseText);
          } };e && e(null, t);
      } else e && e({ code: i.status, message: "\u8BF7\u6C42\u7F51\u7EDC\u5931\u8D25" });
    }, i.open(t.method, t.url, !0);var r = t.xhrFields || {};for (var n in r) {
      i[n] = r[n];
    }for (var o in t.headers) {
      t.headers.hasOwnProperty(o) && i.setRequestHeader(o, t.headers[o]);
    }return i.send(t.body), this;
  }, Http.prototype.upload = function (t, e) {
    if ("function" != typeof e) return this;if (t = t || {}, !t.url) return e({ code: 1005, message: "url\u662F\u5FC5\u987B\u7684" }), this;if (!/^data:image.+?base64,/.test(t.filePath)) return e({ code: 1005, message: "\u6682\u4E0D\u652F\u6301\u8BE5filePath\u6570\u636E" }), this;t.url = join(t.url, t.qs);var i = t.filePath.split(","),
        r = /image\/jpeg/.test(i[0]) ? "image/jpeg" : "image/png",
        n = i[1];n = window.atob(n);for (var o = new Uint8Array(n.length), s = 0; s < n.length; s++) {
      o[s] = n.charCodeAt(s);
    }var a = new Blob([o], { type: r }),
        c = new FormData();if (c.append(t.fileDataName || "file", a), c.processData = !1, c.contentType = !1, "object" == _typeof(t.body)) for (var h in t.body) {
      c.append(h, t.body[h]);
    }var p = new XMLHttpRequest();return p.open("post", t.url, !0), p.send(c), p.timeout = t.timeout, p.onreadystatechange = function () {
      if (p.readyState === XMLHttpRequest.DONE) if (200 === p.status) {
        var i = { status: p.status, statusText: p.statusText, headers: p.getAllResponseHeaders(), body: p.responseText };"function" == typeof t.onProcess && t.onProcess(null, 1), e && e(null, i);
      } else e({ code: p.status, message: "\u8BF7\u6C42\u7F51\u7EDC\u5931\u8D25" });
    }, this;
  }, Http.prototype.download = function (t, e) {
    if (t = t || {}, !("string" == typeof t.url || t.url instanceof String)) return "function" == typeof e && e({ code: 1005, message: "url\u662F\u5FC5\u987B\u7684" }), this;var i = document.createElement("iframe");i.style = "opacity:0;width:0;height:0;position: absolute;";var r = document.createElement("a");r.setAttribute("href", t.url);var n = t.url.split("/");r.setAttribute("download", n[n.length - 1]), i.appendChild(r), document.body.appendChild(i);var o = document.createEvent("MouseEvents");return o.initEvent("click", !0, !0), r.dispatchEvent(o), setTimeout(function () {
      i.remove();
    }, 500), "function" == typeof t.onProcess && t.onProcess(null, 1), "function" == typeof e && e(null, { filePath: "" }), this;
  }, Http.prototype.setCookie = function (t, e) {
    if (t = t || {}, "function" != typeof e && (e = function e() {}), !t.key) return e({ code: 1005, message: "key\u662F\u5FC5\u987B\u7684" }), this;var i = t.key + "=" + encodeURIComponent(t.value) + ";";return t.path && (i += "path=" + t.path + ";"), t.domain && (i += "domain=" + t.domain + ";"), t.expires && (i += "expires=" + new Date(Date.now() + t.expires).toUTCString() + ";"), document.cookie = i, e(null, {}), this;
  }, Http.prototype.getCookie = function (t, e) {
    if ("function" != typeof e) return this;if (!t.key) return e({ code: 1005, message: "key\u662F\u5FC5\u987B\u7684" }), this;var i = "";if (document.cookie.length > 0) {
      var r = document.cookie.indexOf(t.key + "=");if (r !== -1) {
        r = r + t.key.length + 1;var n = document.cookie.indexOf(";", r);n === -1 && (n = document.cookie.length), i = decodeURIComponent(document.cookie.substring(r, n));
      }
    }return e(null, i), this;
  }, Http.prototype.removeCookie = function (t, e) {
    return t = t || {}, "function" != typeof e && (e = function e() {}), t.key ? (document.cookie = t.key + "=;", e(null, {}), this) : (e({ code: 1005, message: "key\u662F\u5FC5\u987B\u7684" }), this);
  };var toString = Object.prototype.toString,
      __stringfy = function __stringfy(t) {
    return "string" != typeof t && ("[object Null]" === toString.call(t) || "undefined" == typeof t ? t += "" : t = t.toString()), t;
  };readonlyProperty(LocalStorage.prototype, "name", "localStorage"), LocalStorage.prototype.getItem = function (t, e, i, r) {
    if ("function" != typeof r && (r = i, i = e), "function" != typeof r && (r = e, i = e = void 0), "function" != typeof r) return this;"string" != typeof i && (i = "3DES"), "boolean" != typeof e && (e = !1), t = __stringfy(t);var n = window.localStorage.getItem(t);return n && this._aladdin.crypto ? this._aladdin.crypto.decrypt({ mode: "3DES", source: n, params: { format: 16, secretKey: this._secretKey } }, function (t, e) {
      if (t) r && r(t);else {
        var i = JSON.parse(e);r && r(null, i);
      }
    }) : ("string" == typeof n && (n = JSON.parse(n)), r && r(null, n)), this;
  }, LocalStorage.prototype.setItem = function (t, e, i, r, n) {
    return "boolean" != typeof i && (n = r, r = i, i = !1), "string" != typeof r && (n = r, r = "3DES"), "function" != typeof n && (n = void 0), t = __stringfy(t), e = _JSON$stringify(e), this._aladdin.crypto ? this._aladdin.crypto.encrypt({ mode: "3DES", source: e, params: { secretKey: this._secretKey, format: 16 } }, function (e, i) {
      e ? n && n(e) : (window.localStorage.setItem(t, i), n && n(null));
    }) : (window.localStorage.setItem(t, e), n && n(null)), this;
  }, LocalStorage.prototype.removeItem = function (t, e, i) {
    return "boolean" != typeof e && (i = e, e = !1), "function" != typeof i && (i = void 0), t = __stringfy(t), window.localStorage.removeItem(t), i && i(null), this;
  }, LocalStorage.prototype.clear = function (t) {
    return window.localStorage.clear(), "function" == typeof t && t(null), this;
  };var PAGE_HISTORY_STACK_KEY = "PAGE_HISTORY_STACK_KEY",
      historyStack = window.sessionStorage.getItem(PAGE_HISTORY_STACK_KEY);historyStack = historyStack ? JSON.parse(historyStack) : [];var nativeHistory = { back: window.history.back.bind(window.history), go: window.history.go.bind(window.history), forward: window.history.forward.bind(window.history) };readonlyProperty(Navigator.prototype, "name", "navigator"), Navigator.prototype.forward = function (t, e) {
    return "function" == typeof e && e(), t && "object" == (typeof t === "undefined" ? "undefined" : _typeof(t)) && ("string" == typeof t.title && window.sessionStorage.setItem("aladdin-header-opts", _JSON$stringify({ title: t.title })), "string" == typeof t.url && (t.url = join(t.url, t.qs), window.location.href = t.url)), this;
  }, Navigator.prototype.back = function (t, e) {
    return "function" == typeof e && e(), t && "string" == typeof t.title && window.sessionStorage.setItem("aladdin-header-opts", _JSON$stringify({ title: t.title })), nativeHistory.back(), this;
  }, Navigator.prototype.backTop = function (t, e) {
    var i = historyStack.length;historyStack = [], window.sessionStorage.setItem(PAGE_HISTORY_STACK_KEY, _JSON$stringify(historyStack)), nativeHistory.go(parseInt("-" + (i - 1)));
  }, readonlyProperty(Network.prototype, "name", "network"), Network.prototype.getInfo = function (t) {
    return "function" == typeof t && t(null, { type: "WIFI", isAvailable: !0 }), this;
  };var toString$1 = Object.prototype.toString,
      __stringfy$1 = function __stringfy$1(t) {
    return "string" != typeof t && ("[object Null]" === toString$1.call(t) || "undefined" == typeof t ? t += "" : t = t.toString()), t;
  };readonlyProperty(SessionStorage.prototype, "name", "sessionStorage"), SessionStorage.prototype.getItem = function (t, e, i, r) {
    if ("function" != typeof r && (r = i, i = e), "function" != typeof r && (r = e, i = e = void 0), "function" != typeof r) return this;"string" != typeof i && (i = "3DES"), "boolean" != typeof e && (e = !1), t = __stringfy$1(t);var n = window.sessionStorage.getItem(t);return n && this._aladdin.crypto ? this._aladdin.crypto.decrypt({ mode: "3DES", source: n, params: { format: 16, secretKey: this._secretKey } }, function (t, e) {
      if (t) r && r(t);else {
        var i = JSON.parse(e);r && r(null, i);
      }
    }) : ("string" == typeof n && (n = JSON.parse(n)), r && r(null, n)), this;
  }, SessionStorage.prototype.setItem = function (t, e, i, r, n) {
    return "boolean" != typeof i && (n = r, r = i, i = !1), "string" != typeof r && (n = r, r = "3DES"), "function" != typeof n && (n = void 0), t = __stringfy$1(t), e = _JSON$stringify(e), this._aladdin.crypto ? this._aladdin.crypto.encrypt({ mode: "3DES", source: e, params: { secretKey: this._secretKey, format: 16 } }, function (e, i) {
      e ? n && n(e) : (window.sessionStorage.setItem(t, i), n && n(null));
    }) : (window.sessionStorage.setItem(t, e), n && n(null)), this;
  }, SessionStorage.prototype.removeItem = function (t, e, i) {
    return "boolean" != typeof e && (i = e, e = !1), "function" != typeof i && (i = void 0), t = __stringfy$1(t), window.sessionStorage.removeItem(t), i && i(null), this;
  }, SessionStorage.prototype.clear = function (t) {
    return window.sessionStorage.clear(), "function" == typeof t && t(null), this;
  }, readonlyProperty(Page.prototype, "name", "page"), Page.prototype.bounce = function (t, e) {
    return "function" == typeof e && e(), this;
  }, Page.prototype.swipe = function (t, e) {
    return "function" == typeof e && e(), this;
  }, Page.prototype.config = function (t, e) {
    return "function" == typeof e && e(), this;
  }, Aladdin.prototype.broadcast = function (t, e, i, r) {
    !r && i && (r = i), "function" == typeof r && r();
  };var aladdin$1 = new Aladdin();return aladdin$1.env = env, aladdin$1.use(Crypto).use(Device).use(Header).use(Http).use(LocalStorage).use(Navigator).use(Network).use(SessionStorage).use(Page), installGlobalApi(aladdin$1), aladdin$1;
});