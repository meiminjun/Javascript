{"version":3,"sources":["src/store/modules/detail.js"],"names":["types","ald","api","state","info","userInfo","actions","queryCashInfo","commit","options","http","request","method","url","qs","res","responseCode","CASH_DETAIL_INFO","data","console","log","getUserInfo","CASH_USER_INFO","cb","mutations","payload"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,gBAArB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;AAEA,IAAMC,QAAQ;AACVC,UAAM,EADI;AAEVC,cAAU;AAFA,CAAd;;AAMA,IAAMC,UAAU;AACZC,mBAAe,6BAAyC;AAAA,YAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,YAAtBL,KAAsB,QAAtBA,KAAsB;AAAA,YAAdM,OAAc,uEAAJ,EAAI;;AACpDR,YAAIS,IAAJ,CAASC,OAAT,CAAiB;AACbC,oBAAQ,KADK;AAEbC,iBAAIX,IAAIK,aAFK;AAGbO,gBAAI;AAHS,SAAjB,EAIG,UAAUC,GAAV,EAAe;AACd,gBAAIA,OAAOA,IAAIC,YAAJ,IAAoB,QAA/B,EAAyC;AACrCR,uBAAOR,MAAMiB,gBAAb,EAA+B,EAACb,MAAMW,IAAIG,IAAJ,IAAY,EAAnB,EAA/B;AACH,aAFD,MAEO;AACHC,wBAAQC,GAAR,CAAYL,GAAZ;AACH;AACJ,SAVD;AAWH,KAbW;AAcZM,iBAAa,4BAAyC;AAAA,YAA9Bb,MAA8B,SAA9BA,MAA8B;AAAA,YAAtBL,KAAsB,SAAtBA,KAAsB;AAAA,YAAdM,OAAc,uEAAJ,EAAI;;AAClDR,YAAIS,IAAJ,CAASC,OAAT,CAAiB;AACbC,oBAAQ,KADK;AAEbC,iBAAIX,IAAImB,WAFK;AAGbP,gBAAI;AAHS,SAAjB,EAIG,UAAUC,GAAV,EAAe;AACd,gBAAIA,OAAOA,IAAIC,YAAJ,IAAoB,QAA/B,EAAyC;AACrCR,uBAAOR,MAAMsB,cAAb,EAA6B,EAACjB,UAAUU,IAAIG,IAAJ,IAAY,EAAvB,EAA7B;AACAT,wBAAQc,EAAR,IAAcd,QAAQc,EAAR,CAAWR,GAAX,CAAd;AACH,aAHD,MAGO;AACHI,wBAAQC,GAAR,CAAYL,GAAZ;AACH;AACJ,SAXD;AAYH;AA3BW,CAAhB;;AA+BA,IAAMS,0DACDxB,MAAMiB,gBADL,YACuBd,KADvB,EAC8BsB,OAD9B,EACuC;AACrCtB,UAAMC,IAAN,GAAaqB,QAAQrB,IAArB;AACH,CAHC,+BAIDJ,MAAMsB,cAJL,YAIqBnB,KAJrB,EAI4BsB,OAJ5B,EAIqC;AACnCtB,UAAME,QAAN,GAAiBoB,QAAQpB,QAAzB;AACH,CANC,cAAN;;AASA,eAAe;AACXF,gBADW;AAEXG,oBAFW;AAGXkB;AAHW,CAAf","file":"detail.js","sourceRoot":"/Users/apple/Documents/github/Javascript/vue2-paebank","sourcesContent":["import * as types from '../types';\nimport * as ald from '../../util/ald';\nimport api from '../../api/urls';\n\nconst state = {\n    info: {},\n    userInfo: {}\n}\n\n// actions\nconst actions = {\n    queryCashInfo: function ({commit, state}, options = {}) {\n        ald.http.request({\n            method: 'GET',\n            url:api.queryCashInfo,\n            qs: {}\n        }, function (res) {\n            if (res && res.responseCode == '000000') {\n                commit(types.CASH_DETAIL_INFO, {info: res.data || {}});\n            } else {\n                console.log(res);\n            }\n        });\n    },\n    getUserInfo: function ({commit, state}, options = {}) {\n        ald.http.request({\n            method: 'GET',\n            url:api.getUserInfo,\n            qs: {}\n        }, function (res) {\n            if (res && res.responseCode == '000000') {\n                commit(types.CASH_USER_INFO, {userInfo: res.data || {}});\n                options.cb && options.cb(res)\n            } else {\n                console.log(res);\n            }\n        });\n    }\n}\n\n// mutations\nconst mutations = {\n    [types.CASH_DETAIL_INFO](state, payload) {\n        state.info = payload.info;\n    },\n    [types.CASH_USER_INFO](state, payload) {\n        state.userInfo = payload.userInfo;\n    }\n}\n\nexport default {\n    state,\n    actions,\n    mutations\n}\n"]}